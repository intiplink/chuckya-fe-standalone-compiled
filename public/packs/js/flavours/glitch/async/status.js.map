{"version":3,"sources":["webpack:///./app/javascript/material-icons/400-24px/chat.svg","webpack:///app/javascript/var/home/testeraphy/Documents/Chuckya-fe-standalone/app/javascript/flavours/glitch/features/status/components/action_bar.jsx","webpack:///app/javascript/var/home/testeraphy/Documents/Chuckya-fe-standalone/app/javascript/flavours/glitch/components/edited_timestamp/containers/dropdown_menu_container.js","webpack:///app/javascript/var/home/testeraphy/Documents/Chuckya-fe-standalone/app/javascript/flavours/glitch/components/edited_timestamp/index.jsx","webpack:///app/javascript/var/home/testeraphy/Documents/Chuckya-fe-standalone/app/javascript/flavours/glitch/features/status/components/detailed_status.jsx","webpack:///app/javascript/var/home/testeraphy/Documents/Chuckya-fe-standalone/app/javascript/flavours/glitch/features/status/index.jsx"],"names":["_path","_extends","Object","assign","bind","n","e","arguments","length","t","r","hasOwnProperty","call","apply","_ref","title","titleId","props","xmlns","height","viewBox","width","id","d","messages","defineMessages","delete","defaultMessage","redraft","edit","direct","mention","reply","reblog","reblog_private","cancel_reblog_private","cannot_reblog","favourite","react","bookmark","more","mute","muteConversation","unmuteConversation","block","report","share","pin","unpin","embed","admin_account","admin_status","admin_domain","copy","openOriginalPage","ActionBar","PureComponent","constructor","_defineProperty","this","onReply","status","onReblog","onFavourite","data","onReactionAdd","get","native","replace","imageUrl","onBookmark","onDelete","history","onEdit","onDirect","onMention","onMute","onBlock","onMuteConversation","onReport","onPin","navigator","url","onEmbed","clipboard","writeText","render","intl","signedIn","permissions","identity","publicStatus","includes","pinnableStatus","mutingConversation","writtenByMe","getIn","me","isRemote","replyIcon","replyIconComponent","menu","push","text","formatMessage","href","action","handleCopy","handleShare","handleEmbed","handlePinClick","handleConversationMuteClick","handleEditClick","handleDeleteClick","dangerous","handleRedraftClick","name","handleMentionClick","handleDirectClick","handleMuteClick","handleBlockClick","handleReport","PERMISSION_MANAGE_USERS","accountAdminLink","statusAdminLink","PERMISSION_MANAGE_FEDERATION","undefined","domain","split","concat","ReplyIcon","ReplyAllIcon","canReact","filter","size","maxReactions","reblogPrivate","reblogTitle","reblogIconComponent","RepeatActiveIcon","RepeatPrivateActiveIcon","RepeatIcon","RepeatPrivateIcon","RepeatDisabledIcon","_jsx","className","IconButton","icon","iconComponent","onClick","handleReplyClick","classNames","disabled","active","handleReblogClick","animate","StarIcon","StarBorderIcon","handleFavouriteClick","EmojiPickerDropdown","onPickEmoji","handleEmojiPick","AddReactionIcon","BookmarkIcon","BookmarkBorderIcon","handleBookmarkClick","DropdownMenuContainer","MoreHorizIcon","items","direction","withRouter","withIdentity","injectIntl","connect","mapStateToProps","state","statusId","openDropdownId","dropdownMenu","openId","openedViaKeyboard","keyboard","loading","mapDispatchToProps","dispatch","_ref2","onOpen","onItemClick","fetchHistory","openDropdownMenu","onClose","closeDropdownMenu","DropdownMenu","EditedTimestamp","item","i","FormattedMessage","values","count","index","onKeyPress","formattedDate","RelativeTimestamp","timestamp","short","formattedName","InlineAccount","accountId","label","date","renderItem","scrollable","renderHeader","handleItemClick","formatDate","hourCycle","month","day","hour","minute","openModal","modalType","modalProps","DetailedStatus","ImmutablePureComponent","button","ctrlKey","altKey","metaKey","preventDefault","stopPropagation","destination","options","onOpenVideo","c","node","_measureHeight","target","nodeName","parentNode","window","open","onTranslate","heightJustChanged","measureHeight","scheduleIdleTask","setState","Math","ceil","scrollHeight","onHeightChange","componentDidUpdate","prevProps","prevState","outerStyle","boxSizing","compact","pictureInPicture","expanded","onToggleHidden","settings","applicationLink","reblogLink","favouriteLink","contentMedia","contentMediaIcons","extraMedia","extraMediaIcons","media","mediaIcons","language","PictureInPicturePlaceholder","some","AttachmentList","attachment","description","Audio","src","alt","lang","duration","poster","backgroundColor","foregroundColor","accentColor","sensitive","visible","showMedia","blurhash","onToggleVisibility","onToggleMediaVisibility","Video","preview","frameRate","inline","letterbox","fullwidth","preventPlayback","handleOpenVideo","autoplay","MediaGallery","standalone","hidden","onOpenMedia","Card","card","PollContainer","pollId","_jsxs","_Fragment","children","rel","visibilityLink","VisibilityIcon","visibility","Link","to","AnimatedNumber","value","handleModalLink","statusContentProps","hashtagBar","getHashtagBarForStatus","style","ref","setRef","handleAccountClick","Avatar","account","DisplayName","localDomain","_jsx2","StatusContent","collapsed","onExpandedToggle","handleTranslate","parseClick","onUpdate","handleChildUpdate","tagLinks","rewriteMentions","visibleReactions","StatusReactions","reactions","addReaction","removeReaction","onReactionRemove","FormattedDate","Date","year","identityContextPropShape","ImmutablePropTypes","map","isRequired","PropTypes","func","bool","string","contains","inUse","available","WithRouterPropTypes","deleteConfirm","deleteMessage","redraftConfirm","redraftMessage","revealAll","hideAll","statusTitleWithAttachments","detailedStatus","replyConfirm","replyMessage","tootHeading","titleFromStatus","displayName","username","user","trim","attachmentCount","truncate","str","num","arr","Array","from","slice","join","Status","_this","fullscreen","isExpanded","threadExpanded","loadedStatusId","revealBehindCW","revealStatus","hideStatus","setExpansion","unfavourite","shiftKey","favouriteModal","handleModalFavourite","type","askReplyConfirmation","message","confirm","onDoNotAsk","changeLocalSetting","onConfirm","replyCompose","privacy","unreblog","handleModalReblog","missingMediaDescription","boostModal","unbookmark","withRedraft","deleteModal","deleteStatus","editStatus","directCompose","mentionCompose","startTime","handleOpenMedia","initMuteModal","unmuteStatus","muteStatus","ancestorsIds","descendantsIds","statusIds","toJS","undoStatusTranslation","translateStatus","initBlockModal","initReport","handleToggleMediaVisibility","handleMoveUp","handleMoveDown","_selectChild","indexOf","column","scrollTop","statusNode","isFullscreen","prevRouterProps","_ref3","_location$state","_prevRouterProps$loca","location","mastodonModalKey","offsetTop","componentDidMount","attachFullscreenListener","onFullScreenChange","fetchStatus","params","_scrollStatusIntoView","getDerivedStateFromProps","update","updated","defaultMediaVisibility","autoUnfoldCW","align_top","container","element","querySelectorAll","scrollIntoView","clientHeight","offsetHeight","focus","renderChildren","list","ancestors","StatusContainer","onMoveUp","onMoveDown","contextType","previousId","nextId","rootId","multiColumn","requestIdleCallback","_this$statusNode","_document$querySelect","offset","document","querySelector","getBoundingClientRect","bottom","scrollingElement","body","scrollBy","_prevProps$status","componentWillUnmount","detachFullscreenListener","descendants","isLoading","Column","LoadingIndicator","BundleColumnError","errorType","isLocal","isIndexable","handlers","moveUp","handleHotkeyMoveUp","moveDown","handleHotkeyMoveDown","handleHotkeyReply","handleHotkeyFavourite","boost","handleHotkeyBoost","handleHotkeyBookmark","handleHotkeyMention","openProfile","handleHotkeyOpenProfile","toggleHidden","handleToggleHidden","toggleSensitive","handleHotkeyToggleSensitive","openMedia","handleHotkeyOpenMedia","bindToDocument","setColumnRef","ColumnHeader","ChatIcon","handleHeaderClick","showBackButton","extraButton","handleToggleAll","Icon","VisibilityOffIcon","ScrollContainer","scrollKey","shouldUpdateScroll","setContainerRef","HotKeys","tabIndex","textForScreenReader","setStatusRef","handleReactionAdd","handleReactionRemove","handlePin","Helmet","content","object","makeMapStateToProps","getStatus","makeGetStatus","getPictureInPicture","makeGetPictureInPicture","getAncestorsIds","createSelector","_","inReplyTos","Immutable","List","withMutations","mutable","unshift","getDescendantsIds","contextReplies","statuses","ids","pop","replies","reverse","forEach","insertAt","findIndex","idx","splice"],"mappings":"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","file":"js/flavours/glitch/async/status.js","sourcesContent":["var _path;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgChat(_ref) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    height: 24,\n    viewBox: \"0 -960 960 960\",\n    width: 24,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M240-400h320v-80H240v80Zm0-120h480v-80H240v80Zm0-120h480v-80H240v80ZM80-80v-720q0-33 23.5-56.5T160-880h640q33 0 56.5 23.5T880-800v480q0 33-23.5 56.5T800-240H240L80-80Zm126-240h594v-480H160v525l46-45Zm-46 0v-480 480Z\"\n  })));\n}\nexport default SvgChat;","import PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport classNames from 'classnames';\nimport { withRouter } from 'react-router-dom';\n\nimport ImmutablePropTypes from 'react-immutable-proptypes';\n\nimport AddReactionIcon from '@/material-icons/400-24px/add_reaction.svg?react';\nimport BookmarkIcon from '@/material-icons/400-24px/bookmark-fill.svg?react';\nimport BookmarkBorderIcon from '@/material-icons/400-24px/bookmark.svg?react';\nimport MoreHorizIcon from '@/material-icons/400-24px/more_horiz.svg?react';\nimport RepeatIcon from '@/material-icons/400-24px/repeat.svg?react';\nimport ReplyIcon from '@/material-icons/400-24px/reply.svg?react';\nimport ReplyAllIcon from '@/material-icons/400-24px/reply_all.svg?react';\nimport StarIcon from '@/material-icons/400-24px/star-fill.svg?react';\nimport StarBorderIcon from '@/material-icons/400-24px/star.svg?react';\nimport RepeatActiveIcon from '@/svg-icons/repeat_active.svg?react';\nimport RepeatDisabledIcon from '@/svg-icons/repeat_disabled.svg?react';\nimport RepeatPrivateIcon from '@/svg-icons/repeat_private.svg?react';\nimport RepeatPrivateActiveIcon from '@/svg-icons/repeat_private_active.svg?react';\nimport { identityContextPropShape, withIdentity } from 'flavours/glitch/identity_context';\nimport { PERMISSION_MANAGE_USERS, PERMISSION_MANAGE_FEDERATION } from 'flavours/glitch/permissions';\nimport { accountAdminLink, statusAdminLink } from 'flavours/glitch/utils/backend_links';\nimport { WithRouterPropTypes } from 'flavours/glitch/utils/react_router';\n\nimport { IconButton } from '../../../components/icon_button';\nimport DropdownMenuContainer from '../../../containers/dropdown_menu_container';\nimport { me, maxReactions } from '../../../initial_state';\nimport EmojiPickerDropdown from '../../compose/containers/emoji_picker_dropdown_container';\n\nconst messages = defineMessages({\n  delete: { id: 'status.delete', defaultMessage: 'Delete' },\n  redraft: { id: 'status.redraft', defaultMessage: 'Delete & re-draft' },\n  edit: { id: 'status.edit', defaultMessage: 'Edit' },\n  direct: { id: 'status.direct', defaultMessage: 'Privately mention @{name}' },\n  mention: { id: 'status.mention', defaultMessage: 'Mention @{name}' },\n  reply: { id: 'status.reply', defaultMessage: 'Reply' },\n  reblog: { id: 'status.reblog', defaultMessage: 'Boost' },\n  reblog_private: { id: 'status.reblog_private', defaultMessage: 'Boost with original visibility' },\n  cancel_reblog_private: { id: 'status.cancel_reblog_private', defaultMessage: 'Unboost' },\n  cannot_reblog: { id: 'status.cannot_reblog', defaultMessage: 'This post cannot be boosted' },\n  favourite: { id: 'status.favourite', defaultMessage: 'Favorite' },\n  react: { id: 'status.react', defaultMessage: 'React' },\n  bookmark: { id: 'status.bookmark', defaultMessage: 'Bookmark' },\n  more: { id: 'status.more', defaultMessage: 'More' },\n  mute: { id: 'status.mute', defaultMessage: 'Mute @{name}' },\n  muteConversation: { id: 'status.mute_conversation', defaultMessage: 'Mute conversation' },\n  unmuteConversation: { id: 'status.unmute_conversation', defaultMessage: 'Unmute conversation' },\n  block: { id: 'status.block', defaultMessage: 'Block @{name}' },\n  report: { id: 'status.report', defaultMessage: 'Report @{name}' },\n  share: { id: 'status.share', defaultMessage: 'Share' },\n  pin: { id: 'status.pin', defaultMessage: 'Pin on profile' },\n  unpin: { id: 'status.unpin', defaultMessage: 'Unpin from profile' },\n  embed: { id: 'status.embed', defaultMessage: 'Embed' },\n  admin_account: { id: 'status.admin_account', defaultMessage: 'Open moderation interface for @{name}' },\n  admin_status: { id: 'status.admin_status', defaultMessage: 'Open this post in the moderation interface' },\n  admin_domain: { id: 'status.admin_domain', defaultMessage: 'Open moderation interface for {domain}' },\n  copy: { id: 'status.copy', defaultMessage: 'Copy link to post' },\n  openOriginalPage: { id: 'account.open_original_page', defaultMessage: 'Open original page' },\n});\n\nclass ActionBar extends PureComponent {\n  static propTypes = {\n    identity: identityContextPropShape,\n    status: ImmutablePropTypes.map.isRequired,\n    onReply: PropTypes.func.isRequired,\n    onReblog: PropTypes.func.isRequired,\n    onFavourite: PropTypes.func.isRequired,\n    onReactionAdd: PropTypes.func.isRequired,\n    onBookmark: PropTypes.func.isRequired,\n    onDelete: PropTypes.func.isRequired,\n    onEdit: PropTypes.func.isRequired,\n    onDirect: PropTypes.func.isRequired,\n    onMention: PropTypes.func.isRequired,\n    onMute: PropTypes.func,\n    onBlock: PropTypes.func,\n    onMuteConversation: PropTypes.func,\n    onReport: PropTypes.func,\n    onPin: PropTypes.func,\n    onEmbed: PropTypes.func,\n    intl: PropTypes.object.isRequired,\n    ...WithRouterPropTypes,\n  };\n\n  handleReplyClick = () => {\n    this.props.onReply(this.props.status);\n  };\n\n  handleReblogClick = (e) => {\n    this.props.onReblog(this.props.status, e);\n  };\n\n  handleFavouriteClick = (e) => {\n    this.props.onFavourite(this.props.status, e);\n  };\n\n  handleEmojiPick = data => {\n    this.props.onReactionAdd(this.props.status.get('id'), data.native.replace(/:/g, ''), data.imageUrl);\n  };\n\n  handleBookmarkClick = (e) => {\n    this.props.onBookmark(this.props.status, e);\n  };\n\n  handleDeleteClick = () => {\n    this.props.onDelete(this.props.status, this.props.history);\n  };\n\n  handleRedraftClick = () => {\n    this.props.onDelete(this.props.status, this.props.history, true);\n  };\n\n  handleEditClick = () => {\n    this.props.onEdit(this.props.status, this.props.history);\n  };\n\n  handleDirectClick = () => {\n    this.props.onDirect(this.props.status.get('account'), this.props.history);\n  };\n\n  handleMentionClick = () => {\n    this.props.onMention(this.props.status.get('account'), this.props.history);\n  };\n\n  handleMuteClick = () => {\n    this.props.onMute(this.props.status.get('account'));\n  };\n\n  handleBlockClick = () => {\n    this.props.onBlock(this.props.status);\n  };\n\n  handleConversationMuteClick = () => {\n    this.props.onMuteConversation(this.props.status);\n  };\n\n  handleReport = () => {\n    this.props.onReport(this.props.status);\n  };\n\n  handlePinClick = () => {\n    this.props.onPin(this.props.status);\n  };\n\n  handleShare = () => {\n    navigator.share({\n      url: this.props.status.get('url'),\n    });\n  };\n\n  handleEmbed = () => {\n    this.props.onEmbed(this.props.status);\n  };\n\n  handleCopy = () => {\n    const url = this.props.status.get('url');\n    navigator.clipboard.writeText(url);\n  };\n\n  render () {\n    const { status, intl } = this.props;\n    const { signedIn, permissions } = this.props.identity;\n\n    const publicStatus       = ['public', 'unlisted'].includes(status.get('visibility'));\n    const pinnableStatus     = ['public', 'unlisted', 'private'].includes(status.get('visibility'));\n    const mutingConversation = status.get('muted');\n    const writtenByMe        = status.getIn(['account', 'id']) === me;\n    const isRemote           = status.getIn(['account', 'username']) !== status.getIn(['account', 'acct']);\n\n    let menu = [];\n\n    if (publicStatus && isRemote) {\n      menu.push({ text: intl.formatMessage(messages.openOriginalPage), href: status.get('url') });\n    }\n\n    menu.push({ text: intl.formatMessage(messages.copy), action: this.handleCopy });\n\n    if (publicStatus && 'share' in navigator) {\n      menu.push({ text: intl.formatMessage(messages.share), action: this.handleShare });\n    }\n\n    if (publicStatus && (signedIn || !isRemote)) {\n      menu.push({ text: intl.formatMessage(messages.embed), action: this.handleEmbed });\n    }\n\n    if (signedIn) {\n      menu.push(null);\n\n      if (writtenByMe) {\n        if (pinnableStatus) {\n          menu.push({ text: intl.formatMessage(status.get('pinned') ? messages.unpin : messages.pin), action: this.handlePinClick });\n          menu.push(null);\n        }\n\n        menu.push({ text: intl.formatMessage(mutingConversation ? messages.unmuteConversation : messages.muteConversation), action: this.handleConversationMuteClick });\n        menu.push(null);\n        menu.push({ text: intl.formatMessage(messages.edit), action: this.handleEditClick });\n        menu.push({ text: intl.formatMessage(messages.delete), action: this.handleDeleteClick, dangerous: true });\n        menu.push({ text: intl.formatMessage(messages.redraft), action: this.handleRedraftClick, dangerous: true });\n      } else {\n        menu.push({ text: intl.formatMessage(messages.mention, { name: status.getIn(['account', 'username']) }), action: this.handleMentionClick });\n        menu.push({ text: intl.formatMessage(messages.direct, { name: status.getIn(['account', 'username']) }), action: this.handleDirectClick });\n        menu.push(null);\n        menu.push({ text: intl.formatMessage(messages.mute, { name: status.getIn(['account', 'username']) }), action: this.handleMuteClick, dangerous: true });\n        menu.push({ text: intl.formatMessage(messages.block, { name: status.getIn(['account', 'username']) }), action: this.handleBlockClick, dangerous: true });\n        menu.push({ text: intl.formatMessage(messages.report, { name: status.getIn(['account', 'username']) }), action: this.handleReport, dangerous: true });\n        if (((permissions & PERMISSION_MANAGE_USERS) === PERMISSION_MANAGE_USERS && (accountAdminLink || statusAdminLink)) || (isRemote && (permissions & PERMISSION_MANAGE_FEDERATION) === PERMISSION_MANAGE_FEDERATION)) {\n          menu.push(null);\n          if ((permissions & PERMISSION_MANAGE_USERS) === PERMISSION_MANAGE_USERS) {\n            if (accountAdminLink !== undefined) {\n              menu.push({ text: intl.formatMessage(messages.admin_account, { name: status.getIn(['account', 'username']) }), href: accountAdminLink(status.getIn(['account', 'id'])) });\n            }\n            if (statusAdminLink !== undefined) {\n              menu.push({ text: intl.formatMessage(messages.admin_status), href: statusAdminLink(status.getIn(['account', 'id']), status.get('id')) });\n            }\n          }\n          if (isRemote && (permissions & PERMISSION_MANAGE_FEDERATION) === PERMISSION_MANAGE_FEDERATION) {\n            const domain = status.getIn(['account', 'acct']).split('@')[1];\n            menu.push({ text: intl.formatMessage(messages.admin_domain, { domain: domain }), href: `/admin/instances/${domain}` });\n          }\n        }\n      }\n    }\n\n    let replyIcon;\n    let replyIconComponent;\n\n    if (status.get('in_reply_to_id', null) === null) {\n      replyIcon = 'reply';\n      replyIconComponent = ReplyIcon;\n    } else {\n      replyIcon = 'reply-all';\n      replyIconComponent = ReplyAllIcon;\n    }\n\n    const canReact = signedIn && status.get('reactions').filter(r => r.get('count') > 0 && r.get('me')).size < maxReactions;\n\n    const reblogPrivate = status.getIn(['account', 'id']) === me && status.get('visibility') === 'private';\n\n    let reblogTitle, reblogIconComponent;\n\n    if (status.get('reblogged')) {\n      reblogTitle = intl.formatMessage(messages.cancel_reblog_private);\n      reblogIconComponent = publicStatus ? RepeatActiveIcon : RepeatPrivateActiveIcon;\n    } else if (publicStatus) {\n      reblogTitle = intl.formatMessage(messages.reblog);\n      reblogIconComponent = RepeatIcon;\n    } else if (reblogPrivate) {\n      reblogTitle = intl.formatMessage(messages.reblog_private);\n      reblogIconComponent = RepeatPrivateIcon;\n    } else {\n      reblogTitle = intl.formatMessage(messages.cannot_reblog);\n      reblogIconComponent = RepeatDisabledIcon;\n    }\n\n    return (\n      <div className='detailed-status__action-bar'>\n        <div className='detailed-status__button'><IconButton title={intl.formatMessage(messages.reply)} icon={replyIcon} iconComponent={replyIconComponent} onClick={this.handleReplyClick} /></div>\n        <div className='detailed-status__button'><IconButton className={classNames({ reblogPrivate })} disabled={!publicStatus && !reblogPrivate} active={status.get('reblogged')} title={reblogTitle} icon='retweet' iconComponent={reblogIconComponent} onClick={this.handleReblogClick} /></div>\n        <div className='detailed-status__button'><IconButton className='star-icon' animate active={status.get('favourited')} title={intl.formatMessage(messages.favourite)} icon='star' iconComponent={status.get('favourited') ? StarIcon : StarBorderIcon} onClick={this.handleFavouriteClick} /></div>\n        <div className='detailed-status__button'><EmojiPickerDropdown onPickEmoji={this.handleEmojiPick} title={intl.formatMessage(messages.react)} icon={AddReactionIcon} disabled={!canReact} /></div>\n        <div className='detailed-status__button'><IconButton className='bookmark-icon' disabled={!signedIn} active={status.get('bookmarked')} title={intl.formatMessage(messages.bookmark)} icon='bookmark' iconComponent={status.get('bookmarked') ? BookmarkIcon : BookmarkBorderIcon} onClick={this.handleBookmarkClick} /></div>\n\n        <div className='detailed-status__action-bar-dropdown'>\n          <DropdownMenuContainer size={18} icon='ellipsis-h' iconComponent={MoreHorizIcon} items={menu} direction='left' title={intl.formatMessage(messages.more)} />\n        </div>\n      </div>\n    );\n  }\n\n}\n\nexport default withRouter(withIdentity(injectIntl(ActionBar)));\n","import { connect } from 'react-redux';\n\nimport { openDropdownMenu, closeDropdownMenu } from 'flavours/glitch/actions/dropdown_menu';\nimport { fetchHistory } from 'flavours/glitch/actions/history';\nimport DropdownMenu from 'flavours/glitch/components/dropdown_menu';\n\n/**\n *\n * @param {import('flavours/glitch/store').RootState} state\n * @param {*} props\n */\nconst mapStateToProps = (state, { statusId }) => ({\n  openDropdownId: state.dropdownMenu.openId,\n  openedViaKeyboard: state.dropdownMenu.keyboard,\n  items: state.getIn(['history', statusId, 'items']),\n  loading: state.getIn(['history', statusId, 'loading']),\n});\n\nconst mapDispatchToProps = (dispatch, { statusId }) => ({\n\n  onOpen (id, onItemClick, keyboard) {\n    dispatch(fetchHistory(statusId));\n    dispatch(openDropdownMenu({ id, keyboard }));\n  },\n\n  onClose (id) {\n    dispatch(closeDropdownMenu({ id }));\n  },\n\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DropdownMenu);\n","import PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nimport { FormattedMessage, injectIntl } from 'react-intl';\n\nimport { connect } from 'react-redux';\n\nimport { openModal } from 'flavours/glitch/actions/modal';\nimport InlineAccount from 'flavours/glitch/components/inline_account';\nimport { RelativeTimestamp } from 'flavours/glitch/components/relative_timestamp';\n\nimport DropdownMenu from './containers/dropdown_menu_container';\n\nconst mapDispatchToProps = (dispatch, { statusId }) => ({\n\n  onItemClick (index) {\n    dispatch(openModal({\n      modalType: 'COMPARE_HISTORY',\n      modalProps: { index, statusId },\n    }));\n  },\n\n});\n\nclass EditedTimestamp extends PureComponent {\n\n  static propTypes = {\n    statusId: PropTypes.string.isRequired,\n    timestamp: PropTypes.string.isRequired,\n    intl: PropTypes.object.isRequired,\n    onItemClick: PropTypes.func.isRequired,\n  };\n\n  handleItemClick = (item, i) => {\n    const { onItemClick } = this.props;\n    onItemClick(i);\n  };\n\n  renderHeader = items => {\n    return (\n      <FormattedMessage id='status.edited_x_times' defaultMessage='Edited {count, plural, one {# time} other {# times}}' values={{ count: items.size - 1 }} />\n    );\n  };\n\n  renderItem = (item, index, { onClick, onKeyPress }) => {\n    const formattedDate = <RelativeTimestamp timestamp={item.get('created_at')} short={false} />;\n    const formattedName = <InlineAccount accountId={item.get('account')} />;\n\n    const label = item.get('original') ? (\n      <FormattedMessage id='status.history.created' defaultMessage='{name} created {date}' values={{ name: formattedName, date: formattedDate }} />\n    ) : (\n      <FormattedMessage id='status.history.edited' defaultMessage='{name} edited {date}' values={{ name: formattedName, date: formattedDate }} />\n    );\n\n    return (\n      <li className='dropdown-menu__item edited-timestamp__history__item' key={item.get('created_at')}>\n        <button data-index={index} onClick={onClick} onKeyPress={onKeyPress}>{label}</button>\n      </li>\n    );\n  };\n\n  render () {\n    const { timestamp, intl, statusId } = this.props;\n\n    return (\n      <DropdownMenu statusId={statusId} renderItem={this.renderItem} scrollable renderHeader={this.renderHeader} onItemClick={this.handleItemClick}>\n        <button className='dropdown-menu__text-button'>\n          <FormattedMessage id='status.edited' defaultMessage='Edited {date}' values={{ date: <span className='animated-number'>{intl.formatDate(timestamp, { hourCycle: 'h23', month: 'short', day: '2-digit', hour: '2-digit', minute: '2-digit' })}</span> }} />\n        </button>\n      </DropdownMenu>\n    );\n  }\n\n}\n\nexport default connect(null, mapDispatchToProps)(injectIntl(EditedTimestamp));\n","import PropTypes from 'prop-types';\n\nimport { FormattedDate, FormattedMessage } from 'react-intl';\n\nimport classNames from 'classnames';\nimport { Link, withRouter } from 'react-router-dom';\n\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\n\nimport { AnimatedNumber } from 'flavours/glitch/components/animated_number';\nimport AttachmentList from 'flavours/glitch/components/attachment_list';\nimport EditedTimestamp from 'flavours/glitch/components/edited_timestamp';\nimport { getHashtagBarForStatus } from 'flavours/glitch/components/hashtag_bar';\nimport PictureInPicturePlaceholder from 'flavours/glitch/components/picture_in_picture_placeholder';\nimport { VisibilityIcon } from 'flavours/glitch/components/visibility_icon';\nimport PollContainer from 'flavours/glitch/containers/poll_container';\nimport { identityContextPropShape, withIdentity } from 'flavours/glitch/identity_context';\nimport { WithRouterPropTypes } from 'flavours/glitch/utils/react_router';\n\nimport { Avatar } from '../../../components/avatar';\nimport { DisplayName } from '../../../components/display_name';\nimport MediaGallery from '../../../components/media_gallery';\nimport StatusContent from '../../../components/status_content';\nimport StatusReactions from '../../../components/status_reactions';\nimport { visibleReactions } from '../../../initial_state';\nimport Audio from '../../audio';\nimport scheduleIdleTask from '../../ui/util/schedule_idle_task';\nimport Video from '../../video';\n\nimport Card from './card';\n\nclass DetailedStatus extends ImmutablePureComponent {\n  static propTypes = {\n    identity: identityContextPropShape,\n    status: ImmutablePropTypes.map,\n    settings: ImmutablePropTypes.map.isRequired,\n    onOpenMedia: PropTypes.func.isRequired,\n    onOpenVideo: PropTypes.func.isRequired,\n    onToggleHidden: PropTypes.func,\n    onTranslate: PropTypes.func.isRequired,\n    expanded: PropTypes.bool,\n    measureHeight: PropTypes.bool,\n    onHeightChange: PropTypes.func,\n    domain: PropTypes.string.isRequired,\n    compact: PropTypes.bool,\n    showMedia: PropTypes.bool,\n    pictureInPicture: ImmutablePropTypes.contains({\n      inUse: PropTypes.bool,\n      available: PropTypes.bool,\n    }),\n    onToggleMediaVisibility: PropTypes.func,\n    onReactionAdd: PropTypes.func.isRequired,\n    onReactionRemove: PropTypes.func.isRequired,\n    ...WithRouterPropTypes,\n  };\n\n  state = {\n    height: null,\n  };\n\n  handleAccountClick = (e) => {\n    if (e.button === 0 && !(e.ctrlKey || e.altKey || e.metaKey) && this.props.history) {\n      e.preventDefault();\n      this.props.history.push(`/@${this.props.status.getIn(['account', 'acct'])}`);\n    }\n\n    e.stopPropagation();\n  };\n\n  parseClick = (e, destination) => {\n    if (e.button === 0 && !(e.ctrlKey || e.altKey || e.metaKey) && this.props.history) {\n      e.preventDefault();\n      this.props.history.push(destination);\n    }\n\n    e.stopPropagation();\n  };\n\n  handleOpenVideo = (options) => {\n    this.props.onOpenVideo(this.props.status.getIn(['media_attachments', 0]), options);\n  };\n\n  _measureHeight (heightJustChanged) {\n    if (this.props.measureHeight && this.node) {\n      scheduleIdleTask(() => this.node && this.setState({ height: Math.ceil(this.node.scrollHeight) + 1 }));\n\n      if (this.props.onHeightChange && heightJustChanged) {\n        this.props.onHeightChange();\n      }\n    }\n  }\n\n  setRef = c => {\n    this.node = c;\n    this._measureHeight();\n  };\n\n  componentDidUpdate (prevProps, prevState) {\n    this._measureHeight(prevState.height !== this.state.height);\n  }\n\n  handleChildUpdate = () => {\n    this._measureHeight();\n  };\n\n  handleModalLink = e => {\n    e.preventDefault();\n\n    let href;\n\n    if (e.target.nodeName !== 'A') {\n      href = e.target.parentNode.href;\n    } else {\n      href = e.target.href;\n    }\n\n    window.open(href, 'mastodon-intent', 'width=445,height=600,resizable=no,menubar=no,status=no,scrollbars=yes');\n  };\n\n  handleTranslate = () => {\n    const { onTranslate, status } = this.props;\n    onTranslate(status);\n  };\n\n  render () {\n    const status = (this.props.status && this.props.status.get('reblog')) ? this.props.status.get('reblog') : this.props.status;\n    const outerStyle = { boxSizing: 'border-box' };\n    const { compact, pictureInPicture, expanded, onToggleHidden, settings } = this.props;\n\n    if (!status) {\n      return null;\n    }\n\n    let applicationLink = '';\n    let reblogLink = '';\n    let favouriteLink = '';\n\n    //  Depending on user settings, some media are considered as parts of the\n    //  contents (affected by CW) while other will be displayed outside of the\n    //  CW.\n    let contentMedia = [];\n    let contentMediaIcons = [];\n    let extraMedia = [];\n    let extraMediaIcons = [];\n    let media = contentMedia;\n    let mediaIcons = contentMediaIcons;\n\n    if (settings.getIn(['content_warnings', 'media_outside'])) {\n      media = extraMedia;\n      mediaIcons = extraMediaIcons;\n    }\n\n    if (this.props.measureHeight) {\n      outerStyle.height = `${this.state.height}px`;\n    }\n\n    const language = status.getIn(['translation', 'language']) || status.get('language');\n\n    if (pictureInPicture.get('inUse')) {\n      media.push(<PictureInPicturePlaceholder />);\n      mediaIcons.push('video-camera');\n    } else if (status.get('media_attachments').size > 0) {\n      if (status.get('media_attachments').some(item => item.get('type') === 'unknown')) {\n        media.push(<AttachmentList media={status.get('media_attachments')} />);\n      } else if (status.getIn(['media_attachments', 0, 'type']) === 'audio') {\n        const attachment = status.getIn(['media_attachments', 0]);\n        const description = attachment.getIn(['translation', 'description']) || attachment.get('description');\n\n        media.push(\n          <Audio\n            src={attachment.get('url')}\n            alt={description}\n            lang={language}\n            duration={attachment.getIn(['meta', 'original', 'duration'], 0)}\n            poster={attachment.get('preview_url') || status.getIn(['account', 'avatar_static'])}\n            backgroundColor={attachment.getIn(['meta', 'colors', 'background'])}\n            foregroundColor={attachment.getIn(['meta', 'colors', 'foreground'])}\n            accentColor={attachment.getIn(['meta', 'colors', 'accent'])}\n            sensitive={status.get('sensitive')}\n            visible={this.props.showMedia}\n            blurhash={attachment.get('blurhash')}\n            height={150}\n            onToggleVisibility={this.props.onToggleMediaVisibility}\n          />,\n        );\n        mediaIcons.push('music');\n      } else if (status.getIn(['media_attachments', 0, 'type']) === 'video') {\n        const attachment = status.getIn(['media_attachments', 0]);\n        const description = attachment.getIn(['translation', 'description']) || attachment.get('description');\n\n        media.push(\n          <Video\n            preview={attachment.get('preview_url')}\n            frameRate={attachment.getIn(['meta', 'original', 'frame_rate'])}\n            blurhash={attachment.get('blurhash')}\n            src={attachment.get('url')}\n            alt={description}\n            lang={language}\n            inline\n            sensitive={status.get('sensitive')}\n            letterbox={settings.getIn(['media', 'letterbox'])}\n            fullwidth={settings.getIn(['media', 'fullwidth'])}\n            preventPlayback={!expanded}\n            onOpenVideo={this.handleOpenVideo}\n            autoplay\n            visible={this.props.showMedia}\n            onToggleVisibility={this.props.onToggleMediaVisibility}\n          />,\n        );\n        mediaIcons.push('video-camera');\n      } else {\n        media.push(\n          <MediaGallery\n            standalone\n            sensitive={status.get('sensitive')}\n            media={status.get('media_attachments')}\n            lang={language}\n            letterbox={settings.getIn(['media', 'letterbox'])}\n            fullwidth={settings.getIn(['media', 'fullwidth'])}\n            hidden={!expanded}\n            onOpenMedia={this.props.onOpenMedia}\n            visible={this.props.showMedia}\n            onToggleVisibility={this.props.onToggleMediaVisibility}\n          />,\n        );\n        mediaIcons.push('picture-o');\n      }\n    } else if (status.get('card')) {\n      media.push(<Card sensitive={status.get('sensitive')} onOpenMedia={this.props.onOpenMedia} card={status.get('card')} />);\n      mediaIcons.push('link');\n    }\n\n    if (status.get('poll')) {\n      contentMedia.push(<PollContainer pollId={status.get('poll')} lang={status.get('language')} />);\n      contentMediaIcons.push('tasks');\n    }\n\n    if (status.get('application')) {\n      applicationLink = <>·<a className='detailed-status__application' href={status.getIn(['application', 'website'])} target='_blank' rel='noopener noreferrer'>{status.getIn(['application', 'name'])}</a></>;\n    }\n\n    const visibilityLink = <>·<VisibilityIcon visibility={status.get('visibility')} /></>;\n\n    if (!['unlisted', 'public'].includes(status.get('visibility'))) {\n      reblogLink = null;\n    } else if (this.props.history) {\n      reblogLink = (\n        <Link to={`/@${status.getIn(['account', 'acct'])}/${status.get('id')}/reblogs`} className='detailed-status__link'>\n          <span className='detailed-status__reblogs'>\n            <AnimatedNumber value={status.get('reblogs_count')} />\n          </span>\n          <FormattedMessage id='status.reblogs' defaultMessage='{count, plural, one {boost} other {boosts}}' values={{ count: status.get('reblogs_count') }} />\n        </Link>\n      );\n    } else {\n      reblogLink = (\n        <a href={`/interact/${status.get('id')}?type=reblog`} className='detailed-status__link' onClick={this.handleModalLink}>\n          <span className='detailed-status__reblogs'>\n            <AnimatedNumber value={status.get('reblogs_count')} />\n          </span>\n          <FormattedMessage id='status.reblogs' defaultMessage='{count, plural, one {boost} other {boosts}}' values={{ count: status.get('reblogs_count') }} />\n        </a>\n      );\n    }\n\n    if (this.props.history) {\n      favouriteLink = (\n        <Link to={`/@${status.getIn(['account', 'acct'])}/${status.get('id')}/favourites`} className='detailed-status__link'>\n          <span className='detailed-status__favorites'>\n            <AnimatedNumber value={status.get('favourites_count')} />\n          </span>\n          <FormattedMessage id='status.favourites' defaultMessage='{count, plural, one {favorite} other {favorites}}' values={{ count: status.get('favourites_count') }} />\n        </Link>\n      );\n    } else {\n      favouriteLink = (\n        <a href={`/interact/${status.get('id')}?type=favourite`} className='detailed-status__link' onClick={this.handleModalLink}>\n          <span className='detailed-status__favorites'>\n            <AnimatedNumber value={status.get('favourites_count')} />\n          </span>\n          <FormattedMessage id='status.favourites' defaultMessage='{count, plural, one {favorite} other {favorites}}' values={{ count: status.get('favourites_count') }} />\n        </a>\n      );\n    }\n\n    const {statusContentProps, hashtagBar} = getHashtagBarForStatus(status);\n    contentMedia.push(hashtagBar);\n\n    return (\n      <div style={outerStyle}>\n        <div ref={this.setRef} className={classNames('detailed-status', `detailed-status-${status.get('visibility')}`, { compact })} data-status-by={status.getIn(['account', 'acct'])}>\n          <a href={status.getIn(['account', 'url'])} data-hover-card-account={status.getIn(['account', 'id'])} onClick={this.handleAccountClick} className='detailed-status__display-name'>\n            <div className='detailed-status__display-avatar'><Avatar account={status.get('account')} size={48} /></div>\n            <DisplayName account={status.get('account')} localDomain={this.props.domain} />\n          </a>\n\n          <StatusContent\n            status={status}\n            media={contentMedia}\n            extraMedia={extraMedia}\n            mediaIcons={contentMediaIcons}\n            expanded={expanded}\n            collapsed={false}\n            onExpandedToggle={onToggleHidden}\n            onTranslate={this.handleTranslate}\n            parseClick={this.parseClick}\n            onUpdate={this.handleChildUpdate}\n            tagLinks={settings.get('tag_misleading_links')}\n            rewriteMentions={settings.get('rewrite_mentions')}\n            disabled\n            {...statusContentProps}\n          />\n\n          {visibleReactions > 0 && (<StatusReactions\n            statusId={status.get('id')}\n            reactions={status.get('reactions')}\n            addReaction={this.props.onReactionAdd}\n            removeReaction={this.props.onReactionRemove}\n            canReact={this.props.identity.signedIn}\n          />)}\n\n          <div className='detailed-status__meta'>\n            <div className='detailed-status__meta__line'>\n              <a className='detailed-status__datetime' href={status.get('url')} target='_blank' rel='noopener noreferrer'>\n                <FormattedDate hourCycle='h23' value={new Date(status.get('created_at'))} year='numeric' month='short' day='2-digit' hour='2-digit' minute='2-digit' />\n              </a>\n\n              {visibilityLink}\n\n              {applicationLink}\n            </div>\n\n            {status.get('edited_at') && <div className='detailed-status__meta__line'><EditedTimestamp statusId={status.get('id')} timestamp={status.get('edited_at')} /></div>}\n\n            <div className='detailed-status__meta__line'>\n              {reblogLink}\n              {reblogLink && <>·</>}\n              {favouriteLink}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n}\n\nexport default withRouter(withIdentity(DetailedStatus));\n","import PropTypes from 'prop-types';\n\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport classNames from 'classnames';\nimport { Helmet } from 'react-helmet';\nimport { withRouter } from 'react-router-dom';\n\nimport { createSelector } from '@reduxjs/toolkit';\nimport Immutable from 'immutable';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport { connect } from 'react-redux';\n\nimport { HotKeys } from 'react-hotkeys';\n\nimport ChatIcon from '@/material-icons/400-24px/chat.svg?react';\nimport VisibilityIcon from '@/material-icons/400-24px/visibility.svg?react';\nimport VisibilityOffIcon from '@/material-icons/400-24px/visibility_off.svg?react';\nimport { Icon }  from 'flavours/glitch/components/icon';\nimport { LoadingIndicator } from 'flavours/glitch/components/loading_indicator';\nimport ScrollContainer from 'flavours/glitch/containers/scroll_container';\nimport BundleColumnError from 'flavours/glitch/features/ui/components/bundle_column_error';\nimport { identityContextPropShape, withIdentity } from 'flavours/glitch/identity_context';\nimport { autoUnfoldCW } from 'flavours/glitch/utils/content_warning';\nimport { WithRouterPropTypes } from 'flavours/glitch/utils/react_router';\n\nimport { initBlockModal } from '../../actions/blocks';\nimport {\n  replyCompose,\n  mentionCompose,\n  directCompose,\n} from '../../actions/compose';\nimport {\n  favourite,\n  unfavourite,\n  bookmark,\n  unbookmark,\n  reblog,\n  unreblog,\n  pin,\n  unpin,\n  addReaction,\n  removeReaction,\n} from '../../actions/interactions';\nimport { changeLocalSetting } from '../../actions/local_settings';\nimport { openModal } from '../../actions/modal';\nimport { initMuteModal } from '../../actions/mutes';\nimport { initReport } from '../../actions/reports';\nimport {\n  fetchStatus,\n  muteStatus,\n  unmuteStatus,\n  deleteStatus,\n  editStatus,\n  hideStatus,\n  revealStatus,\n  translateStatus,\n  undoStatusTranslation,\n} from '../../actions/statuses';\nimport ColumnHeader from '../../components/column_header';\nimport { textForScreenReader, defaultMediaVisibility } from '../../components/status';\nimport StatusContainer from '../../containers/status_container';\nimport { boostModal, favouriteModal, deleteModal } from '../../initial_state';\nimport { makeGetStatus, makeGetPictureInPicture } from '../../selectors';\nimport Column from '../ui/components/column';\nimport { attachFullscreenListener, detachFullscreenListener, isFullscreen } from '../ui/util/fullscreen';\n\nimport ActionBar from './components/action_bar';\nimport DetailedStatus from './components/detailed_status';\n\n\nconst messages = defineMessages({\n  deleteConfirm: { id: 'confirmations.delete.confirm', defaultMessage: 'Delete' },\n  deleteMessage: { id: 'confirmations.delete.message', defaultMessage: 'Are you sure you want to delete this status?' },\n  redraftConfirm: { id: 'confirmations.redraft.confirm', defaultMessage: 'Delete & redraft' },\n  redraftMessage: { id: 'confirmations.redraft.message', defaultMessage: 'Are you sure you want to delete this status and re-draft it? Favorites and boosts will be lost, and replies to the original post will be orphaned.' },\n  revealAll: { id: 'status.show_more_all', defaultMessage: 'Show more for all' },\n  hideAll: { id: 'status.show_less_all', defaultMessage: 'Show less for all' },\n  statusTitleWithAttachments: { id: 'status.title.with_attachments', defaultMessage: '{user} posted {attachmentCount, plural, one {an attachment} other {# attachments}}' },\n  detailedStatus: { id: 'status.detailed_status', defaultMessage: 'Detailed conversation view' },\n  replyConfirm: { id: 'confirmations.reply.confirm', defaultMessage: 'Reply' },\n  replyMessage: { id: 'confirmations.reply.message', defaultMessage: 'Replying now will overwrite the message you are currently composing. Are you sure you want to proceed?' },\n  tootHeading: { id: 'account.posts_with_replies', defaultMessage: 'Posts and replies' },\n});\n\nconst makeMapStateToProps = () => {\n  const getStatus = makeGetStatus();\n  const getPictureInPicture = makeGetPictureInPicture();\n\n  const getAncestorsIds = createSelector([\n    (_, { id }) => id,\n    state => state.getIn(['contexts', 'inReplyTos']),\n  ], (statusId, inReplyTos) => {\n    let ancestorsIds = Immutable.List();\n    ancestorsIds = ancestorsIds.withMutations(mutable => {\n      let id = statusId;\n\n      while (id && !mutable.includes(id)) {\n        mutable.unshift(id);\n        id = inReplyTos.get(id);\n      }\n    });\n\n    return ancestorsIds;\n  });\n\n  const getDescendantsIds = createSelector([\n    (_, { id }) => id,\n    state => state.getIn(['contexts', 'replies']),\n    state => state.get('statuses'),\n  ], (statusId, contextReplies, statuses) => {\n    let descendantsIds = [];\n    const ids = [statusId];\n\n    while (ids.length > 0) {\n      let id        = ids.pop();\n      const replies = contextReplies.get(id);\n\n      if (statusId !== id) {\n        descendantsIds.push(id);\n      }\n\n      if (replies) {\n        replies.reverse().forEach(reply => {\n          if (!ids.includes(reply) && !descendantsIds.includes(reply) && statusId !== reply) ids.push(reply);\n        });\n      }\n    }\n\n    let insertAt = descendantsIds.findIndex((id) => statuses.get(id).get('in_reply_to_account_id') !== statuses.get(id).get('account'));\n    if (insertAt !== -1) {\n      descendantsIds.forEach((id, idx) => {\n        if (idx > insertAt && statuses.get(id).get('in_reply_to_account_id') === statuses.get(id).get('account')) {\n          descendantsIds.splice(idx, 1);\n          descendantsIds.splice(insertAt, 0, id);\n          insertAt += 1;\n        }\n      });\n    }\n\n    return Immutable.List(descendantsIds);\n  });\n\n  const mapStateToProps = (state, props) => {\n    const status = getStatus(state, { id: props.params.statusId });\n\n    let ancestorsIds   = Immutable.List();\n    let descendantsIds = Immutable.List();\n\n    if (status) {\n      ancestorsIds   = getAncestorsIds(state, { id: status.get('in_reply_to_id') });\n      descendantsIds = getDescendantsIds(state, { id: status.get('id') });\n    }\n\n    return {\n      isLoading: state.getIn(['statuses', props.params.statusId, 'isLoading']),\n      status,\n      ancestorsIds,\n      descendantsIds,\n      settings: state.get('local_settings'),\n      askReplyConfirmation: state.getIn(['local_settings', 'confirm_before_clearing_draft']) && state.getIn(['compose', 'text']).trim().length !== 0,\n      domain: state.getIn(['meta', 'domain']),\n      pictureInPicture: getPictureInPicture(state, { id: props.params.statusId }),\n    };\n  };\n\n  return mapStateToProps;\n};\n\nconst truncate = (str, num) => {\n  const arr = Array.from(str);\n  if (arr.length > num) {\n    return arr.slice(0, num).join('') + '…';\n  } else {\n    return str;\n  }\n};\n\nconst titleFromStatus = (intl, status) => {\n  const displayName = status.getIn(['account', 'display_name']);\n  const username = status.getIn(['account', 'username']);\n  const user = displayName.trim().length === 0 ? username : displayName;\n  const text = status.get('search_index');\n  const attachmentCount = status.get('media_attachments').size;\n\n  return text ? `${user}: \"${truncate(text, 30)}\"` : intl.formatMessage(messages.statusTitleWithAttachments, { user, attachmentCount });\n};\n\nclass Status extends ImmutablePureComponent {\n  static propTypes = {\n    identity: identityContextPropShape,\n    params: PropTypes.object.isRequired,\n    dispatch: PropTypes.func.isRequired,\n    status: ImmutablePropTypes.map,\n    isLoading: PropTypes.bool,\n    settings: ImmutablePropTypes.map.isRequired,\n    ancestorsIds: ImmutablePropTypes.list.isRequired,\n    descendantsIds: ImmutablePropTypes.list.isRequired,\n    intl: PropTypes.object.isRequired,\n    askReplyConfirmation: PropTypes.bool,\n    multiColumn: PropTypes.bool,\n    domain: PropTypes.string.isRequired,\n    pictureInPicture: ImmutablePropTypes.contains({\n      inUse: PropTypes.bool,\n      available: PropTypes.bool,\n    }),\n    ...WithRouterPropTypes\n  };\n\n  state = {\n    fullscreen: false,\n    isExpanded: undefined,\n    threadExpanded: undefined,\n    statusId: undefined,\n    loadedStatusId: undefined,\n    showMedia: undefined,\n    revealBehindCW: undefined,\n  };\n\n  componentDidMount () {\n    attachFullscreenListener(this.onFullScreenChange);\n    this.props.dispatch(fetchStatus(this.props.params.statusId));\n    this._scrollStatusIntoView();\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    let update = {};\n    let updated = false;\n\n    if (props.params.statusId && state.statusId !== props.params.statusId) {\n      props.dispatch(fetchStatus(props.params.statusId));\n      update.threadExpanded = undefined;\n      update.statusId = props.params.statusId;\n      updated = true;\n    }\n\n    const revealBehindCW = props.settings.getIn(['media', 'reveal_behind_cw']);\n    if (revealBehindCW !== state.revealBehindCW) {\n      update.revealBehindCW = revealBehindCW;\n      if (revealBehindCW) update.showMedia = defaultMediaVisibility(props.status, props.settings);\n      updated = true;\n    }\n\n    if (props.status && state.loadedStatusId !== props.status.get('id')) {\n      update.showMedia = defaultMediaVisibility(props.status, props.settings);\n      update.loadedStatusId = props.status.get('id');\n      update.isExpanded = autoUnfoldCW(props.settings, props.status);\n      updated = true;\n    }\n\n    return updated ? update : null;\n  }\n\n  handleToggleHidden = () => {\n    const { status } = this.props;\n\n    if (this.props.settings.getIn(['content_warnings', 'shared_state'])) {\n      if (status.get('hidden')) {\n        this.props.dispatch(revealStatus(status.get('id')));\n      } else {\n        this.props.dispatch(hideStatus(status.get('id')));\n      }\n    } else if (this.props.status.get('spoiler_text')) {\n      this.setExpansion(!this.state.isExpanded);\n    }\n  };\n\n  handleToggleMediaVisibility = () => {\n    this.setState({ showMedia: !this.state.showMedia });\n  };\n\n  handleModalFavourite = (status) => {\n    this.props.dispatch(favourite(status));\n  };\n\n  handleFavouriteClick = (status, e) => {\n    const { dispatch } = this.props;\n    const { signedIn } = this.props.identity;\n\n    if (signedIn) {\n      if (status.get('favourited')) {\n        dispatch(unfavourite(status));\n      } else {\n        if ((e && e.shiftKey) || !favouriteModal) {\n          this.handleModalFavourite(status);\n        } else {\n          dispatch(openModal({\n            modalType: 'FAVOURITE',\n            modalProps: {\n              status,\n              onFavourite: this.handleModalFavourite,\n            },\n          }));\n        }\n      }\n    } else {\n      dispatch(openModal({\n        modalType: 'INTERACTION',\n        modalProps: {\n          type: 'favourite',\n          accountId: status.getIn(['account', 'id']),\n          url: status.get('uri'),\n        },\n      }));\n    }\n  };\n\n  handleReactionAdd = (statusId, name, url) => {\n    const { dispatch, identity } = this.props;\n    const { signedIn } = identity;\n\n    if (signedIn) {\n      dispatch(addReaction(statusId, name, url));\n    }\n  };\n\n  handleReactionRemove = (statusId, name) => {\n    this.props.dispatch(removeReaction(statusId, name));\n  };\n\n  handlePin = (status) => {\n    if (status.get('pinned')) {\n      this.props.dispatch(unpin(status));\n    } else {\n      this.props.dispatch(pin(status));\n    }\n  };\n\n  handleReplyClick = (status) => {\n    const { askReplyConfirmation, dispatch, intl } = this.props;\n    const { signedIn } = this.props.identity;\n\n    if (signedIn) {\n      if (askReplyConfirmation) {\n        dispatch(openModal({\n          modalType: 'CONFIRM',\n          modalProps: {\n            message: intl.formatMessage(messages.replyMessage),\n            confirm: intl.formatMessage(messages.replyConfirm),\n            onDoNotAsk: () => dispatch(changeLocalSetting(['confirm_before_clearing_draft'], false)),\n            onConfirm: () => dispatch(replyCompose(status, this.props.history)),\n          },\n        }));\n      } else {\n        dispatch(replyCompose(status, this.props.history));\n      }\n    } else {\n      dispatch(openModal({\n        modalType: 'INTERACTION',\n        modalProps: {\n          type: 'reply',\n          accountId: status.getIn(['account', 'id']),\n          url: status.get('uri'),\n        },\n      }));\n    }\n  };\n\n  handleModalReblog = (status, privacy) => {\n    const { dispatch } = this.props;\n\n    if (status.get('reblogged')) {\n      dispatch(unreblog({ statusId: status.get('id') }));\n    } else {\n      dispatch(reblog({ statusId: status.get('id'), visibility: privacy }));\n    }\n  };\n\n  handleReblogClick = (status, e) => {\n    const { settings, dispatch } = this.props;\n    const { signedIn } = this.props.identity;\n\n    if (signedIn) {\n      if (settings.get('confirm_boost_missing_media_description') && status.get('media_attachments').some(item => !item.get('description')) && !status.get('reblogged')) {\n        dispatch(openModal({ modalType: 'BOOST', modalProps: { status, onReblog: this.handleModalReblog, missingMediaDescription: true } }));\n      } else if ((e && e.shiftKey) || !boostModal) {\n        this.handleModalReblog(status);\n      } else {\n        dispatch(openModal({ modalType: 'BOOST', modalProps: { status, onReblog: this.handleModalReblog } }));\n      }\n    } else {\n      dispatch(openModal({\n        modalType: 'INTERACTION',\n        modalProps: {\n          type: 'reblog',\n          accountId: status.getIn(['account', 'id']),\n          url: status.get('uri'),\n        },\n      }));\n    }\n  };\n\n  handleBookmarkClick = (status) => {\n    if (status.get('bookmarked')) {\n      this.props.dispatch(unbookmark(status));\n    } else {\n      this.props.dispatch(bookmark(status));\n    }\n  };\n\n  handleDeleteClick = (status, history, withRedraft = false) => {\n    const { dispatch, intl } = this.props;\n\n    if (!deleteModal) {\n      dispatch(deleteStatus(status.get('id'), history, withRedraft));\n    } else {\n      dispatch(openModal({\n        modalType: 'CONFIRM',\n        modalProps: {\n          message: intl.formatMessage(withRedraft ? messages.redraftMessage : messages.deleteMessage),\n          confirm: intl.formatMessage(withRedraft ? messages.redraftConfirm : messages.deleteConfirm),\n          onConfirm: () => dispatch(deleteStatus(status.get('id'), history, withRedraft)),\n        },\n      }));\n    }\n  };\n\n  handleEditClick = (status, history) => {\n    this.props.dispatch(editStatus(status.get('id'), history));\n  };\n\n  handleDirectClick = (account, history) => {\n    this.props.dispatch(directCompose(account, history));\n  };\n\n  handleMentionClick = (account, history) => {\n    this.props.dispatch(mentionCompose(account, history));\n  };\n\n  handleOpenMedia = (media, index, lang) => {\n    this.props.dispatch(openModal({\n      modalType: 'MEDIA',\n      modalProps: { statusId: this.props.status.get('id'), media, index, lang },\n    }));\n  };\n\n  handleOpenVideo = (media, lang, options) => {\n    this.props.dispatch(openModal({\n      modalType: 'VIDEO',\n      modalProps: { statusId: this.props.status.get('id'), media, lang, options },\n    }));\n  };\n\n  handleHotkeyOpenMedia = e => {\n    const { status } = this.props;\n\n    e.preventDefault();\n\n    if (status.get('media_attachments').size > 0) {\n      if (status.getIn(['media_attachments', 0, 'type']) === 'video') {\n        this.handleOpenVideo(status.getIn(['media_attachments', 0]), { startTime: 0 });\n      } else {\n        this.handleOpenMedia(status.get('media_attachments'), 0);\n      }\n    }\n  };\n\n  handleMuteClick = (account) => {\n    this.props.dispatch(initMuteModal(account));\n  };\n\n  handleConversationMuteClick = (status) => {\n    if (status.get('muted')) {\n      this.props.dispatch(unmuteStatus(status.get('id')));\n    } else {\n      this.props.dispatch(muteStatus(status.get('id')));\n    }\n  };\n\n  handleToggleAll = () => {\n    const { status, ancestorsIds, descendantsIds, settings } = this.props;\n    const statusIds = [status.get('id')].concat(ancestorsIds.toJS(), descendantsIds.toJS());\n    let { isExpanded } = this.state;\n\n    if (settings.getIn(['content_warnings', 'shared_state']))\n      isExpanded = !status.get('hidden');\n\n    if (!isExpanded) {\n      this.props.dispatch(revealStatus(statusIds));\n    } else {\n      this.props.dispatch(hideStatus(statusIds));\n    }\n\n    this.setState({ isExpanded: !isExpanded, threadExpanded: !isExpanded });\n  };\n\n  handleTranslate = status => {\n    const { dispatch } = this.props;\n\n    if (status.get('translation')) {\n      dispatch(undoStatusTranslation(status.get('id'), status.get('poll')));\n    } else {\n      dispatch(translateStatus(status.get('id')));\n    }\n  };\n\n  handleBlockClick = (status) => {\n    const { dispatch } = this.props;\n    const account = status.get('account');\n    dispatch(initBlockModal(account));\n  };\n\n  handleReport = (status) => {\n    this.props.dispatch(initReport(status.get('account'), status));\n  };\n\n  handleEmbed = (status) => {\n    this.props.dispatch(openModal({\n      modalType: 'EMBED',\n      modalProps: { id: status.get('id') },\n    }));\n  };\n\n  handleHotkeyToggleSensitive = () => {\n    this.handleToggleMediaVisibility();\n  };\n\n  handleHotkeyMoveUp = () => {\n    this.handleMoveUp(this.props.status.get('id'));\n  };\n\n  handleHotkeyMoveDown = () => {\n    this.handleMoveDown(this.props.status.get('id'));\n  };\n\n  handleHotkeyReply = e => {\n    e.preventDefault();\n    this.handleReplyClick(this.props.status);\n  };\n\n  handleHotkeyFavourite = () => {\n    this.handleFavouriteClick(this.props.status);\n  };\n\n  handleHotkeyBoost = () => {\n    this.handleReblogClick(this.props.status);\n  };\n\n  handleHotkeyBookmark = () => {\n    this.handleBookmarkClick(this.props.status);\n  };\n\n  handleHotkeyMention = e => {\n    e.preventDefault();\n    this.handleMentionClick(this.props.status);\n  };\n\n  handleHotkeyOpenProfile = () => {\n    this.props.history.push(`/@${this.props.status.getIn(['account', 'acct'])}`);\n  };\n\n  handleMoveUp = id => {\n    const { status, ancestorsIds, descendantsIds } = this.props;\n\n    if (id === status.get('id')) {\n      this._selectChild(ancestorsIds.size - 1, true);\n    } else {\n      let index = ancestorsIds.indexOf(id);\n\n      if (index === -1) {\n        index = descendantsIds.indexOf(id);\n        this._selectChild(ancestorsIds.size + index, true);\n      } else {\n        this._selectChild(index - 1, true);\n      }\n    }\n  };\n\n  handleMoveDown = id => {\n    const { status, ancestorsIds, descendantsIds } = this.props;\n\n    if (id === status.get('id')) {\n      this._selectChild(ancestorsIds.size + 1, false);\n    } else {\n      let index = ancestorsIds.indexOf(id);\n\n      if (index === -1) {\n        index = descendantsIds.indexOf(id);\n        this._selectChild(ancestorsIds.size + index + 2, false);\n      } else {\n        this._selectChild(index + 1, false);\n      }\n    }\n  };\n\n  _selectChild (index, align_top) {\n    const container = this.node;\n    const element = container.querySelectorAll('.focusable')[index];\n\n    if (element) {\n      if (align_top && container.scrollTop > element.offsetTop) {\n        element.scrollIntoView(true);\n      } else if (!align_top && container.scrollTop + container.clientHeight < element.offsetTop + element.offsetHeight) {\n        element.scrollIntoView(false);\n      }\n      element.focus();\n    }\n  }\n\n  handleHeaderClick = () => {\n    this.column.scrollTop();\n  };\n\n  renderChildren (list, ancestors) {\n    const { params: { statusId } } = this.props;\n\n    return list.map((id, i) => (\n      <StatusContainer\n        key={id}\n        id={id}\n        expanded={this.state.threadExpanded}\n        onMoveUp={this.handleMoveUp}\n        onMoveDown={this.handleMoveDown}\n        contextType='thread'\n        previousId={i > 0 ? list.get(i - 1) : undefined}\n        nextId={list.get(i + 1) || (ancestors && statusId)}\n        rootId={statusId}\n      />\n    ));\n  }\n\n  setExpansion = value => {\n    this.setState({ isExpanded: value });\n  };\n\n  setContainerRef = c => {\n    this.node = c;\n  };\n\n  setColumnRef = c => {\n    this.column = c;\n  };\n\n  setStatusRef = c => {\n    this.statusNode = c;\n  };\n\n  _scrollStatusIntoView () {\n    const { status, multiColumn } = this.props;\n\n    if (status) {\n      requestIdleCallback(() => {\n        this.statusNode?.scrollIntoView(true);\n\n        // In the single-column interface, `scrollIntoView` will put the post behind the header,\n        // so compensate for that.\n        if (!multiColumn) {\n          const offset = document.querySelector('.column-header__wrapper')?.getBoundingClientRect()?.bottom;\n          if (offset) {\n            const scrollingElement = document.scrollingElement || document.body;\n            scrollingElement.scrollBy(0, -offset);\n          }\n        }\n      });\n    }\n  }\n\n  componentDidUpdate (prevProps) {\n    const { status, ancestorsIds } = this.props;\n\n    if (status && (ancestorsIds.size > prevProps.ancestorsIds.size || prevProps.status?.get('id') !== status.get('id'))) {\n      this._scrollStatusIntoView();\n    }\n  }\n\n  componentWillUnmount () {\n    detachFullscreenListener(this.onFullScreenChange);\n  }\n\n  onFullScreenChange = () => {\n    this.setState({ fullscreen: isFullscreen() });\n  };\n\n  shouldUpdateScroll = (prevRouterProps, { location }) => {\n    // Do not change scroll when opening a modal\n    if (location.state?.mastodonModalKey !== prevRouterProps?.location?.state?.mastodonModalKey) {\n      return false;\n    }\n\n    // Scroll to focused post if it is loaded\n    if (this.statusNode) {\n      return [0, this.statusNode.offsetTop];\n    }\n\n    // Do not scroll otherwise, `componentDidUpdate` will take care of that\n    return false;\n  };\n\n  render () {\n    let ancestors, descendants;\n    const { isLoading, status, settings, ancestorsIds, descendantsIds, intl, domain, multiColumn, pictureInPicture } = this.props;\n    const { fullscreen } = this.state;\n\n    if (isLoading) {\n      return (\n        <Column>\n          <LoadingIndicator />\n        </Column>\n      );\n    }\n\n    if (status === null) {\n      return (\n        <BundleColumnError multiColumn={multiColumn} errorType='routing' />\n      );\n    }\n\n    const isExpanded = settings.getIn(['content_warnings', 'shared_state']) ? !status.get('hidden') : this.state.isExpanded;\n\n    if (ancestorsIds && ancestorsIds.size > 0) {\n      ancestors = <>{this.renderChildren(ancestorsIds, true)}</>;\n    }\n\n    if (descendantsIds && descendantsIds.size > 0) {\n      descendants = <>{this.renderChildren(descendantsIds)}</>;\n    }\n\n    const isLocal = status.getIn(['account', 'acct'], '').indexOf('@') === -1;\n    const isIndexable = !status.getIn(['account', 'noindex']);\n\n    const handlers = {\n      moveUp: this.handleHotkeyMoveUp,\n      moveDown: this.handleHotkeyMoveDown,\n      reply: this.handleHotkeyReply,\n      favourite: this.handleHotkeyFavourite,\n      boost: this.handleHotkeyBoost,\n      bookmark: this.handleHotkeyBookmark,\n      mention: this.handleHotkeyMention,\n      openProfile: this.handleHotkeyOpenProfile,\n      toggleHidden: this.handleToggleHidden,\n      toggleSensitive: this.handleHotkeyToggleSensitive,\n      openMedia: this.handleHotkeyOpenMedia,\n    };\n\n    return (\n      <Column bindToDocument={!multiColumn} ref={this.setColumnRef} label={intl.formatMessage(messages.detailedStatus)}>\n        <ColumnHeader\n          icon='comment'\n          iconComponent={ChatIcon}\n          title={intl.formatMessage(messages.tootHeading)}\n          onClick={this.handleHeaderClick}\n          showBackButton\n          multiColumn={multiColumn}\n          extraButton={(\n            <button type='button' className='column-header__button' title={intl.formatMessage(!isExpanded ? messages.revealAll : messages.hideAll)} aria-label={intl.formatMessage(!isExpanded ? messages.revealAll : messages.hideAll)} onClick={this.handleToggleAll}><Icon id={!isExpanded ? 'eye-slash' : 'eye'} icon={isExpanded ? VisibilityOffIcon : VisibilityIcon} /></button>\n          )}\n        />\n\n        <ScrollContainer scrollKey='thread' shouldUpdateScroll={this.shouldUpdateScroll}>\n          <div className={classNames('scrollable', { fullscreen })} ref={this.setContainerRef}>\n            {ancestors}\n\n            <HotKeys handlers={handlers}>\n              <div className={classNames('focusable', 'detailed-status__wrapper', `detailed-status__wrapper-${status.get('visibility')}`)} tabIndex={0} aria-label={textForScreenReader(intl, status, false, isExpanded)} ref={this.setStatusRef}>\n                <DetailedStatus\n                  key={`details-${status.get('id')}`}\n                  status={status}\n                  settings={settings}\n                  onOpenVideo={this.handleOpenVideo}\n                  onOpenMedia={this.handleOpenMedia}\n                  onReactionAdd={this.handleReactionAdd}\n                  onReactionRemove={this.handleReactionRemove}\n                  expanded={isExpanded}\n                  onToggleHidden={this.handleToggleHidden}\n                  onTranslate={this.handleTranslate}\n                  domain={domain}\n                  showMedia={this.state.showMedia}\n                  onToggleMediaVisibility={this.handleToggleMediaVisibility}\n                  pictureInPicture={pictureInPicture}\n                />\n\n                <ActionBar\n                  key={`action-bar-${status.get('id')}`}\n                  status={status}\n                  onReply={this.handleReplyClick}\n                  onFavourite={this.handleFavouriteClick}\n                  onReactionAdd={this.handleReactionAdd}\n                  onReblog={this.handleReblogClick}\n                  onBookmark={this.handleBookmarkClick}\n                  onDelete={this.handleDeleteClick}\n                  onEdit={this.handleEditClick}\n                  onDirect={this.handleDirectClick}\n                  onMention={this.handleMentionClick}\n                  onMute={this.handleMuteClick}\n                  onMuteConversation={this.handleConversationMuteClick}\n                  onBlock={this.handleBlockClick}\n                  onReport={this.handleReport}\n                  onPin={this.handlePin}\n                  onEmbed={this.handleEmbed}\n                />\n              </div>\n            </HotKeys>\n\n            {descendants}\n          </div>\n        </ScrollContainer>\n\n        <Helmet>\n          <title>{titleFromStatus(intl, status)}</title>\n          <meta name='robots' content={(isLocal && isIndexable) ? 'all' : 'noindex'} />\n          <link rel='canonical' href={status.get('url')} />\n        </Helmet>\n      </Column>\n    );\n  }\n\n}\n\nexport default withRouter(injectIntl(connect(makeMapStateToProps)(withIdentity(Status))));\n"],"sourceRoot":""}