{"version":3,"sources":["webpack:///app/javascript/var/home/testeraphy/Documents/Chuckya-fe-standalone/app/javascript/flavours/glitch/features/account_gallery/components/media_item.jsx","webpack:///app/javascript/var/home/testeraphy/Documents/Chuckya-fe-standalone/app/javascript/flavours/glitch/features/account_gallery/index.jsx"],"names":["MediaItem","ImmutablePureComponent","constructor","arguments","_defineProperty","visible","displayMedia","this","props","attachment","getIn","loaded","setState","e","hoverToPlay","target","play","pause","currentTime","button","ctrlKey","metaKey","preventDefault","state","onOpenMedia","autoPlayGif","indexOf","get","render","displayWidth","width","concat","Math","floor","height","status","title","thumbnail","label","icon","content","includes","_jsx","src","alt","lang","onLoad","handleImageLoad","Icon","id","AudiotrackIcon","PlayArrowIcon","x","y","style","objectPosition","className","role","onMouseEnter","handleMouseEnter","onMouseLeave","handleMouseLeave","autoPlay","playsInline","loop","muted","VisibilityOffIcon","href","onClick","handleClick","rel","Blurhash","hash","classNames","dummy","useBlurhash","ImmutablePropTypes","map","isRequired","PropTypes","number","func","LoadMoreMedia","onLoadMore","maxId","LoadMore","disabled","handleLoadMore","string","AccountGallery","column","scrollTop","hasMore","attachments","size","last","undefined","scrollHeight","clientHeight","isLoading","handleScrollToBottom","dispatch","expandAccountMediaTimeline","accountId","c","statusId","openModal","modalType","modalProps","media","options","index","findIndex","offsetWidth","_load","isAccount","fetchAccount","componentDidMount","params","acct","lookupAccount","componentDidUpdate","prevProps","multiColumn","suspended","BundleColumnError","errorType","Column","LoadingIndicator","loadOlder","handleLoadOlder","_jsxs","ref","setColumnRef","children","ProfileColumnHeader","handleHeaderClick","ScrollContainer","scrollKey","onScroll","handleScroll","HeaderContainer","FormattedMessage","defaultMessage","handleRef","handleOpenMedia","shape","list","bool","connect","mapStateToProps","_ref","normalizeForLookup","getAccountGallery"],"mappings":"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","file":"js/flavours/glitch/async/account_gallery.js","sourcesContent":["import PropTypes from 'prop-types';\n\nimport classNames from 'classnames';\n\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\n\nimport AudiotrackIcon from '@/material-icons/400-24px/music_note.svg?react';\nimport PlayArrowIcon from '@/material-icons/400-24px/play_arrow.svg?react';\nimport VisibilityOffIcon from '@/material-icons/400-24px/visibility_off.svg?react';\nimport { Blurhash } from 'flavours/glitch/components/blurhash';\nimport { Icon }  from 'flavours/glitch/components/icon';\nimport { autoPlayGif, displayMedia, useBlurhash } from 'flavours/glitch/initial_state';\n\nexport default class MediaItem extends ImmutablePureComponent {\n\n  static propTypes = {\n    attachment: ImmutablePropTypes.map.isRequired,\n    displayWidth: PropTypes.number.isRequired,\n    onOpenMedia: PropTypes.func.isRequired,\n  };\n\n  state = {\n    visible: displayMedia !== 'hide_all' && !this.props.attachment.getIn(['status', 'sensitive']) || displayMedia === 'show_all',\n    loaded: false,\n  };\n\n  handleImageLoad = () => {\n    this.setState({ loaded: true });\n  };\n\n  handleMouseEnter = e => {\n    if (this.hoverToPlay()) {\n      e.target.play();\n    }\n  };\n\n  handleMouseLeave = e => {\n    if (this.hoverToPlay()) {\n      e.target.pause();\n      e.target.currentTime = 0;\n    }\n  };\n\n  hoverToPlay () {\n    return !autoPlayGif && ['gifv', 'video'].indexOf(this.props.attachment.get('type')) !== -1;\n  }\n\n  handleClick = e => {\n    if (e.button === 0 && !(e.ctrlKey || e.metaKey)) {\n      e.preventDefault();\n\n      if (this.state.visible) {\n        this.props.onOpenMedia(this.props.attachment);\n      } else {\n        this.setState({ visible: true });\n      }\n    }\n  };\n\n  render () {\n    const { attachment, displayWidth } = this.props;\n    const { visible, loaded } = this.state;\n\n    const width  = `${Math.floor((displayWidth - 4) / 3) - 4}px`;\n    const height = width;\n    const status = attachment.get('status');\n    const title  = status.get('spoiler_text') || attachment.get('description');\n\n    let thumbnail, label, icon, content;\n\n    if (!visible) {\n      icon = (\n        <span className='account-gallery__item__icons'>\n          <Icon id='eye-slash' icon={VisibilityOffIcon} />\n        </span>\n      );\n    } else {\n      if (['audio', 'video'].includes(attachment.get('type'))) {\n        content = (\n          <img\n            src={attachment.get('preview_url') || status.getIn(['account', 'avatar_static'])}\n            alt={attachment.get('description')}\n            lang={status.get('language')}\n            onLoad={this.handleImageLoad}\n          />\n        );\n\n        if (attachment.get('type') === 'audio') {\n          label = <Icon id='music' icon={AudiotrackIcon} />;\n        } else {\n          label = <Icon id='play' icon={PlayArrowIcon} />;\n        }\n      } else if (attachment.get('type') === 'image') {\n        const focusX = attachment.getIn(['meta', 'focus', 'x']) || 0;\n        const focusY = attachment.getIn(['meta', 'focus', 'y']) || 0;\n        const x      = ((focusX /  2) + .5) * 100;\n        const y      = ((focusY / -2) + .5) * 100;\n\n        content = (\n          <img\n            src={attachment.get('preview_url')}\n            alt={attachment.get('description')}\n            lang={status.get('language')}\n            style={{ objectPosition: `${x}% ${y}%` }}\n            onLoad={this.handleImageLoad}\n          />\n        );\n      } else if (attachment.get('type') === 'gifv') {\n        content = (\n          <video\n            className='media-gallery__item-gifv-thumbnail'\n            aria-label={attachment.get('description')}\n            title={attachment.get('description')}\n            lang={status.get('language')}\n            role='application'\n            src={attachment.get('url')}\n            onMouseEnter={this.handleMouseEnter}\n            onMouseLeave={this.handleMouseLeave}\n            autoPlay={autoPlayGif}\n            playsInline\n            loop\n            muted\n          />\n        );\n\n        label = 'GIF';\n      }\n\n      thumbnail = (\n        <div className='media-gallery__gifv'>\n          {content}\n\n          {label && (\n            <div className='media-gallery__item__badges'>\n              <span className='media-gallery__gifv__label'>{label}</span>\n            </div>\n          )}\n        </div>\n      );\n    }\n\n    return (\n      <div className='account-gallery__item' style={{ width, height }}>\n        <a className='media-gallery__item-thumbnail' href={status.get('url')} onClick={this.handleClick} title={title} target='_blank' rel='noopener noreferrer'>\n          <Blurhash\n            hash={attachment.get('blurhash')}\n            className={classNames('media-gallery__preview', { 'media-gallery__preview--hidden': visible && loaded })}\n            dummy={!useBlurhash}\n          />\n\n          {visible ? thumbnail : icon}\n        </a>\n      </div>\n    );\n  }\n\n}\n","import PropTypes from 'prop-types';\n\nimport { FormattedMessage } from 'react-intl';\n\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport { connect } from 'react-redux';\n\nimport { lookupAccount, fetchAccount } from 'flavours/glitch/actions/accounts';\nimport { openModal } from 'flavours/glitch/actions/modal';\nimport { LoadMore } from 'flavours/glitch/components/load_more';\nimport { LoadingIndicator } from 'flavours/glitch/components/loading_indicator';\nimport ScrollContainer from 'flavours/glitch/containers/scroll_container';\nimport ProfileColumnHeader from 'flavours/glitch/features/account/components/profile_column_header';\nimport BundleColumnError from 'flavours/glitch/features/ui/components/bundle_column_error';\nimport { normalizeForLookup } from 'flavours/glitch/reducers/accounts_map';\nimport { getAccountGallery } from 'flavours/glitch/selectors';\n\nimport { expandAccountMediaTimeline } from '../../actions/timelines';\nimport HeaderContainer from '../account_timeline/containers/header_container';\nimport Column from '../ui/components/column';\n\nimport MediaItem from './components/media_item';\n\nconst mapStateToProps = (state, { params: { acct, id } }) => {\n  const accountId = id || state.getIn(['accounts_map', normalizeForLookup(acct)]);\n\n  if (!accountId) {\n    return {\n      isLoading: true,\n    };\n  }\n\n  return {\n    accountId,\n    isAccount: !!state.getIn(['accounts', accountId]),\n    attachments: getAccountGallery(state, accountId),\n    isLoading: state.getIn(['timelines', `account:${accountId}:media`, 'isLoading']),\n    hasMore: state.getIn(['timelines', `account:${accountId}:media`, 'hasMore']),\n    suspended: state.getIn(['accounts', accountId, 'suspended'], false),\n  };\n};\n\nclass LoadMoreMedia extends ImmutablePureComponent {\n\n  static propTypes = {\n    maxId: PropTypes.string,\n    onLoadMore: PropTypes.func.isRequired,\n  };\n\n  handleLoadMore = () => {\n    this.props.onLoadMore(this.props.maxId);\n  };\n\n  render () {\n    return (\n      <LoadMore\n        disabled={this.props.disabled}\n        onClick={this.handleLoadMore}\n      />\n    );\n  }\n\n}\n\nclass AccountGallery extends ImmutablePureComponent {\n\n  static propTypes = {\n    params: PropTypes.shape({\n      acct: PropTypes.string,\n      id: PropTypes.string,\n    }).isRequired,\n    accountId: PropTypes.string,\n    dispatch: PropTypes.func.isRequired,\n    attachments: ImmutablePropTypes.list.isRequired,\n    isLoading: PropTypes.bool,\n    hasMore: PropTypes.bool,\n    isAccount: PropTypes.bool,\n    suspended: PropTypes.bool,\n    multiColumn: PropTypes.bool,\n  };\n\n  state = {\n    width: 323,\n  };\n\n  _load () {\n    const { accountId, isAccount, dispatch } = this.props;\n\n    if (!isAccount) dispatch(fetchAccount(accountId));\n    dispatch(expandAccountMediaTimeline(accountId));\n  }\n\n  componentDidMount () {\n    const { params: { acct }, accountId, dispatch } = this.props;\n\n    if (accountId) {\n      this._load();\n    } else {\n      dispatch(lookupAccount(acct));\n    }\n  }\n\n  componentDidUpdate (prevProps) {\n    const { params: { acct }, accountId, dispatch } = this.props;\n\n    if (prevProps.accountId !== accountId && accountId) {\n      this._load();\n    } else if (prevProps.params.acct !== acct) {\n      dispatch(lookupAccount(acct));\n    }\n  }\n\n  handleHeaderClick = () => {\n    this.column.scrollTop();\n  };\n\n  handleScrollToBottom = () => {\n    if (this.props.hasMore) {\n      this.handleLoadMore(this.props.attachments.size > 0 ? this.props.attachments.last().getIn(['status', 'id']) : undefined);\n    }\n  };\n\n  handleScroll = e => {\n    const { scrollTop, scrollHeight, clientHeight } = e.target;\n    const offset = scrollHeight - scrollTop - clientHeight;\n\n    if (150 > offset && !this.props.isLoading) {\n      this.handleScrollToBottom();\n    }\n  };\n\n  handleLoadMore = maxId => {\n    this.props.dispatch(expandAccountMediaTimeline(this.props.accountId, { maxId }));\n  };\n\n  handleLoadOlder = e => {\n    e.preventDefault();\n    this.handleScrollToBottom();\n  };\n\n  setColumnRef = c => {\n    this.column = c;\n  };\n\n  handleOpenMedia = attachment => {\n    const { dispatch } = this.props;\n    const statusId = attachment.getIn(['status', 'id']);\n    const lang = attachment.getIn(['status', 'language']);\n\n    if (attachment.get('type') === 'video') {\n      dispatch(openModal({\n        modalType: 'VIDEO',\n        modalProps: { media: attachment, statusId, lang, options: { autoPlay: true } },\n      }));\n    } else if (attachment.get('type') === 'audio') {\n      dispatch(openModal({\n        modalType: 'AUDIO',\n        modalProps: { media: attachment, statusId, lang, options: { autoPlay: true } },\n      }));\n    } else {\n      const media = attachment.getIn(['status', 'media_attachments']);\n      const index = media.findIndex(x => x.get('id') === attachment.get('id'));\n\n      dispatch(openModal({\n        modalType: 'MEDIA',\n        modalProps: { media, index, statusId, lang },\n      }));\n    }\n  };\n\n  handleRef = c => {\n    if (c) {\n      this.setState({ width: c.offsetWidth });\n    }\n  };\n\n  render () {\n    const { attachments, isLoading, hasMore, isAccount, multiColumn, suspended } = this.props;\n    const { width } = this.state;\n\n    if (!isAccount) {\n      return (\n        <BundleColumnError multiColumn={multiColumn} errorType='routing' />\n      );\n    }\n\n    if (!attachments && isLoading) {\n      return (\n        <Column>\n          <LoadingIndicator />\n        </Column>\n      );\n    }\n\n    let loadOlder = null;\n\n    if (hasMore && !(isLoading && attachments.size === 0)) {\n      loadOlder = <LoadMore visible={!isLoading} onClick={this.handleLoadOlder} />;\n    }\n\n    return (\n      <Column ref={this.setColumnRef}>\n        <ProfileColumnHeader onClick={this.handleHeaderClick} multiColumn={multiColumn} />\n\n        <ScrollContainer scrollKey='account_gallery'>\n          <div className='scrollable scrollable--flex' onScroll={this.handleScroll}>\n            <HeaderContainer accountId={this.props.accountId} />\n\n            {suspended ? (\n              <div className='empty-column-indicator'>\n                <FormattedMessage id='empty_column.account_suspended' defaultMessage='Account suspended' />\n              </div>\n            ) : (\n              <div role='feed' className='account-gallery__container' ref={this.handleRef}>\n                {attachments.map((attachment, index) => attachment === null ? (\n                  <LoadMoreMedia key={'more:' + attachments.getIn(index + 1, 'id')} maxId={index > 0 ? attachments.getIn(index - 1, 'id') : null} onLoadMore={this.handleLoadMore} />\n                ) : (\n                  <MediaItem key={attachment.get('id')} attachment={attachment} displayWidth={width} onOpenMedia={this.handleOpenMedia} />\n                ))}\n\n                {loadOlder}\n              </div>\n            )}\n\n            {isLoading && attachments.size === 0 && (\n              <div className='scrollable__append'>\n                <LoadingIndicator />\n              </div>\n            )}\n          </div>\n        </ScrollContainer>\n      </Column>\n    );\n  }\n\n}\n\nexport default connect(mapStateToProps)(AccountGallery);\n"],"sourceRoot":""}