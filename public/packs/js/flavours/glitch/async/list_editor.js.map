{"version":3,"sources":["webpack:///app/javascript/var/home/testeraphy/Documents/Chuckya-fe-standalone/app/javascript/flavours/glitch/features/list_editor/components/edit_list_form.jsx","webpack:///app/javascript/var/home/testeraphy/Documents/Chuckya-fe-standalone/app/javascript/flavours/glitch/features/list_editor/index.jsx"],"names":["messages","defineMessages","title","id","defaultMessage","ListForm","PureComponent","constructor","arguments","_defineProperty","e","this","props","onChange","target","value","preventDefault","onSubmit","render","disabled","intl","formatMessage","_jsx","className","handleSubmit","handleChange","IconButton","icon","iconComponent","CheckIcon","onClick","handleClick","connect","state","getIn","dispatch","changeListEditorTitle","submitListEditor","injectIntl","ListEditor","ImmutablePureComponent","componentDidMount","onInitialize","listId","componentWillUnmount","onReset","accountIds","searchAccountIds","onClear","showSearch","size","EditListForm","Search","map","accountId","Account","added","role","tabIndex","Motion","defaultStyle","x","style","spring","stiffness","damping","_ref","transform","concat","visibility","PropTypes","string","isRequired","onClose","func","object","ImmutablePropTypes","list","setupListEditor","clearListSuggestions","resetListEditor"],"mappings":"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","file":"js/flavours/glitch/async/list_editor.js","sourcesContent":["import PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport { connect } from 'react-redux';\n\nimport CheckIcon from '@/material-icons/400-24px/check.svg?react';\n\nimport { changeListEditorTitle, submitListEditor } from '../../../actions/lists';\nimport { IconButton } from '../../../components/icon_button';\n\nconst messages = defineMessages({\n  title: { id: 'lists.edit.submit', defaultMessage: 'Change title' },\n});\n\nconst mapStateToProps = state => ({\n  value: state.getIn(['listEditor', 'title']),\n  disabled: !state.getIn(['listEditor', 'isChanged']) || !state.getIn(['listEditor', 'title']),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onChange: value => dispatch(changeListEditorTitle(value)),\n  onSubmit: () => dispatch(submitListEditor(false)),\n});\n\nclass ListForm extends PureComponent {\n\n  static propTypes = {\n    value: PropTypes.string.isRequired,\n    disabled: PropTypes.bool,\n    intl: PropTypes.object.isRequired,\n    onChange: PropTypes.func.isRequired,\n    onSubmit: PropTypes.func.isRequired,\n  };\n\n  handleChange = e => {\n    this.props.onChange(e.target.value);\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.onSubmit();\n  };\n\n  handleClick = () => {\n    this.props.onSubmit();\n  };\n\n  render () {\n    const { value, disabled, intl } = this.props;\n\n    const title = intl.formatMessage(messages.title);\n\n    return (\n      <form className='column-inline-form' onSubmit={this.handleSubmit}>\n        <input\n          className='setting-text'\n          value={value}\n          onChange={this.handleChange}\n        />\n\n        <IconButton\n          disabled={disabled}\n          icon='check'\n          iconComponent={CheckIcon}\n          title={title}\n          onClick={this.handleClick}\n        />\n      </form>\n    );\n  }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(injectIntl(ListForm));\n","import PropTypes from 'prop-types';\n\nimport { injectIntl } from 'react-intl';\n\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport { connect } from 'react-redux';\n\nimport spring from 'react-motion/lib/spring';\n\nimport { setupListEditor, clearListSuggestions, resetListEditor } from '../../actions/lists';\nimport Motion from '../ui/util/optional_motion';\n\nimport Account from './components/account';\nimport EditListForm from './components/edit_list_form';\nimport Search from './components/search';\n\nconst mapStateToProps = state => ({\n  accountIds: state.getIn(['listEditor', 'accounts', 'items']),\n  searchAccountIds: state.getIn(['listEditor', 'suggestions', 'items']),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onInitialize: listId => dispatch(setupListEditor(listId)),\n  onClear: () => dispatch(clearListSuggestions()),\n  onReset: () => dispatch(resetListEditor()),\n});\n\nclass ListEditor extends ImmutablePureComponent {\n\n  static propTypes = {\n    listId: PropTypes.string.isRequired,\n    onClose: PropTypes.func.isRequired,\n    intl: PropTypes.object.isRequired,\n    onInitialize: PropTypes.func.isRequired,\n    onClear: PropTypes.func.isRequired,\n    onReset: PropTypes.func.isRequired,\n    accountIds: ImmutablePropTypes.list.isRequired,\n    searchAccountIds: ImmutablePropTypes.list.isRequired,\n  };\n\n  componentDidMount () {\n    const { onInitialize, listId } = this.props;\n    onInitialize(listId);\n  }\n\n  componentWillUnmount () {\n    const { onReset } = this.props;\n    onReset();\n  }\n\n  render () {\n    const { accountIds, searchAccountIds, onClear } = this.props;\n    const showSearch = searchAccountIds.size > 0;\n\n    return (\n      <div className='modal-root__modal list-editor'>\n        <EditListForm />\n\n        <Search />\n\n        <div className='drawer__pager'>\n          <div className='drawer__inner list-editor__accounts'>\n            {accountIds.map(accountId => <Account key={accountId} accountId={accountId} added />)}\n          </div>\n\n          {showSearch && <div role='button' tabIndex={-1} className='drawer__backdrop' onClick={onClear} />}\n\n          <Motion defaultStyle={{ x: -100 }} style={{ x: spring(showSearch ? 0 : -100, { stiffness: 210, damping: 20 }) }}>\n            {({ x }) => (\n              <div className='drawer__inner backdrop' style={{ transform: x === 0 ? null : `translateX(${x}%)`, visibility: x === -100 ? 'hidden' : 'visible' }}>\n                {searchAccountIds.map(accountId => <Account key={accountId} accountId={accountId} />)}\n              </div>\n            )}\n          </Motion>\n        </div>\n      </div>\n    );\n  }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(injectIntl(ListEditor));\n"],"sourceRoot":""}