{"version":3,"sources":["webpack:///app/javascript/var/home/testeraphy/Documents/Chuckya-fe-standalone/app/javascript/mastodon/features/list_editor/components/account.jsx","webpack:///app/javascript/var/home/testeraphy/Documents/Chuckya-fe-standalone/app/javascript/mastodon/features/list_editor/components/edit_list_form.jsx","webpack:///app/javascript/var/home/testeraphy/Documents/Chuckya-fe-standalone/app/javascript/mastodon/features/list_editor/components/search.jsx","webpack:///app/javascript/var/home/testeraphy/Documents/Chuckya-fe-standalone/app/javascript/mastodon/features/list_editor/index.jsx"],"names":["messages","defineMessages","remove","id","defaultMessage","add","Account","ImmutablePureComponent","render","account","intl","onRemove","onAdd","added","this","props","button","_jsx","IconButton","icon","iconComponent","CloseIcon","title","formatMessage","onClick","AddIcon","className","Avatar","size","DisplayName","_defineProperty","ImmutablePropTypes","record","isRequired","PropTypes","object","func","bool","connect","makeMapStateToProps","getAccount","makeGetAccount","mapStateToProps","state","_ref","accountId","getIn","includes","mapDispatchToProps","dispatch","_ref2","removeFromListEditor","addToListEditor","injectIntl","ListForm","PureComponent","constructor","arguments","e","onChange","target","value","preventDefault","onSubmit","disabled","handleSubmit","handleChange","CheckIcon","handleClick","changeListEditorTitle","submitListEditor","search","Search","keyCode","onClear","hasValue","length","style","display","type","onKeyUp","handleKeyUp","placeholder","role","tabIndex","handleClear","Icon","SearchIcon","classNames","active","CancelIcon","fetchListSuggestions","clearListSuggestions","changeListSuggestions","ListEditor","componentDidMount","onInitialize","listId","componentWillUnmount","onReset","accountIds","searchAccountIds","showSearch","EditListForm","map","Motion","defaultStyle","x","spring","stiffness","damping","transform","concat","visibility","string","onClose","list","setupListEditor","resetListEditor"],"mappings":"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","file":"js/features/list_editor.js","sourcesContent":["import PropTypes from 'prop-types';\n\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport { connect } from 'react-redux';\n\nimport AddIcon from '@/material-icons/400-24px/add.svg?react';\nimport CloseIcon from '@/material-icons/400-24px/close.svg?react';\n\nimport { removeFromListEditor, addToListEditor } from '../../../actions/lists';\nimport { Avatar } from '../../../components/avatar';\nimport { DisplayName } from '../../../components/display_name';\nimport { IconButton } from '../../../components/icon_button';\nimport { makeGetAccount } from '../../../selectors';\n\nconst messages = defineMessages({\n  remove: { id: 'lists.account.remove', defaultMessage: 'Remove from list' },\n  add: { id: 'lists.account.add', defaultMessage: 'Add to list' },\n});\n\nconst makeMapStateToProps = () => {\n  const getAccount = makeGetAccount();\n\n  const mapStateToProps = (state, { accountId, added }) => ({\n    account: getAccount(state, accountId),\n    added: typeof added === 'undefined' ? state.getIn(['listEditor', 'accounts', 'items']).includes(accountId) : added,\n  });\n\n  return mapStateToProps;\n};\n\nconst mapDispatchToProps = (dispatch, { accountId }) => ({\n  onRemove: () => dispatch(removeFromListEditor(accountId)),\n  onAdd: () => dispatch(addToListEditor(accountId)),\n});\n\nclass Account extends ImmutablePureComponent {\n\n  static propTypes = {\n    account: ImmutablePropTypes.record.isRequired,\n    intl: PropTypes.object.isRequired,\n    onRemove: PropTypes.func.isRequired,\n    onAdd: PropTypes.func.isRequired,\n    added: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    added: false,\n  };\n\n  render () {\n    const { account, intl, onRemove, onAdd, added } = this.props;\n\n    let button;\n\n    if (added) {\n      button = <IconButton icon='times' iconComponent={CloseIcon} title={intl.formatMessage(messages.remove)} onClick={onRemove} />;\n    } else {\n      button = <IconButton icon='plus' iconComponent={AddIcon} title={intl.formatMessage(messages.add)} onClick={onAdd} />;\n    }\n\n    return (\n      <div className='account'>\n        <div className='account__wrapper'>\n          <div className='account__display-name'>\n            <div className='account__avatar-wrapper'><Avatar account={account} size={36} /></div>\n            <DisplayName account={account} />\n          </div>\n\n          <div className='account__relationship'>\n            {button}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n}\n\nexport default connect(makeMapStateToProps, mapDispatchToProps)(injectIntl(Account));\n","import PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport { connect } from 'react-redux';\n\nimport CheckIcon from '@/material-icons/400-24px/check.svg?react';\n\nimport { changeListEditorTitle, submitListEditor } from '../../../actions/lists';\nimport { IconButton } from '../../../components/icon_button';\n\nconst messages = defineMessages({\n  title: { id: 'lists.edit.submit', defaultMessage: 'Change title' },\n});\n\nconst mapStateToProps = state => ({\n  value: state.getIn(['listEditor', 'title']),\n  disabled: !state.getIn(['listEditor', 'isChanged']) || !state.getIn(['listEditor', 'title']),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onChange: value => dispatch(changeListEditorTitle(value)),\n  onSubmit: () => dispatch(submitListEditor(false)),\n});\n\nclass ListForm extends PureComponent {\n\n  static propTypes = {\n    value: PropTypes.string.isRequired,\n    disabled: PropTypes.bool,\n    intl: PropTypes.object.isRequired,\n    onChange: PropTypes.func.isRequired,\n    onSubmit: PropTypes.func.isRequired,\n  };\n\n  handleChange = e => {\n    this.props.onChange(e.target.value);\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.onSubmit();\n  };\n\n  handleClick = () => {\n    this.props.onSubmit();\n  };\n\n  render () {\n    const { value, disabled, intl } = this.props;\n\n    const title = intl.formatMessage(messages.title);\n\n    return (\n      <form className='column-inline-form' onSubmit={this.handleSubmit}>\n        <input\n          className='setting-text'\n          value={value}\n          onChange={this.handleChange}\n        />\n\n        <IconButton\n          disabled={disabled}\n          icon='check'\n          iconComponent={CheckIcon}\n          title={title}\n          onClick={this.handleClick}\n        />\n      </form>\n    );\n  }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(injectIntl(ListForm));\n","import PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport classNames from 'classnames';\n\nimport { connect } from 'react-redux';\n\nimport CancelIcon from '@/material-icons/400-24px/cancel.svg?react';\nimport SearchIcon from '@/material-icons/400-24px/search.svg?react';\nimport { Icon }  from 'mastodon/components/icon';\n\nimport { fetchListSuggestions, clearListSuggestions, changeListSuggestions } from '../../../actions/lists';\n\nconst messages = defineMessages({\n  search: { id: 'lists.search', defaultMessage: 'Search among people you follow' },\n});\n\nconst mapStateToProps = state => ({\n  value: state.getIn(['listEditor', 'suggestions', 'value']),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: value => dispatch(fetchListSuggestions(value)),\n  onClear: () => dispatch(clearListSuggestions()),\n  onChange: value => dispatch(changeListSuggestions(value)),\n});\n\nclass Search extends PureComponent {\n\n  static propTypes = {\n    intl: PropTypes.object.isRequired,\n    value: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n    onSubmit: PropTypes.func.isRequired,\n    onClear: PropTypes.func.isRequired,\n  };\n\n  handleChange = e => {\n    this.props.onChange(e.target.value);\n  };\n\n  handleKeyUp = e => {\n    if (e.keyCode === 13) {\n      this.props.onSubmit(this.props.value);\n    }\n  };\n\n  handleClear = () => {\n    this.props.onClear();\n  };\n\n  render () {\n    const { value, intl } = this.props;\n    const hasValue = value.length > 0;\n\n    return (\n      <div className='list-editor__search search'>\n        <label>\n          <span style={{ display: 'none' }}>{intl.formatMessage(messages.search)}</span>\n\n          <input\n            className='search__input'\n            type='text'\n            value={value}\n            onChange={this.handleChange}\n            onKeyUp={this.handleKeyUp}\n            placeholder={intl.formatMessage(messages.search)}\n          />\n        </label>\n\n        <div role='button' tabIndex={0} className='search__icon' onClick={this.handleClear}>\n          <Icon id='search' icon={SearchIcon} className={classNames({ active: !hasValue })} />\n          <Icon id='times-circle' icon={CancelIcon} aria-label={intl.formatMessage(messages.search)} className={classNames({ active: hasValue })} />\n        </div>\n      </div>\n    );\n  }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(injectIntl(Search));\n","import PropTypes from 'prop-types';\n\nimport { injectIntl } from 'react-intl';\n\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport { connect } from 'react-redux';\n\nimport spring from 'react-motion/lib/spring';\n\nimport { setupListEditor, clearListSuggestions, resetListEditor } from '../../actions/lists';\nimport Motion from '../ui/util/optional_motion';\n\nimport Account from './components/account';\nimport EditListForm from './components/edit_list_form';\nimport Search from './components/search';\n\nconst mapStateToProps = state => ({\n  accountIds: state.getIn(['listEditor', 'accounts', 'items']),\n  searchAccountIds: state.getIn(['listEditor', 'suggestions', 'items']),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onInitialize: listId => dispatch(setupListEditor(listId)),\n  onClear: () => dispatch(clearListSuggestions()),\n  onReset: () => dispatch(resetListEditor()),\n});\n\nclass ListEditor extends ImmutablePureComponent {\n\n  static propTypes = {\n    listId: PropTypes.string.isRequired,\n    onClose: PropTypes.func.isRequired,\n    intl: PropTypes.object.isRequired,\n    onInitialize: PropTypes.func.isRequired,\n    onClear: PropTypes.func.isRequired,\n    onReset: PropTypes.func.isRequired,\n    accountIds: ImmutablePropTypes.list.isRequired,\n    searchAccountIds: ImmutablePropTypes.list.isRequired,\n  };\n\n  componentDidMount () {\n    const { onInitialize, listId } = this.props;\n    onInitialize(listId);\n  }\n\n  componentWillUnmount () {\n    const { onReset } = this.props;\n    onReset();\n  }\n\n  render () {\n    const { accountIds, searchAccountIds, onClear } = this.props;\n    const showSearch = searchAccountIds.size > 0;\n\n    return (\n      <div className='modal-root__modal list-editor'>\n        <EditListForm />\n\n        <Search />\n\n        <div className='drawer__pager'>\n          <div className='drawer__inner list-editor__accounts'>\n            {accountIds.map(accountId => <Account key={accountId} accountId={accountId} added />)}\n          </div>\n\n          {showSearch && <div role='button' tabIndex={-1} className='drawer__backdrop' onClick={onClear} />}\n\n          <Motion defaultStyle={{ x: -100 }} style={{ x: spring(showSearch ? 0 : -100, { stiffness: 210, damping: 20 }) }}>\n            {({ x }) => (\n              <div className='drawer__inner backdrop' style={{ transform: x === 0 ? null : `translateX(${x}%)`, visibility: x === -100 ? 'hidden' : 'visible' }}>\n                {searchAccountIds.map(accountId => <Account key={accountId} accountId={accountId} />)}\n              </div>\n            )}\n          </Motion>\n        </div>\n      </div>\n    );\n  }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(injectIntl(ListEditor));\n"],"sourceRoot":""}