{"version":3,"sources":["webpack:///app/javascript/var/home/testeraphy/Documents/Chuckya-fe-standalone/app/javascript/mastodon/features/compose/components/search_results.jsx","webpack:///app/javascript/var/home/testeraphy/Documents/Chuckya-fe-standalone/app/javascript/mastodon/features/compose/index.jsx"],"names":["INITIAL_PAGE_LIMIT","withoutLastResult","list","size","skipLast","SearchResults","results","useAppSelector","state","getIn","isLoading","dispatch","useAppDispatch","handleLoadMoreAccounts","useCallback","expandSearch","handleLoadMoreStatuses","handleLoadMoreHashtags","accounts","statuses","hashtags","get","_jsx","SearchSection","title","_jsxs","_Fragment","children","Icon","id","icon","PeopleIcon","FormattedMessage","defaultMessage","map","accountId","AccountContainer","LoadMore","visible","onClick","TagIcon","hashtag","Hashtag","FindInPageIcon","statusId","StatusContainer","className","LoadingIndicator","messages","defineMessages","start","home_timeline","notifications","public","community","preferences","logout","compose","logoutMessage","logoutConfirm","Compose","PureComponent","constructor","arguments","_defineProperty","e","intl","this","props","preventDefault","stopPropagation","openModal","modalType","modalProps","message","formatMessage","confirm","closeWhenConfirm","onConfirm","logOut","changeComposing","componentDidMount","mountCompose","componentWillUnmount","unmountCompose","render","multiColumn","showSearch","columns","role","Link","to","MenuIcon","some","column","HomeIcon","NotificationsIcon","PublicIcon","href","SettingsIcon","handleLogoutClick","LogoutIcon","SearchContainer","onFocus","ComposeFormContainer","autoFocus","isMobile","window","innerWidth","alt","draggable","src","mascot","elephantUIPlane","Motion","defaultStyle","x","style","spring","stiffness","damping","_ref","transform","concat","visibility","Column","Helmet","name","content","connect","mapStateToProps","ownProps","injectIntl"],"mappings":"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","file":"js/features/compose.js","sourcesContent":["import { useCallback } from 'react';\n\nimport { FormattedMessage } from 'react-intl';\n\nimport FindInPageIcon from '@/material-icons/400-24px/find_in_page.svg?react';\nimport PeopleIcon from '@/material-icons/400-24px/group.svg?react';\nimport TagIcon from '@/material-icons/400-24px/tag.svg?react';\nimport { expandSearch } from 'mastodon/actions/search';\nimport { Icon }  from 'mastodon/components/icon';\nimport { LoadMore } from 'mastodon/components/load_more';\nimport { LoadingIndicator } from 'mastodon/components/loading_indicator';\nimport { SearchSection } from 'mastodon/features/explore/components/search_section';\nimport { useAppDispatch, useAppSelector } from 'mastodon/store';\n\nimport { ImmutableHashtag as Hashtag } from '../../../components/hashtag';\nimport AccountContainer from '../../../containers/account_container';\nimport StatusContainer from '../../../containers/status_container';\n\nconst INITIAL_PAGE_LIMIT = 10;\n\nconst withoutLastResult = list => {\n  if (list.size > INITIAL_PAGE_LIMIT && list.size % INITIAL_PAGE_LIMIT === 1) {\n    return list.skipLast(1);\n  } else {\n    return list;\n  }\n};\n\nexport const SearchResults = () => {\n  const results = useAppSelector((state) => state.getIn(['search', 'results']));\n  const isLoading = useAppSelector((state) => state.getIn(['search', 'isLoading']));\n\n  const dispatch = useAppDispatch();\n\n  const handleLoadMoreAccounts = useCallback(() => {\n    dispatch(expandSearch('accounts'));\n  }, [dispatch]);\n\n  const handleLoadMoreStatuses = useCallback(() => {\n    dispatch(expandSearch('statuses'));\n  }, [dispatch]);\n\n  const handleLoadMoreHashtags = useCallback(() => {\n    dispatch(expandSearch('hashtags'));\n  }, [dispatch]);\n\n  let accounts, statuses, hashtags;\n\n  if (results.get('accounts') && results.get('accounts').size > 0) {\n    accounts = (\n      <SearchSection title={<><Icon id='users' icon={PeopleIcon} /><FormattedMessage id='search_results.accounts' defaultMessage='Profiles' /></>}>\n        {withoutLastResult(results.get('accounts')).map(accountId => <AccountContainer key={accountId} id={accountId} />)}\n        {(results.get('accounts').size > INITIAL_PAGE_LIMIT && results.get('accounts').size % INITIAL_PAGE_LIMIT === 1) && <LoadMore visible onClick={handleLoadMoreAccounts} />}\n      </SearchSection>\n    );\n  }\n\n  if (results.get('hashtags') && results.get('hashtags').size > 0) {\n    hashtags = (\n      <SearchSection title={<><Icon id='hashtag' icon={TagIcon} /><FormattedMessage id='search_results.hashtags' defaultMessage='Hashtags' /></>}>\n        {withoutLastResult(results.get('hashtags')).map(hashtag => <Hashtag key={hashtag.get('name')} hashtag={hashtag} />)}\n        {(results.get('hashtags').size > INITIAL_PAGE_LIMIT && results.get('hashtags').size % INITIAL_PAGE_LIMIT === 1) && <LoadMore visible onClick={handleLoadMoreHashtags} />}\n      </SearchSection>\n    );\n  }\n\n  if (results.get('statuses') && results.get('statuses').size > 0) {\n    statuses = (\n      <SearchSection title={<><Icon id='quote-right' icon={FindInPageIcon} /><FormattedMessage id='search_results.statuses' defaultMessage='Posts' /></>}>\n        {withoutLastResult(results.get('statuses')).map(statusId => <StatusContainer key={statusId} id={statusId} />)}\n        {(results.get('statuses').size > INITIAL_PAGE_LIMIT && results.get('statuses').size % INITIAL_PAGE_LIMIT === 1) && <LoadMore visible onClick={handleLoadMoreStatuses} />}\n      </SearchSection>\n    );\n  }\n\n  return (\n    <div className='search-results'>\n      {!accounts && !hashtags && !statuses && (\n        isLoading ? (\n          <LoadingIndicator />\n        ) : (\n          <div className='empty-column-indicator'>\n            <FormattedMessage id='search_results.nothing_found' defaultMessage='Could not find anything for these search terms' />\n          </div>\n        )\n      )}\n      {accounts}\n      {hashtags}\n      {statuses}\n    </div>\n  );\n\n};\n","import PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nimport { injectIntl, defineMessages } from 'react-intl';\n\nimport { Helmet } from 'react-helmet';\nimport { Link } from 'react-router-dom';\n\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport { connect } from 'react-redux';\n\nimport spring from 'react-motion/lib/spring';\n\nimport PeopleIcon from '@/material-icons/400-24px/group.svg?react';\nimport HomeIcon from '@/material-icons/400-24px/home-fill.svg?react';\nimport LogoutIcon from '@/material-icons/400-24px/logout.svg?react';\nimport MenuIcon from '@/material-icons/400-24px/menu.svg?react';\nimport NotificationsIcon from '@/material-icons/400-24px/notifications-fill.svg?react';\nimport PublicIcon from '@/material-icons/400-24px/public.svg?react';\nimport SettingsIcon from '@/material-icons/400-24px/settings-fill.svg?react';\nimport { openModal } from 'mastodon/actions/modal';\nimport Column from 'mastodon/components/column';\nimport { Icon }  from 'mastodon/components/icon';\nimport { logOut } from 'mastodon/utils/log_out';\n\nimport elephantUIPlane from '../../../images/elephant_ui_plane.svg';\nimport { changeComposing, mountCompose, unmountCompose } from '../../actions/compose';\nimport { mascot } from '../../initial_state';\nimport { isMobile } from '../../is_mobile';\nimport Motion from '../ui/util/optional_motion';\n\nimport { SearchResults } from './components/search_results';\nimport ComposeFormContainer from './containers/compose_form_container';\nimport SearchContainer from './containers/search_container';\n\nconst messages = defineMessages({\n  start: { id: 'getting_started.heading', defaultMessage: 'Getting started' },\n  home_timeline: { id: 'tabs_bar.home', defaultMessage: 'Home' },\n  notifications: { id: 'tabs_bar.notifications', defaultMessage: 'Notifications' },\n  public: { id: 'navigation_bar.public_timeline', defaultMessage: 'Federated timeline' },\n  community: { id: 'navigation_bar.community_timeline', defaultMessage: 'Local timeline' },\n  preferences: { id: 'navigation_bar.preferences', defaultMessage: 'Preferences' },\n  logout: { id: 'navigation_bar.logout', defaultMessage: 'Logout' },\n  compose: { id: 'navigation_bar.compose', defaultMessage: 'Compose new post' },\n  logoutMessage: { id: 'confirmations.logout.message', defaultMessage: 'Are you sure you want to log out?' },\n  logoutConfirm: { id: 'confirmations.logout.confirm', defaultMessage: 'Log out' },\n});\n\nconst mapStateToProps = (state, ownProps) => ({\n  columns: state.getIn(['settings', 'columns']),\n  showSearch: ownProps.multiColumn ? state.getIn(['search', 'submitted']) && !state.getIn(['search', 'hidden']) : false,\n});\n\nclass Compose extends PureComponent {\n\n  static propTypes = {\n    dispatch: PropTypes.func.isRequired,\n    columns: ImmutablePropTypes.list.isRequired,\n    multiColumn: PropTypes.bool,\n    showSearch: PropTypes.bool,\n    intl: PropTypes.object.isRequired,\n  };\n\n  componentDidMount () {\n    const { dispatch } = this.props;\n    dispatch(mountCompose());\n  }\n\n  componentWillUnmount () {\n    const { dispatch } = this.props;\n    dispatch(unmountCompose());\n  }\n\n  handleLogoutClick = e => {\n    const { dispatch, intl } = this.props;\n\n    e.preventDefault();\n    e.stopPropagation();\n\n    dispatch(openModal({\n      modalType: 'CONFIRM',\n      modalProps: {\n        message: intl.formatMessage(messages.logoutMessage),\n        confirm: intl.formatMessage(messages.logoutConfirm),\n        closeWhenConfirm: false,\n        onConfirm: () => logOut(),\n      },\n    }));\n\n    return false;\n  };\n\n  onFocus = () => {\n    this.props.dispatch(changeComposing(true));\n  };\n\n  onBlur = () => {\n    this.props.dispatch(changeComposing(false));\n  };\n\n  render () {\n    const { multiColumn, showSearch, intl } = this.props;\n\n    if (multiColumn) {\n      const { columns } = this.props;\n\n      return (\n        <div className='drawer' role='region' aria-label={intl.formatMessage(messages.compose)}>\n          <nav className='drawer__header'>\n            <Link to='/getting-started' className='drawer__tab' title={intl.formatMessage(messages.start)} aria-label={intl.formatMessage(messages.start)}><Icon id='bars' icon={MenuIcon} /></Link>\n            {!columns.some(column => column.get('id') === 'HOME') && (\n              <Link to='/home' className='drawer__tab' title={intl.formatMessage(messages.home_timeline)} aria-label={intl.formatMessage(messages.home_timeline)}><Icon id='home' icon={HomeIcon} /></Link>\n            )}\n            {!columns.some(column => column.get('id') === 'NOTIFICATIONS') && (\n              <Link to='/notifications' className='drawer__tab' title={intl.formatMessage(messages.notifications)} aria-label={intl.formatMessage(messages.notifications)}><Icon id='bell' icon={NotificationsIcon} /></Link>\n            )}\n            {!columns.some(column => column.get('id') === 'COMMUNITY') && (\n              <Link to='/public/local' className='drawer__tab' title={intl.formatMessage(messages.community)} aria-label={intl.formatMessage(messages.community)}><Icon id='users' icon={PeopleIcon} /></Link>\n            )}\n            {!columns.some(column => column.get('id') === 'PUBLIC') && (\n              <Link to='/public' className='drawer__tab' title={intl.formatMessage(messages.public)} aria-label={intl.formatMessage(messages.public)}><Icon id='globe' icon={PublicIcon} /></Link>\n            )}\n            <a href='/settings/preferences' className='drawer__tab' title={intl.formatMessage(messages.preferences)} aria-label={intl.formatMessage(messages.preferences)}><Icon id='cog' icon={SettingsIcon} /></a>\n            <a href='/auth/sign_out' className='drawer__tab' title={intl.formatMessage(messages.logout)} aria-label={intl.formatMessage(messages.logout)} onClick={this.handleLogoutClick}><Icon id='sign-out' icon={LogoutIcon} /></a>\n          </nav>\n\n          {multiColumn && <SearchContainer /> }\n\n          <div className='drawer__pager'>\n            <div className='drawer__inner' onFocus={this.onFocus}>\n              <ComposeFormContainer autoFocus={!isMobile(window.innerWidth)} />\n\n              <div className='drawer__inner__mastodon'>\n                <img alt='' draggable='false' src={mascot || elephantUIPlane} />\n              </div>\n            </div>\n\n            <Motion defaultStyle={{ x: -100 }} style={{ x: spring(showSearch ? 0 : -100, { stiffness: 210, damping: 20 }) }}>\n              {({ x }) => (\n                <div className='drawer__inner darker' style={{ transform: `translateX(${x}%)`, visibility: x === -100 ? 'hidden' : 'visible' }}>\n                  <SearchResults />\n                </div>\n              )}\n            </Motion>\n          </div>\n        </div>\n      );\n    }\n\n    return (\n      <Column onFocus={this.onFocus}>\n        <ComposeFormContainer />\n\n        <Helmet>\n          <meta name='robots' content='noindex' />\n        </Helmet>\n      </Column>\n    );\n  }\n\n}\n\nexport default connect(mapStateToProps)(injectIntl(Compose));\n"],"sourceRoot":""}