{"version":3,"sources":["webpack:///app/javascript/var/home/testeraphy/Documents/Chuckya-fe-standalone/app/javascript/mastodon/features/status/components/action_bar.jsx","webpack:///app/javascript/var/home/testeraphy/Documents/Chuckya-fe-standalone/app/javascript/mastodon/components/edited_timestamp/containers/dropdown_menu_container.js","webpack:///app/javascript/var/home/testeraphy/Documents/Chuckya-fe-standalone/app/javascript/mastodon/components/edited_timestamp/index.jsx","webpack:///app/javascript/var/home/testeraphy/Documents/Chuckya-fe-standalone/app/javascript/mastodon/features/status/components/detailed_status.jsx","webpack:///app/javascript/var/home/testeraphy/Documents/Chuckya-fe-standalone/app/javascript/mastodon/features/status/index.jsx"],"names":["messages","defineMessages","delete","id","defaultMessage","redraft","edit","direct","mention","reply","reblog","reblog_private","cancel_reblog_private","cannot_reblog","favourite","bookmark","more","mute","muteConversation","unmuteConversation","block","report","share","pin","unpin","embed","admin_account","admin_status","admin_domain","copy","blockDomain","unblockDomain","unmute","unblock","openOriginalPage","ActionBar","PureComponent","constructor","arguments","_defineProperty","this","props","onReply","status","e","onReblog","onFavourite","onBookmark","onDelete","onEdit","onDirect","get","onMention","relationship","onMute","onUnmute","account","onBlock","onUnblock","onBlockDomain","onUnblockDomain","split","onMuteConversation","onReport","onPin","navigator","url","onEmbed","clipboard","writeText","render","intl","signedIn","permissions","identity","publicStatus","includes","pinnableStatus","mutingConversation","writtenByMe","getIn","me","isRemote","replyIcon","replyIconComponent","menu","push","text","formatMessage","href","action","handleCopy","handleShare","handleEmbed","handlePinClick","handleConversationMuteClick","handleEditClick","handleDeleteClick","dangerous","handleRedraftClick","name","handleMentionClick","handleMuteClick","handleBlockClick","handleReport","domain","handleUnblockDomain","handleBlockDomain","PERMISSION_MANAGE_USERS","PERMISSION_MANAGE_FEDERATION","concat","ReplyIcon","ReplyAllIcon","reblogPrivate","reblogTitle","reblogIconComponent","RepeatActiveIcon","RepeatPrivateActiveIcon","RepeatIcon","RepeatPrivateIcon","RepeatDisabledIcon","_jsx","className","IconButton","title","icon","iconComponent","onClick","handleReplyClick","classNames","disabled","active","handleReblogClick","animate","StarIcon","StarBorderIcon","handleFavouriteClick","BookmarkIcon","BookmarkBorderIcon","handleBookmarkClick","DropdownMenuContainer","MoreHorizIcon","items","direction","connect","mapStateToProps","state","_ref","withIdentity","injectIntl","statusId","openDropdownId","dropdownMenu","openId","openedViaKeyboard","keyboard","loading","mapDispatchToProps","dispatch","_ref2","onOpen","onItemClick","fetchHistory","openDropdownMenu","onClose","closeDropdownMenu","DropdownMenu","EditedTimestamp","item","i","FormattedMessage","values","count","size","index","onKeyPress","formattedDate","RelativeTimestamp","timestamp","short","formattedName","InlineAccount","accountId","label","date","renderItem","scrollable","renderHeader","handleItemClick","formatDate","month","day","hour","minute","openModal","modalType","modalProps","DetailedStatus","ImmutablePureComponent","height","button","ctrlKey","metaKey","history","preventDefault","stopPropagation","options","onOpenVideo","onToggleHidden","c","node","_measureHeight","target","nodeName","parentNode","window","open","onTranslate","heightJustChanged","measureHeight","scheduleIdleTask","setState","Math","ceil","scrollHeight","onHeightChange","componentDidUpdate","prevProps","prevState","_properStatus","getAttachmentAspectRatio","attachments","outerStyle","boxSizing","compact","pictureInPicture","media","applicationLink","reblogLink","favouriteLink","language","PictureInPicturePlaceholder","aspectRatio","attachment","description","Audio","src","alt","lang","duration","poster","backgroundColor","foregroundColor","accentColor","sensitive","visible","showMedia","blurhash","onToggleVisibility","onToggleMediaVisibility","Video","preview","frameRate","width","handleOpenVideo","MediaGallery","standalone","onOpenMedia","length","Card","card","_jsxs","_Fragment","children","rel","visibilityLink","VisibilityIcon","visibility","Link","to","AnimatedNumber","value","handleModalLink","statusContentProps","hashtagBar","getHashtagBarForStatus","expanded","style","ref","setRef","Icon","AlternateEmailIcon","handleAccountClick","Avatar","DisplayName","localDomain","_jsx2","StatusContent","onExpandedToggle","handleExpandedToggle","handleTranslate","FormattedDate","Date","year","ImmutablePropTypes","map","PropTypes","func","isRequired","bool","string","contains","inUse","available","WithRouterPropTypes","withRouter","revealAll","hideAll","statusTitleWithAttachments","detailedStatus","titleFromStatus","displayName","username","user","trim","attachmentCount","truncate","str","num","arr","Array","from","slice","join","Status","_this","fullscreen","defaultMediaVisibility","loadedStatusId","undefined","toggleFavourite","type","askReplyConfirmation","replyCompose","toggleReblog","shiftKey","unbookmark","withRedraft","deleteModal","deleteStatus","editStatus","directCompose","mentionCompose","startTime","handleOpenMedia","initMuteModal","unmuteStatus","muteStatus","revealStatus","hideStatus","ancestorsIds","descendantsIds","statusIds","toJS","undoStatusTranslation","translateStatus","initBlockModal","initReport","unmuteAccount","unblockAccount","initDomainBlockModal","handleMoveUp","handleMoveDown","handleToggleHidden","handleToggleMediaVisibility","_selectChild","indexOf","statusNode","isFullscreen","prevRouterProps","_ref3","_location$state","_prevRouterProps$loca","location","mastodonModalKey","offsetTop","UNSAFE_componentWillMount","fetchStatus","params","componentDidMount","attachFullscreenListener","onFullScreenChange","_scrollStatusIntoView","UNSAFE_componentWillReceiveProps","nextProps","align_top","container","element","querySelectorAll","scrollTop","scrollIntoView","clientHeight","offsetHeight","focus","renderChildren","list","ancestors","StatusContainer","onMoveUp","onMoveDown","contextType","previousId","nextId","rootId","multiColumn","requestIdleCallback","_this$statusNode","_document$querySelect","offset","document","querySelector","getBoundingClientRect","bottom","scrollingElement","body","scrollBy","_prevProps$status","componentWillUnmount","detachFullscreenListener","descendants","isLoading","Column","LoadingIndicator","BundleColumnError","errorType","isLocal","isIndexable","handlers","moveUp","handleHotkeyMoveUp","moveDown","handleHotkeyMoveDown","handleHotkeyReply","handleHotkeyFavourite","boost","handleHotkeyBoost","handleHotkeyMention","openProfile","handleHotkeyOpenProfile","toggleHidden","handleHotkeyToggleHidden","toggleSensitive","handleHotkeyToggleSensitive","openMedia","handleHotkeyOpenMedia","bindToDocument","ColumnHeader","showBackButton","extraButton","handleToggleAll","VisibilityOffIcon","ScrollContainer","scrollKey","shouldUpdateScroll","setContainerRef","HotKeys","tabIndex","textForScreenReader","setStatusRef","handleDirectClick","handleUnmuteClick","handleUnblockClick","handleBlockDomainClick","handleUnblockDomainClick","handlePin","Helmet","content","identityContextPropShape","object","makeMapStateToProps","getStatus","makeGetStatus","getPictureInPicture","makeGetPictureInPicture","getAncestorsIds","createSelector","_","inReplyTos","Immutable","List","withMutations","mutable","unshift","getDescendantsIds","contextReplies","statuses","ids","pop","replies","reverse","forEach","insertAt","findIndex","idx","splice"],"mappings":"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","file":"js/features/status.js","sourcesContent":["import PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport classNames from 'classnames';\n\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport { connect } from 'react-redux';\n\nimport BookmarkIcon from '@/material-icons/400-24px/bookmark-fill.svg?react';\nimport BookmarkBorderIcon from '@/material-icons/400-24px/bookmark.svg?react';\nimport MoreHorizIcon from '@/material-icons/400-24px/more_horiz.svg?react';\nimport RepeatIcon from '@/material-icons/400-24px/repeat.svg?react';\nimport ReplyIcon from '@/material-icons/400-24px/reply.svg?react';\nimport ReplyAllIcon from '@/material-icons/400-24px/reply_all.svg?react';\nimport StarIcon from '@/material-icons/400-24px/star-fill.svg?react';\nimport StarBorderIcon from '@/material-icons/400-24px/star.svg?react';\nimport RepeatActiveIcon from '@/svg-icons/repeat_active.svg?react';\nimport RepeatDisabledIcon from '@/svg-icons/repeat_disabled.svg?react';\nimport RepeatPrivateIcon from '@/svg-icons/repeat_private.svg?react';\nimport RepeatPrivateActiveIcon from '@/svg-icons/repeat_private_active.svg?react';\nimport { identityContextPropShape, withIdentity } from 'mastodon/identity_context';\nimport { PERMISSION_MANAGE_USERS, PERMISSION_MANAGE_FEDERATION } from 'mastodon/permissions';\n\nimport { IconButton } from '../../../components/icon_button';\nimport DropdownMenuContainer from '../../../containers/dropdown_menu_container';\nimport { me } from '../../../initial_state';\n\nconst messages = defineMessages({\n  delete: { id: 'status.delete', defaultMessage: 'Delete' },\n  redraft: { id: 'status.redraft', defaultMessage: 'Delete & re-draft' },\n  edit: { id: 'status.edit', defaultMessage: 'Edit' },\n  direct: { id: 'status.direct', defaultMessage: 'Privately mention @{name}' },\n  mention: { id: 'status.mention', defaultMessage: 'Mention @{name}' },\n  reply: { id: 'status.reply', defaultMessage: 'Reply' },\n  reblog: { id: 'status.reblog', defaultMessage: 'Boost' },\n  reblog_private: { id: 'status.reblog_private', defaultMessage: 'Boost with original visibility' },\n  cancel_reblog_private: { id: 'status.cancel_reblog_private', defaultMessage: 'Unboost' },\n  cannot_reblog: { id: 'status.cannot_reblog', defaultMessage: 'This post cannot be boosted' },\n  favourite: { id: 'status.favourite', defaultMessage: 'Favorite' },\n  bookmark: { id: 'status.bookmark', defaultMessage: 'Bookmark' },\n  more: { id: 'status.more', defaultMessage: 'More' },\n  mute: { id: 'status.mute', defaultMessage: 'Mute @{name}' },\n  muteConversation: { id: 'status.mute_conversation', defaultMessage: 'Mute conversation' },\n  unmuteConversation: { id: 'status.unmute_conversation', defaultMessage: 'Unmute conversation' },\n  block: { id: 'status.block', defaultMessage: 'Block @{name}' },\n  report: { id: 'status.report', defaultMessage: 'Report @{name}' },\n  share: { id: 'status.share', defaultMessage: 'Share' },\n  pin: { id: 'status.pin', defaultMessage: 'Pin on profile' },\n  unpin: { id: 'status.unpin', defaultMessage: 'Unpin from profile' },\n  embed: { id: 'status.embed', defaultMessage: 'Embed' },\n  admin_account: { id: 'status.admin_account', defaultMessage: 'Open moderation interface for @{name}' },\n  admin_status: { id: 'status.admin_status', defaultMessage: 'Open this post in the moderation interface' },\n  admin_domain: { id: 'status.admin_domain', defaultMessage: 'Open moderation interface for {domain}' },\n  copy: { id: 'status.copy', defaultMessage: 'Copy link to post' },\n  blockDomain: { id: 'account.block_domain', defaultMessage: 'Block domain {domain}' },\n  unblockDomain: { id: 'account.unblock_domain', defaultMessage: 'Unblock domain {domain}' },\n  unmute: { id: 'account.unmute', defaultMessage: 'Unmute @{name}' },\n  unblock: { id: 'account.unblock', defaultMessage: 'Unblock @{name}' },\n  openOriginalPage: { id: 'account.open_original_page', defaultMessage: 'Open original page' },\n});\n\nconst mapStateToProps = (state, { status }) => ({\n  relationship: state.getIn(['relationships', status.getIn(['account', 'id'])]),\n});\n\nclass ActionBar extends PureComponent {\n  static propTypes = {\n    identity: identityContextPropShape,\n    status: ImmutablePropTypes.map.isRequired,\n    relationship: ImmutablePropTypes.record,\n    onReply: PropTypes.func.isRequired,\n    onReblog: PropTypes.func.isRequired,\n    onFavourite: PropTypes.func.isRequired,\n    onBookmark: PropTypes.func.isRequired,\n    onDelete: PropTypes.func.isRequired,\n    onEdit: PropTypes.func.isRequired,\n    onDirect: PropTypes.func.isRequired,\n    onMention: PropTypes.func.isRequired,\n    onMute: PropTypes.func,\n    onUnmute: PropTypes.func,\n    onBlock: PropTypes.func,\n    onUnblock: PropTypes.func,\n    onBlockDomain: PropTypes.func,\n    onUnblockDomain: PropTypes.func,\n    onMuteConversation: PropTypes.func,\n    onReport: PropTypes.func,\n    onPin: PropTypes.func,\n    onEmbed: PropTypes.func,\n    intl: PropTypes.object.isRequired,\n  };\n\n  handleReplyClick = () => {\n    this.props.onReply(this.props.status);\n  };\n\n  handleReblogClick = (e) => {\n    this.props.onReblog(this.props.status, e);\n  };\n\n  handleFavouriteClick = () => {\n    this.props.onFavourite(this.props.status);\n  };\n\n  handleBookmarkClick = (e) => {\n    this.props.onBookmark(this.props.status, e);\n  };\n\n  handleDeleteClick = () => {\n    this.props.onDelete(this.props.status);\n  };\n\n  handleRedraftClick = () => {\n    this.props.onDelete(this.props.status, true);\n  };\n\n  handleEditClick = () => {\n    this.props.onEdit(this.props.status);\n  };\n\n  handleDirectClick = () => {\n    this.props.onDirect(this.props.status.get('account'));\n  };\n\n  handleMentionClick = () => {\n    this.props.onMention(this.props.status.get('account'));\n  };\n\n  handleMuteClick = () => {\n    const { status, relationship, onMute, onUnmute } = this.props;\n    const account = status.get('account');\n\n    if (relationship && relationship.get('muting')) {\n      onUnmute(account);\n    } else {\n      onMute(account);\n    }\n  };\n\n  handleBlockClick = () => {\n    const { status, relationship, onBlock, onUnblock } = this.props;\n    const account = status.get('account');\n\n    if (relationship && relationship.get('blocking')) {\n      onUnblock(account);\n    } else {\n      onBlock(status);\n    }\n  };\n\n  handleBlockDomain = () => {\n    const { status, onBlockDomain } = this.props;\n    const account = status.get('account');\n\n    onBlockDomain(account);\n  };\n\n  handleUnblockDomain = () => {\n    const { status, onUnblockDomain } = this.props;\n    const account = status.get('account');\n\n    onUnblockDomain(account.get('acct').split('@')[1]);\n  };\n\n  handleConversationMuteClick = () => {\n    this.props.onMuteConversation(this.props.status);\n  };\n\n  handleReport = () => {\n    this.props.onReport(this.props.status);\n  };\n\n  handlePinClick = () => {\n    this.props.onPin(this.props.status);\n  };\n\n  handleShare = () => {\n    navigator.share({\n      url: this.props.status.get('url'),\n    });\n  };\n\n  handleEmbed = () => {\n    this.props.onEmbed(this.props.status);\n  };\n\n  handleCopy = () => {\n    const url = this.props.status.get('url');\n    navigator.clipboard.writeText(url);\n  };\n\n  render () {\n    const { status, relationship, intl } = this.props;\n    const { signedIn, permissions } = this.props.identity;\n\n    const publicStatus       = ['public', 'unlisted'].includes(status.get('visibility'));\n    const pinnableStatus     = ['public', 'unlisted', 'private'].includes(status.get('visibility'));\n    const mutingConversation = status.get('muted');\n    const account            = status.get('account');\n    const writtenByMe        = status.getIn(['account', 'id']) === me;\n    const isRemote           = status.getIn(['account', 'username']) !== status.getIn(['account', 'acct']);\n\n    let menu = [];\n\n    if (publicStatus && isRemote) {\n      menu.push({ text: intl.formatMessage(messages.openOriginalPage), href: status.get('url') });\n    }\n\n    menu.push({ text: intl.formatMessage(messages.copy), action: this.handleCopy });\n\n    if (publicStatus && 'share' in navigator) {\n      menu.push({ text: intl.formatMessage(messages.share), action: this.handleShare });\n    }\n\n    if (publicStatus && (signedIn || !isRemote)) {\n      menu.push({ text: intl.formatMessage(messages.embed), action: this.handleEmbed });\n    }\n\n    if (signedIn) {\n      menu.push(null);\n\n      if (writtenByMe) {\n        if (pinnableStatus) {\n          menu.push({ text: intl.formatMessage(status.get('pinned') ? messages.unpin : messages.pin), action: this.handlePinClick });\n          menu.push(null);\n        }\n\n        menu.push({ text: intl.formatMessage(mutingConversation ? messages.unmuteConversation : messages.muteConversation), action: this.handleConversationMuteClick });\n        menu.push(null);\n        menu.push({ text: intl.formatMessage(messages.edit), action: this.handleEditClick });\n        menu.push({ text: intl.formatMessage(messages.delete), action: this.handleDeleteClick, dangerous: true });\n        menu.push({ text: intl.formatMessage(messages.redraft), action: this.handleRedraftClick, dangerous: true });\n      } else {\n        menu.push({ text: intl.formatMessage(messages.mention, { name: status.getIn(['account', 'username']) }), action: this.handleMentionClick });\n        menu.push(null);\n\n        if (relationship && relationship.get('muting')) {\n          menu.push({ text: intl.formatMessage(messages.unmute, { name: account.get('username') }), action: this.handleMuteClick });\n        } else {\n          menu.push({ text: intl.formatMessage(messages.mute, { name: account.get('username') }), action: this.handleMuteClick, dangerous: true });\n        }\n\n        if (relationship && relationship.get('blocking')) {\n          menu.push({ text: intl.formatMessage(messages.unblock, { name: account.get('username') }), action: this.handleBlockClick });\n        } else {\n          menu.push({ text: intl.formatMessage(messages.block, { name: account.get('username') }), action: this.handleBlockClick, dangerous: true });\n        }\n\n        menu.push({ text: intl.formatMessage(messages.report, { name: status.getIn(['account', 'username']) }), action: this.handleReport, dangerous: true });\n\n        if (account.get('acct') !== account.get('username')) {\n          const domain = account.get('acct').split('@')[1];\n\n          menu.push(null);\n\n          if (relationship && relationship.get('domain_blocking')) {\n            menu.push({ text: intl.formatMessage(messages.unblockDomain, { domain }), action: this.handleUnblockDomain });\n          } else {\n            menu.push({ text: intl.formatMessage(messages.blockDomain, { domain }), action: this.handleBlockDomain, dangerous: true });\n          }\n        }\n\n        if ((permissions & PERMISSION_MANAGE_USERS) === PERMISSION_MANAGE_USERS || (isRemote && (permissions & PERMISSION_MANAGE_FEDERATION) === PERMISSION_MANAGE_FEDERATION)) {\n          menu.push(null);\n          if ((permissions & PERMISSION_MANAGE_USERS) === PERMISSION_MANAGE_USERS) {\n            menu.push({ text: intl.formatMessage(messages.admin_account, { name: status.getIn(['account', 'username']) }), href: `/admin/accounts/${status.getIn(['account', 'id'])}` });\n            menu.push({ text: intl.formatMessage(messages.admin_status), href: `/admin/accounts/${status.getIn(['account', 'id'])}/statuses/${status.get('id')}` });\n          }\n          if (isRemote && (permissions & PERMISSION_MANAGE_FEDERATION) === PERMISSION_MANAGE_FEDERATION) {\n            const domain = account.get('acct').split('@')[1];\n            menu.push({ text: intl.formatMessage(messages.admin_domain, { domain: domain }), href: `/admin/instances/${domain}` });\n          }\n        }\n      }\n    }\n\n    let replyIcon;\n    let replyIconComponent;\n\n    if (status.get('in_reply_to_id', null) === null) {\n      replyIcon = 'reply';\n      replyIconComponent = ReplyIcon;\n    } else {\n      replyIcon = 'reply-all';\n      replyIconComponent = ReplyAllIcon;\n    }\n\n    const reblogPrivate = status.getIn(['account', 'id']) === me && status.get('visibility') === 'private';\n\n    let reblogTitle, reblogIconComponent;\n\n    if (status.get('reblogged')) {\n      reblogTitle = intl.formatMessage(messages.cancel_reblog_private);\n      reblogIconComponent = publicStatus ? RepeatActiveIcon : RepeatPrivateActiveIcon;\n    } else if (publicStatus) {\n      reblogTitle = intl.formatMessage(messages.reblog);\n      reblogIconComponent = RepeatIcon;\n    } else if (reblogPrivate) {\n      reblogTitle = intl.formatMessage(messages.reblog_private);\n      reblogIconComponent = RepeatPrivateIcon;\n    } else {\n      reblogTitle = intl.formatMessage(messages.cannot_reblog);\n      reblogIconComponent = RepeatDisabledIcon;\n    }\n\n    return (\n      <div className='detailed-status__action-bar'>\n        <div className='detailed-status__button'><IconButton title={intl.formatMessage(messages.reply)} icon={status.get('in_reply_to_account_id') === status.getIn(['account', 'id']) ? 'reply' : replyIcon} iconComponent={status.get('in_reply_to_account_id') === status.getIn(['account', 'id']) ? ReplyIcon : replyIconComponent}  onClick={this.handleReplyClick} /></div>\n        <div className='detailed-status__button'><IconButton className={classNames({ reblogPrivate })} disabled={!publicStatus && !reblogPrivate} active={status.get('reblogged')} title={reblogTitle} icon='retweet' iconComponent={reblogIconComponent} onClick={this.handleReblogClick} /></div>\n        <div className='detailed-status__button'><IconButton className='star-icon' animate active={status.get('favourited')} title={intl.formatMessage(messages.favourite)} icon='star' iconComponent={status.get('favourited') ? StarIcon : StarBorderIcon} onClick={this.handleFavouriteClick} /></div>\n        <div className='detailed-status__button'><IconButton className='bookmark-icon' disabled={!signedIn} active={status.get('bookmarked')} title={intl.formatMessage(messages.bookmark)} icon='bookmark' iconComponent={status.get('bookmarked') ? BookmarkIcon : BookmarkBorderIcon} onClick={this.handleBookmarkClick} /></div>\n\n        <div className='detailed-status__action-bar-dropdown'>\n          <DropdownMenuContainer icon='ellipsis-h' iconComponent={MoreHorizIcon} status={status} items={menu} direction='left' title={intl.formatMessage(messages.more)} />\n        </div>\n      </div>\n    );\n  }\n\n}\n\nexport default connect(mapStateToProps)(withIdentity(injectIntl(ActionBar)));\n","import { connect } from 'react-redux';\n\nimport { openDropdownMenu, closeDropdownMenu } from 'mastodon/actions/dropdown_menu';\nimport { fetchHistory } from 'mastodon/actions/history';\nimport DropdownMenu from 'mastodon/components/dropdown_menu';\n\n/**\n *\n * @param {import('mastodon/store').RootState} state\n * @param {*} props\n */\nconst mapStateToProps = (state, { statusId }) => ({\n  openDropdownId: state.dropdownMenu.openId,\n  openedViaKeyboard: state.dropdownMenu.keyboard,\n  items: state.getIn(['history', statusId, 'items']),\n  loading: state.getIn(['history', statusId, 'loading']),\n});\n\nconst mapDispatchToProps = (dispatch, { statusId }) => ({\n\n  onOpen (id, onItemClick, keyboard) {\n    dispatch(fetchHistory(statusId));\n    dispatch(openDropdownMenu({ id, keyboard }));\n  },\n\n  onClose (id) {\n    dispatch(closeDropdownMenu({ id }));\n  },\n\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DropdownMenu);\n","import PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nimport { FormattedMessage, injectIntl } from 'react-intl';\n\nimport { connect } from 'react-redux';\n\nimport { openModal } from 'mastodon/actions/modal';\nimport InlineAccount from 'mastodon/components/inline_account';\nimport { RelativeTimestamp } from 'mastodon/components/relative_timestamp';\n\nimport DropdownMenu from './containers/dropdown_menu_container';\n\nconst mapDispatchToProps = (dispatch, { statusId }) => ({\n\n  onItemClick (index) {\n    dispatch(openModal({\n      modalType: 'COMPARE_HISTORY',\n      modalProps: { index, statusId },\n    }));\n  },\n\n});\n\nclass EditedTimestamp extends PureComponent {\n\n  static propTypes = {\n    statusId: PropTypes.string.isRequired,\n    timestamp: PropTypes.string.isRequired,\n    intl: PropTypes.object.isRequired,\n    onItemClick: PropTypes.func.isRequired,\n  };\n\n  handleItemClick = (item, i) => {\n    const { onItemClick } = this.props;\n    onItemClick(i);\n  };\n\n  renderHeader = items => {\n    return (\n      <FormattedMessage id='status.edited_x_times' defaultMessage='Edited {count, plural, one {# time} other {# times}}' values={{ count: items.size - 1 }} />\n    );\n  };\n\n  renderItem = (item, index, { onClick, onKeyPress }) => {\n    const formattedDate = <RelativeTimestamp timestamp={item.get('created_at')} short={false} />;\n    const formattedName = <InlineAccount accountId={item.get('account')} />;\n\n    const label = item.get('original') ? (\n      <FormattedMessage id='status.history.created' defaultMessage='{name} created {date}' values={{ name: formattedName, date: formattedDate }} />\n    ) : (\n      <FormattedMessage id='status.history.edited' defaultMessage='{name} edited {date}' values={{ name: formattedName, date: formattedDate }} />\n    );\n\n    return (\n      <li className='dropdown-menu__item edited-timestamp__history__item' key={item.get('created_at')}>\n        <button data-index={index} onClick={onClick} onKeyPress={onKeyPress}>{label}</button>\n      </li>\n    );\n  };\n\n  render () {\n    const { timestamp, intl, statusId } = this.props;\n\n    return (\n      <DropdownMenu statusId={statusId} renderItem={this.renderItem} scrollable renderHeader={this.renderHeader} onItemClick={this.handleItemClick}>\n        <button className='dropdown-menu__text-button'>\n          <FormattedMessage id='status.edited' defaultMessage='Edited {date}' values={{ date: <span className='animated-number'>{intl.formatDate(timestamp, { month: 'short', day: '2-digit', hour: '2-digit', minute: '2-digit' })}</span> }} />\n        </button>\n      </DropdownMenu>\n    );\n  }\n\n}\n\nexport default connect(null, mapDispatchToProps)(injectIntl(EditedTimestamp));\n","import PropTypes from 'prop-types';\n\nimport { FormattedDate, FormattedMessage } from 'react-intl';\n\nimport classNames from 'classnames';\nimport { Link, withRouter } from 'react-router-dom';\n\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\n\nimport AlternateEmailIcon from '@/material-icons/400-24px/alternate_email.svg?react';\nimport { AnimatedNumber } from 'mastodon/components/animated_number';\nimport EditedTimestamp from 'mastodon/components/edited_timestamp';\nimport { getHashtagBarForStatus } from 'mastodon/components/hashtag_bar';\nimport { Icon }  from 'mastodon/components/icon';\nimport PictureInPicturePlaceholder from 'mastodon/components/picture_in_picture_placeholder';\nimport { VisibilityIcon } from 'mastodon/components/visibility_icon';\nimport { WithRouterPropTypes } from 'mastodon/utils/react_router';\n\nimport { Avatar } from '../../../components/avatar';\nimport { DisplayName } from '../../../components/display_name';\nimport MediaGallery from '../../../components/media_gallery';\nimport StatusContent from '../../../components/status_content';\nimport Audio from '../../audio';\nimport scheduleIdleTask from '../../ui/util/schedule_idle_task';\nimport Video from '../../video';\n\nimport Card from './card';\n\nclass DetailedStatus extends ImmutablePureComponent {\n\n  static propTypes = {\n    status: ImmutablePropTypes.map,\n    onOpenMedia: PropTypes.func.isRequired,\n    onOpenVideo: PropTypes.func.isRequired,\n    onToggleHidden: PropTypes.func.isRequired,\n    onTranslate: PropTypes.func.isRequired,\n    measureHeight: PropTypes.bool,\n    onHeightChange: PropTypes.func,\n    domain: PropTypes.string.isRequired,\n    compact: PropTypes.bool,\n    showMedia: PropTypes.bool,\n    pictureInPicture: ImmutablePropTypes.contains({\n      inUse: PropTypes.bool,\n      available: PropTypes.bool,\n    }),\n    onToggleMediaVisibility: PropTypes.func,\n    ...WithRouterPropTypes,\n  };\n\n  state = {\n    height: null,\n  };\n\n  handleAccountClick = (e) => {\n    if (e.button === 0 && !(e.ctrlKey || e.metaKey) && this.props.history) {\n      e.preventDefault();\n      this.props.history.push(`/@${this.props.status.getIn(['account', 'acct'])}`);\n    }\n\n    e.stopPropagation();\n  };\n\n  handleOpenVideo = (options) => {\n    this.props.onOpenVideo(this.props.status.getIn(['media_attachments', 0]), options);\n  };\n\n  handleExpandedToggle = () => {\n    this.props.onToggleHidden(this.props.status);\n  };\n\n  _measureHeight (heightJustChanged) {\n    if (this.props.measureHeight && this.node) {\n      scheduleIdleTask(() => this.node && this.setState({ height: Math.ceil(this.node.scrollHeight) + 1 }));\n\n      if (this.props.onHeightChange && heightJustChanged) {\n        this.props.onHeightChange();\n      }\n    }\n  }\n\n  setRef = c => {\n    this.node = c;\n    this._measureHeight();\n  };\n\n  componentDidUpdate (prevProps, prevState) {\n    this._measureHeight(prevState.height !== this.state.height);\n  }\n\n  handleModalLink = e => {\n    e.preventDefault();\n\n    let href;\n\n    if (e.target.nodeName !== 'A') {\n      href = e.target.parentNode.href;\n    } else {\n      href = e.target.href;\n    }\n\n    window.open(href, 'mastodon-intent', 'width=445,height=600,resizable=no,menubar=no,status=no,scrollbars=yes');\n  };\n\n  handleTranslate = () => {\n    const { onTranslate, status } = this.props;\n    onTranslate(status);\n  };\n\n  _properStatus () {\n    const { status } = this.props;\n\n    if (status.get('reblog', null) !== null && typeof status.get('reblog') === 'object') {\n      return status.get('reblog');\n    } else {\n      return status;\n    }\n  }\n\n  getAttachmentAspectRatio () {\n    const attachments = this._properStatus().get('media_attachments');\n\n    if (attachments.getIn([0, 'type']) === 'video') {\n      return `${attachments.getIn([0, 'meta', 'original', 'width'])} / ${attachments.getIn([0, 'meta', 'original', 'height'])}`;\n    } else if (attachments.getIn([0, 'type']) === 'audio') {\n      return '16 / 9';\n    } else {\n      return (attachments.size === 1 && attachments.getIn([0, 'meta', 'small', 'aspect'])) ? attachments.getIn([0, 'meta', 'small', 'aspect']) : '3 / 2';\n    }\n  }\n\n  render () {\n    const status = this._properStatus();\n    const outerStyle = { boxSizing: 'border-box' };\n    const { compact, pictureInPicture } = this.props;\n\n    if (!status) {\n      return null;\n    }\n\n    let media           = '';\n    let applicationLink = '';\n    let reblogLink = '';\n    let favouriteLink = '';\n\n    if (this.props.measureHeight) {\n      outerStyle.height = `${this.state.height}px`;\n    }\n\n    const language = status.getIn(['translation', 'language']) || status.get('language');\n\n    if (pictureInPicture.get('inUse')) {\n      media = <PictureInPicturePlaceholder aspectRatio={this.getAttachmentAspectRatio()} />;\n    } else if (status.get('media_attachments').size > 0) {\n      if (status.getIn(['media_attachments', 0, 'type']) === 'audio') {\n        const attachment = status.getIn(['media_attachments', 0]);\n        const description = attachment.getIn(['translation', 'description']) || attachment.get('description');\n\n        media = (\n          <Audio\n            src={attachment.get('url')}\n            alt={description}\n            lang={language}\n            duration={attachment.getIn(['meta', 'original', 'duration'], 0)}\n            poster={attachment.get('preview_url') || status.getIn(['account', 'avatar_static'])}\n            backgroundColor={attachment.getIn(['meta', 'colors', 'background'])}\n            foregroundColor={attachment.getIn(['meta', 'colors', 'foreground'])}\n            accentColor={attachment.getIn(['meta', 'colors', 'accent'])}\n            sensitive={status.get('sensitive')}\n            visible={this.props.showMedia}\n            blurhash={attachment.get('blurhash')}\n            height={150}\n            onToggleVisibility={this.props.onToggleMediaVisibility}\n          />\n        );\n      } else if (status.getIn(['media_attachments', 0, 'type']) === 'video') {\n        const attachment = status.getIn(['media_attachments', 0]);\n        const description = attachment.getIn(['translation', 'description']) || attachment.get('description');\n\n        media = (\n          <Video\n            preview={attachment.get('preview_url')}\n            frameRate={attachment.getIn(['meta', 'original', 'frame_rate'])}\n            aspectRatio={`${attachment.getIn(['meta', 'original', 'width'])} / ${attachment.getIn(['meta', 'original', 'height'])}`}\n            blurhash={attachment.get('blurhash')}\n            src={attachment.get('url')}\n            alt={description}\n            lang={language}\n            width={300}\n            height={150}\n            onOpenVideo={this.handleOpenVideo}\n            sensitive={status.get('sensitive')}\n            visible={this.props.showMedia}\n            onToggleVisibility={this.props.onToggleMediaVisibility}\n          />\n        );\n      } else {\n        media = (\n          <MediaGallery\n            standalone\n            sensitive={status.get('sensitive')}\n            media={status.get('media_attachments')}\n            lang={language}\n            height={300}\n            onOpenMedia={this.props.onOpenMedia}\n            visible={this.props.showMedia}\n            onToggleVisibility={this.props.onToggleMediaVisibility}\n          />\n        );\n      }\n    } else if (status.get('spoiler_text').length === 0) {\n      media = <Card sensitive={status.get('sensitive')} onOpenMedia={this.props.onOpenMedia} card={status.get('card', null)} />;\n    }\n\n    if (status.get('application')) {\n      applicationLink = <>·<a className='detailed-status__application' href={status.getIn(['application', 'website'])} target='_blank' rel='noopener noreferrer'>{status.getIn(['application', 'name'])}</a></>;\n    }\n\n    const visibilityLink = <>·<VisibilityIcon visibility={status.get('visibility')} /></>;\n\n    if (['private', 'direct'].includes(status.get('visibility'))) {\n      reblogLink = '';\n    } else if (this.props.history) {\n      reblogLink = (\n        <Link to={`/@${status.getIn(['account', 'acct'])}/${status.get('id')}/reblogs`} className='detailed-status__link'>\n          <span className='detailed-status__reblogs'>\n            <AnimatedNumber value={status.get('reblogs_count')} />\n          </span>\n          <FormattedMessage id='status.reblogs' defaultMessage='{count, plural, one {boost} other {boosts}}' values={{ count: status.get('reblogs_count') }} />\n        </Link>\n      );\n    } else {\n      reblogLink = (\n        <a href={`/interact/${status.get('id')}?type=reblog`} className='detailed-status__link' onClick={this.handleModalLink}>\n          <span className='detailed-status__reblogs'>\n            <AnimatedNumber value={status.get('reblogs_count')} />\n          </span>\n          <FormattedMessage id='status.reblogs' defaultMessage='{count, plural, one {boost} other {boosts}}' values={{ count: status.get('reblogs_count') }} />\n        </a>\n      );\n    }\n\n    if (this.props.history) {\n      favouriteLink = (\n        <Link to={`/@${status.getIn(['account', 'acct'])}/${status.get('id')}/favourites`} className='detailed-status__link'>\n          <span className='detailed-status__favorites'>\n            <AnimatedNumber value={status.get('favourites_count')} />\n          </span>\n          <FormattedMessage id='status.favourites' defaultMessage='{count, plural, one {favorite} other {favorites}}' values={{ count: status.get('favourites_count') }} />\n        </Link>\n      );\n    } else {\n      favouriteLink = (\n        <a href={`/interact/${status.get('id')}?type=favourite`} className='detailed-status__link' onClick={this.handleModalLink}>\n          <span className='detailed-status__favorites'>\n            <AnimatedNumber value={status.get('favourites_count')} />\n          </span>\n          <FormattedMessage id='status.favourites' defaultMessage='{count, plural, one {favorite} other {favorites}}' values={{ count: status.get('favourites_count') }} />\n        </a>\n      );\n    }\n\n    const {statusContentProps, hashtagBar} = getHashtagBarForStatus(status);\n    const expanded = !status.get('hidden') || status.get('spoiler_text').length === 0;\n\n    return (\n      <div style={outerStyle}>\n        <div ref={this.setRef} className={classNames('detailed-status', { compact })}>\n          {status.get('visibility') === 'direct' && (\n            <div className='status__prepend'>\n              <div className='status__prepend-icon-wrapper'><Icon id='at' icon={AlternateEmailIcon} className='status__prepend-icon' /></div>\n              <FormattedMessage id='status.direct_indicator' defaultMessage='Private mention' />\n            </div>\n          )}\n          <a href={`/@${status.getIn(['account', 'acct'])}`} data-hover-card-account={status.getIn(['account', 'id'])} onClick={this.handleAccountClick} className='detailed-status__display-name'>\n            <div className='detailed-status__display-avatar'><Avatar account={status.get('account')} size={46} /></div>\n            <DisplayName account={status.get('account')} localDomain={this.props.domain} />\n          </a>\n\n          <StatusContent\n            status={status}\n            expanded={!status.get('hidden')}\n            onExpandedToggle={this.handleExpandedToggle}\n            onTranslate={this.handleTranslate}\n            {...statusContentProps}\n          />\n\n          {media}\n\n          {expanded && hashtagBar}\n\n          <div className='detailed-status__meta'>\n            <div className='detailed-status__meta__line'>\n              <a className='detailed-status__datetime' href={`/@${status.getIn(['account', 'acct'])}/${status.get('id')}`} target='_blank' rel='noopener noreferrer'>\n                <FormattedDate value={new Date(status.get('created_at'))} year='numeric' month='short' day='2-digit' hour='2-digit' minute='2-digit' />\n              </a>\n\n              {visibilityLink}\n\n              {applicationLink}\n            </div>\n\n            {status.get('edited_at') && <div className='detailed-status__meta__line'><EditedTimestamp statusId={status.get('id')} timestamp={status.get('edited_at')} /></div>}\n\n            <div className='detailed-status__meta__line'>\n              {reblogLink}\n              {reblogLink && <>·</>}\n              {favouriteLink}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n}\n\nexport default withRouter(DetailedStatus);\n","import PropTypes from 'prop-types';\n\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport classNames from 'classnames';\nimport { Helmet } from 'react-helmet';\nimport { withRouter } from 'react-router-dom';\n\nimport { createSelector } from '@reduxjs/toolkit';\nimport Immutable from 'immutable';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport { connect } from 'react-redux';\n\nimport { HotKeys } from 'react-hotkeys';\n\nimport VisibilityIcon from '@/material-icons/400-24px/visibility.svg?react';\nimport VisibilityOffIcon from '@/material-icons/400-24px/visibility_off.svg?react';\nimport { Icon }  from 'mastodon/components/icon';\nimport { LoadingIndicator } from 'mastodon/components/loading_indicator';\nimport ScrollContainer from 'mastodon/containers/scroll_container';\nimport BundleColumnError from 'mastodon/features/ui/components/bundle_column_error';\nimport { identityContextPropShape, withIdentity } from 'mastodon/identity_context';\nimport { WithRouterPropTypes } from 'mastodon/utils/react_router';\n\nimport {\n  unblockAccount,\n  unmuteAccount,\n} from '../../actions/accounts';\nimport { initBlockModal } from '../../actions/blocks';\nimport {\n  replyCompose,\n  mentionCompose,\n  directCompose,\n} from '../../actions/compose';\nimport {\n  initDomainBlockModal,\n  unblockDomain,\n} from '../../actions/domain_blocks';\nimport {\n  toggleFavourite,\n  bookmark,\n  unbookmark,\n  toggleReblog,\n  pin,\n  unpin,\n} from '../../actions/interactions';\nimport { openModal } from '../../actions/modal';\nimport { initMuteModal } from '../../actions/mutes';\nimport { initReport } from '../../actions/reports';\nimport {\n  fetchStatus,\n  muteStatus,\n  unmuteStatus,\n  deleteStatus,\n  editStatus,\n  hideStatus,\n  revealStatus,\n  translateStatus,\n  undoStatusTranslation,\n} from '../../actions/statuses';\nimport ColumnHeader from '../../components/column_header';\nimport { textForScreenReader, defaultMediaVisibility } from '../../components/status';\nimport StatusContainer from '../../containers/status_container';\nimport { deleteModal } from '../../initial_state';\nimport { makeGetStatus, makeGetPictureInPicture } from '../../selectors';\nimport Column from '../ui/components/column';\nimport { attachFullscreenListener, detachFullscreenListener, isFullscreen } from '../ui/util/fullscreen';\n\nimport ActionBar from './components/action_bar';\nimport DetailedStatus from './components/detailed_status';\n\n\nconst messages = defineMessages({\n  revealAll: { id: 'status.show_more_all', defaultMessage: 'Show more for all' },\n  hideAll: { id: 'status.show_less_all', defaultMessage: 'Show less for all' },\n  statusTitleWithAttachments: { id: 'status.title.with_attachments', defaultMessage: '{user} posted {attachmentCount, plural, one {an attachment} other {# attachments}}' },\n  detailedStatus: { id: 'status.detailed_status', defaultMessage: 'Detailed conversation view' },\n});\n\nconst makeMapStateToProps = () => {\n  const getStatus = makeGetStatus();\n  const getPictureInPicture = makeGetPictureInPicture();\n\n  const getAncestorsIds = createSelector([\n    (_, { id }) => id,\n    state => state.getIn(['contexts', 'inReplyTos']),\n  ], (statusId, inReplyTos) => {\n    let ancestorsIds = Immutable.List();\n    ancestorsIds = ancestorsIds.withMutations(mutable => {\n      let id = statusId;\n\n      while (id && !mutable.includes(id)) {\n        mutable.unshift(id);\n        id = inReplyTos.get(id);\n      }\n    });\n\n    return ancestorsIds;\n  });\n\n  const getDescendantsIds = createSelector([\n    (_, { id }) => id,\n    state => state.getIn(['contexts', 'replies']),\n    state => state.get('statuses'),\n  ], (statusId, contextReplies, statuses) => {\n    let descendantsIds = [];\n    const ids = [statusId];\n\n    while (ids.length > 0) {\n      let id        = ids.pop();\n      const replies = contextReplies.get(id);\n\n      if (statusId !== id) {\n        descendantsIds.push(id);\n      }\n\n      if (replies) {\n        replies.reverse().forEach(reply => {\n          if (!ids.includes(reply) && !descendantsIds.includes(reply) && statusId !== reply) ids.push(reply);\n        });\n      }\n    }\n\n    let insertAt = descendantsIds.findIndex((id) => statuses.get(id).get('in_reply_to_account_id') !== statuses.get(id).get('account'));\n    if (insertAt !== -1) {\n      descendantsIds.forEach((id, idx) => {\n        if (idx > insertAt && statuses.get(id).get('in_reply_to_account_id') === statuses.get(id).get('account')) {\n          descendantsIds.splice(idx, 1);\n          descendantsIds.splice(insertAt, 0, id);\n          insertAt += 1;\n        }\n      });\n    }\n\n    return Immutable.List(descendantsIds);\n  });\n\n  const mapStateToProps = (state, props) => {\n    const status = getStatus(state, { id: props.params.statusId });\n\n    let ancestorsIds   = Immutable.List();\n    let descendantsIds = Immutable.List();\n\n    if (status) {\n      ancestorsIds   = getAncestorsIds(state, { id: status.get('in_reply_to_id') });\n      descendantsIds = getDescendantsIds(state, { id: status.get('id') });\n    }\n\n    return {\n      isLoading: state.getIn(['statuses', props.params.statusId, 'isLoading']),\n      status,\n      ancestorsIds,\n      descendantsIds,\n      askReplyConfirmation: state.getIn(['compose', 'text']).trim().length !== 0,\n      domain: state.getIn(['meta', 'domain']),\n      pictureInPicture: getPictureInPicture(state, { id: props.params.statusId }),\n    };\n  };\n\n  return mapStateToProps;\n};\n\nconst truncate = (str, num) => {\n  const arr = Array.from(str);\n  if (arr.length > num) {\n    return arr.slice(0, num).join('') + '…';\n  } else {\n    return str;\n  }\n};\n\nconst titleFromStatus = (intl, status) => {\n  const displayName = status.getIn(['account', 'display_name']);\n  const username = status.getIn(['account', 'username']);\n  const user = displayName.trim().length === 0 ? username : displayName;\n  const text = status.get('search_index');\n  const attachmentCount = status.get('media_attachments').size;\n\n  return text ? `${user}: \"${truncate(text, 30)}\"` : intl.formatMessage(messages.statusTitleWithAttachments, { user, attachmentCount });\n};\n\nclass Status extends ImmutablePureComponent {\n  static propTypes = {\n    identity: identityContextPropShape,\n    params: PropTypes.object.isRequired,\n    dispatch: PropTypes.func.isRequired,\n    status: ImmutablePropTypes.map,\n    isLoading: PropTypes.bool,\n    ancestorsIds: ImmutablePropTypes.list.isRequired,\n    descendantsIds: ImmutablePropTypes.list.isRequired,\n    intl: PropTypes.object.isRequired,\n    askReplyConfirmation: PropTypes.bool,\n    multiColumn: PropTypes.bool,\n    domain: PropTypes.string.isRequired,\n    pictureInPicture: ImmutablePropTypes.contains({\n      inUse: PropTypes.bool,\n      available: PropTypes.bool,\n    }),\n    ...WithRouterPropTypes\n  };\n\n  state = {\n    fullscreen: false,\n    showMedia: defaultMediaVisibility(this.props.status),\n    loadedStatusId: undefined,\n  };\n\n  UNSAFE_componentWillMount () {\n    this.props.dispatch(fetchStatus(this.props.params.statusId));\n  }\n\n  componentDidMount () {\n    attachFullscreenListener(this.onFullScreenChange);\n\n    this._scrollStatusIntoView();\n  }\n\n  UNSAFE_componentWillReceiveProps (nextProps) {\n    if (nextProps.params.statusId !== this.props.params.statusId && nextProps.params.statusId) {\n      this.props.dispatch(fetchStatus(nextProps.params.statusId));\n    }\n\n    if (nextProps.status && nextProps.status.get('id') !== this.state.loadedStatusId) {\n      this.setState({ showMedia: defaultMediaVisibility(nextProps.status), loadedStatusId: nextProps.status.get('id') });\n    }\n  }\n\n  handleToggleMediaVisibility = () => {\n    this.setState({ showMedia: !this.state.showMedia });\n  };\n\n  handleFavouriteClick = (status) => {\n    const { dispatch } = this.props;\n    const { signedIn } = this.props.identity;\n\n    if (signedIn) {\n      dispatch(toggleFavourite(status.get('id')));\n    } else {\n      dispatch(openModal({\n        modalType: 'INTERACTION',\n        modalProps: {\n          type: 'favourite',\n          accountId: status.getIn(['account', 'id']),\n          url: status.get('uri'),\n        },\n      }));\n    }\n  };\n\n  handlePin = (status) => {\n    if (status.get('pinned')) {\n      this.props.dispatch(unpin(status));\n    } else {\n      this.props.dispatch(pin(status));\n    }\n  };\n\n  handleReplyClick = (status) => {\n    const { askReplyConfirmation, dispatch } = this.props;\n    const { signedIn } = this.props.identity;\n\n    if (signedIn) {\n      if (askReplyConfirmation) {\n        dispatch(openModal({ modalType: 'CONFIRM_REPLY', modalProps: { status } }));\n      } else {\n        dispatch(replyCompose(status));\n      }\n    } else {\n      dispatch(openModal({\n        modalType: 'INTERACTION',\n        modalProps: {\n          type: 'reply',\n          accountId: status.getIn(['account', 'id']),\n          url: status.get('uri'),\n        },\n      }));\n    }\n  };\n\n  handleReblogClick = (status, e) => {\n    const { dispatch } = this.props;\n    const { signedIn } = this.props.identity;\n\n    if (signedIn) {\n      dispatch(toggleReblog(status.get('id'), e && e.shiftKey));\n    } else {\n      dispatch(openModal({\n        modalType: 'INTERACTION',\n        modalProps: {\n          type: 'reblog',\n          accountId: status.getIn(['account', 'id']),\n          url: status.get('uri'),\n        },\n      }));\n    }\n  };\n\n  handleBookmarkClick = (status) => {\n    if (status.get('bookmarked')) {\n      this.props.dispatch(unbookmark(status));\n    } else {\n      this.props.dispatch(bookmark(status));\n    }\n  };\n\n  handleDeleteClick = (status, withRedraft = false) => {\n    const { dispatch } = this.props;\n\n    if (!deleteModal) {\n      dispatch(deleteStatus(status.get('id'), withRedraft));\n    } else {\n      dispatch(openModal({ modalType: 'CONFIRM_DELETE_STATUS', modalProps: { statusId: status.get('id'), withRedraft } }));\n    }\n  };\n\n  handleEditClick = (status) => {\n    const { dispatch, askReplyConfirmation } = this.props;\n\n    if (askReplyConfirmation) {\n      dispatch(openModal({ modalType: 'CONFIRM_EDIT_STATUS', modalProps: { statusId: status.get('id') } }));\n    } else {\n      dispatch(editStatus(status.get('id')));\n    }\n  };\n\n  handleDirectClick = (account) => {\n    this.props.dispatch(directCompose(account));\n  };\n\n  handleMentionClick = (account) => {\n    this.props.dispatch(mentionCompose(account));\n  };\n\n  handleOpenMedia = (media, index, lang) => {\n    this.props.dispatch(openModal({\n      modalType: 'MEDIA',\n      modalProps: { statusId: this.props.status.get('id'), media, index, lang },\n    }));\n  };\n\n  handleOpenVideo = (media, lang, options) => {\n    this.props.dispatch(openModal({\n      modalType: 'VIDEO',\n      modalProps: { statusId: this.props.status.get('id'), media, lang, options },\n    }));\n  };\n\n  handleHotkeyOpenMedia = e => {\n    const { status } = this.props;\n\n    e.preventDefault();\n\n    if (status.get('media_attachments').size > 0) {\n      if (status.getIn(['media_attachments', 0, 'type']) === 'video') {\n        this.handleOpenVideo(status.getIn(['media_attachments', 0]), { startTime: 0 });\n      } else {\n        this.handleOpenMedia(status.get('media_attachments'), 0);\n      }\n    }\n  };\n\n  handleMuteClick = (account) => {\n    this.props.dispatch(initMuteModal(account));\n  };\n\n  handleConversationMuteClick = (status) => {\n    if (status.get('muted')) {\n      this.props.dispatch(unmuteStatus(status.get('id')));\n    } else {\n      this.props.dispatch(muteStatus(status.get('id')));\n    }\n  };\n\n  handleToggleHidden = (status) => {\n    if (status.get('hidden')) {\n      this.props.dispatch(revealStatus(status.get('id')));\n    } else {\n      this.props.dispatch(hideStatus(status.get('id')));\n    }\n  };\n\n  handleToggleAll = () => {\n    const { status, ancestorsIds, descendantsIds } = this.props;\n    const statusIds = [status.get('id')].concat(ancestorsIds.toJS(), descendantsIds.toJS());\n\n    if (status.get('hidden')) {\n      this.props.dispatch(revealStatus(statusIds));\n    } else {\n      this.props.dispatch(hideStatus(statusIds));\n    }\n  };\n\n  handleTranslate = status => {\n    const { dispatch } = this.props;\n\n    if (status.get('translation')) {\n      dispatch(undoStatusTranslation(status.get('id'), status.get('poll')));\n    } else {\n      dispatch(translateStatus(status.get('id')));\n    }\n  };\n\n  handleBlockClick = (status) => {\n    const { dispatch } = this.props;\n    const account = status.get('account');\n    dispatch(initBlockModal(account));\n  };\n\n  handleReport = (status) => {\n    this.props.dispatch(initReport(status.get('account'), status));\n  };\n\n  handleEmbed = (status) => {\n    this.props.dispatch(openModal({\n      modalType: 'EMBED',\n      modalProps: { id: status.get('id') },\n    }));\n  };\n\n  handleUnmuteClick = account => {\n    this.props.dispatch(unmuteAccount(account.get('id')));\n  };\n\n  handleUnblockClick = account => {\n    this.props.dispatch(unblockAccount(account.get('id')));\n  };\n\n  handleBlockDomainClick = account => {\n    this.props.dispatch(initDomainBlockModal(account));\n  };\n\n  handleUnblockDomainClick = domain => {\n    this.props.dispatch(unblockDomain(domain));\n  };\n\n\n  handleHotkeyMoveUp = () => {\n    this.handleMoveUp(this.props.status.get('id'));\n  };\n\n  handleHotkeyMoveDown = () => {\n    this.handleMoveDown(this.props.status.get('id'));\n  };\n\n  handleHotkeyReply = e => {\n    e.preventDefault();\n    this.handleReplyClick(this.props.status);\n  };\n\n  handleHotkeyFavourite = () => {\n    this.handleFavouriteClick(this.props.status);\n  };\n\n  handleHotkeyBoost = () => {\n    this.handleReblogClick(this.props.status);\n  };\n\n  handleHotkeyMention = e => {\n    e.preventDefault();\n    this.handleMentionClick(this.props.status.get('account'));\n  };\n\n  handleHotkeyOpenProfile = () => {\n    this.props.history.push(`/@${this.props.status.getIn(['account', 'acct'])}`);\n  };\n\n  handleHotkeyToggleHidden = () => {\n    this.handleToggleHidden(this.props.status);\n  };\n\n  handleHotkeyToggleSensitive = () => {\n    this.handleToggleMediaVisibility();\n  };\n\n  handleMoveUp = id => {\n    const { status, ancestorsIds, descendantsIds } = this.props;\n\n    if (id === status.get('id')) {\n      this._selectChild(ancestorsIds.size - 1, true);\n    } else {\n      let index = ancestorsIds.indexOf(id);\n\n      if (index === -1) {\n        index = descendantsIds.indexOf(id);\n        this._selectChild(ancestorsIds.size + index, true);\n      } else {\n        this._selectChild(index - 1, true);\n      }\n    }\n  };\n\n  handleMoveDown = id => {\n    const { status, ancestorsIds, descendantsIds } = this.props;\n\n    if (id === status.get('id')) {\n      this._selectChild(ancestorsIds.size + 1, false);\n    } else {\n      let index = ancestorsIds.indexOf(id);\n\n      if (index === -1) {\n        index = descendantsIds.indexOf(id);\n        this._selectChild(ancestorsIds.size + index + 2, false);\n      } else {\n        this._selectChild(index + 1, false);\n      }\n    }\n  };\n\n  _selectChild (index, align_top) {\n    const container = this.node;\n    const element = container.querySelectorAll('.focusable')[index];\n\n    if (element) {\n      if (align_top && container.scrollTop > element.offsetTop) {\n        element.scrollIntoView(true);\n      } else if (!align_top && container.scrollTop + container.clientHeight < element.offsetTop + element.offsetHeight) {\n        element.scrollIntoView(false);\n      }\n      element.focus();\n    }\n  }\n\n  renderChildren (list, ancestors) {\n    const { params: { statusId } } = this.props;\n\n    return list.map((id, i) => (\n      <StatusContainer\n        key={id}\n        id={id}\n        onMoveUp={this.handleMoveUp}\n        onMoveDown={this.handleMoveDown}\n        contextType='thread'\n        previousId={i > 0 ? list.get(i - 1) : undefined}\n        nextId={list.get(i + 1) || (ancestors && statusId)}\n        rootId={statusId}\n      />\n    ));\n  }\n\n  setContainerRef = c => {\n    this.node = c;\n  };\n\n  setStatusRef = c => {\n    this.statusNode = c;\n  };\n\n  _scrollStatusIntoView () {\n    const { status, multiColumn } = this.props;\n\n    if (status) {\n      requestIdleCallback(() => {\n        this.statusNode?.scrollIntoView(true);\n\n        // In the single-column interface, `scrollIntoView` will put the post behind the header,\n        // so compensate for that.\n        if (!multiColumn) {\n          const offset = document.querySelector('.column-header__wrapper')?.getBoundingClientRect()?.bottom;\n          if (offset) {\n            const scrollingElement = document.scrollingElement || document.body;\n            scrollingElement.scrollBy(0, -offset);\n          }\n        }\n      });\n    }\n  }\n\n  componentDidUpdate (prevProps) {\n    const { status, ancestorsIds } = this.props;\n\n    if (status && (ancestorsIds.size > prevProps.ancestorsIds.size || prevProps.status?.get('id') !== status.get('id'))) {\n      this._scrollStatusIntoView();\n    }\n  }\n\n  componentWillUnmount () {\n    detachFullscreenListener(this.onFullScreenChange);\n  }\n\n  onFullScreenChange = () => {\n    this.setState({ fullscreen: isFullscreen() });\n  };\n\n  shouldUpdateScroll = (prevRouterProps, { location }) => {\n    // Do not change scroll when opening a modal\n    if (location.state?.mastodonModalKey !== prevRouterProps?.location?.state?.mastodonModalKey) {\n      return false;\n    }\n\n    // Scroll to focused post if it is loaded\n    if (this.statusNode) {\n      return [0, this.statusNode.offsetTop];\n    }\n\n    // Do not scroll otherwise, `componentDidUpdate` will take care of that\n    return false;\n  };\n\n  render () {\n    let ancestors, descendants;\n    const { isLoading, status, ancestorsIds, descendantsIds, intl, domain, multiColumn, pictureInPicture } = this.props;\n    const { fullscreen } = this.state;\n\n    if (isLoading) {\n      return (\n        <Column>\n          <LoadingIndicator />\n        </Column>\n      );\n    }\n\n    if (status === null) {\n      return (\n        <BundleColumnError multiColumn={multiColumn} errorType='routing' />\n      );\n    }\n\n    if (ancestorsIds && ancestorsIds.size > 0) {\n      ancestors = <>{this.renderChildren(ancestorsIds, true)}</>;\n    }\n\n    if (descendantsIds && descendantsIds.size > 0) {\n      descendants = <>{this.renderChildren(descendantsIds)}</>;\n    }\n\n    const isLocal = status.getIn(['account', 'acct'], '').indexOf('@') === -1;\n    const isIndexable = !status.getIn(['account', 'noindex']);\n\n    const handlers = {\n      moveUp: this.handleHotkeyMoveUp,\n      moveDown: this.handleHotkeyMoveDown,\n      reply: this.handleHotkeyReply,\n      favourite: this.handleHotkeyFavourite,\n      boost: this.handleHotkeyBoost,\n      mention: this.handleHotkeyMention,\n      openProfile: this.handleHotkeyOpenProfile,\n      toggleHidden: this.handleHotkeyToggleHidden,\n      toggleSensitive: this.handleHotkeyToggleSensitive,\n      openMedia: this.handleHotkeyOpenMedia,\n    };\n\n    return (\n      <Column bindToDocument={!multiColumn} label={intl.formatMessage(messages.detailedStatus)}>\n        <ColumnHeader\n          showBackButton\n          multiColumn={multiColumn}\n          extraButton={(\n            <button type='button' className='column-header__button' title={intl.formatMessage(status.get('hidden') ? messages.revealAll : messages.hideAll)} aria-label={intl.formatMessage(status.get('hidden') ? messages.revealAll : messages.hideAll)} onClick={this.handleToggleAll}><Icon id={status.get('hidden') ? 'eye-slash' : 'eye'} icon={status.get('hidden') ? VisibilityOffIcon : VisibilityIcon} /></button>\n          )}\n        />\n\n        <ScrollContainer scrollKey='thread' shouldUpdateScroll={this.shouldUpdateScroll}>\n          <div className={classNames('scrollable', { fullscreen })} ref={this.setContainerRef}>\n            {ancestors}\n\n            <HotKeys handlers={handlers}>\n              <div className={classNames('focusable', 'detailed-status__wrapper', `detailed-status__wrapper-${status.get('visibility')}`)} tabIndex={0} aria-label={textForScreenReader(intl, status, false)} ref={this.setStatusRef}>\n                <DetailedStatus\n                  key={`details-${status.get('id')}`}\n                  status={status}\n                  onOpenVideo={this.handleOpenVideo}\n                  onOpenMedia={this.handleOpenMedia}\n                  onToggleHidden={this.handleToggleHidden}\n                  onTranslate={this.handleTranslate}\n                  domain={domain}\n                  showMedia={this.state.showMedia}\n                  onToggleMediaVisibility={this.handleToggleMediaVisibility}\n                  pictureInPicture={pictureInPicture}\n                />\n\n                <ActionBar\n                  key={`action-bar-${status.get('id')}`}\n                  status={status}\n                  onReply={this.handleReplyClick}\n                  onFavourite={this.handleFavouriteClick}\n                  onReblog={this.handleReblogClick}\n                  onBookmark={this.handleBookmarkClick}\n                  onDelete={this.handleDeleteClick}\n                  onEdit={this.handleEditClick}\n                  onDirect={this.handleDirectClick}\n                  onMention={this.handleMentionClick}\n                  onMute={this.handleMuteClick}\n                  onUnmute={this.handleUnmuteClick}\n                  onMuteConversation={this.handleConversationMuteClick}\n                  onBlock={this.handleBlockClick}\n                  onUnblock={this.handleUnblockClick}\n                  onBlockDomain={this.handleBlockDomainClick}\n                  onUnblockDomain={this.handleUnblockDomainClick}\n                  onReport={this.handleReport}\n                  onPin={this.handlePin}\n                  onEmbed={this.handleEmbed}\n                />\n              </div>\n            </HotKeys>\n\n            {descendants}\n          </div>\n        </ScrollContainer>\n\n        <Helmet>\n          <title>{titleFromStatus(intl, status)}</title>\n          <meta name='robots' content={(isLocal && isIndexable) ? 'all' : 'noindex'} />\n          <link rel='canonical' href={status.get('url')} />\n        </Helmet>\n      </Column>\n    );\n  }\n\n}\n\nexport default withRouter(injectIntl(connect(makeMapStateToProps)(withIdentity(Status))));\n"],"sourceRoot":""}