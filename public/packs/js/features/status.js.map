{"version":3,"sources":["webpack:///app/javascript/var/home/testeraphy/Documents/Chuckya-fe-standalone/app/javascript/mastodon/features/status/components/action_bar.jsx","webpack:///app/javascript/var/home/testeraphy/Documents/Chuckya-fe-standalone/app/javascript/mastodon/components/edited_timestamp/containers/dropdown_menu_container.js","webpack:///app/javascript/var/home/testeraphy/Documents/Chuckya-fe-standalone/app/javascript/mastodon/components/edited_timestamp/index.jsx","webpack:///app/javascript/var/home/testeraphy/Documents/Chuckya-fe-standalone/app/javascript/mastodon/features/status/components/detailed_status.jsx","webpack:///app/javascript/var/home/testeraphy/Documents/Chuckya-fe-standalone/app/javascript/mastodon/features/status/index.jsx"],"names":["messages","defineMessages","delete","id","defaultMessage","redraft","edit","direct","mention","reply","reblog","reblog_private","cancel_reblog_private","cannot_reblog","favourite","bookmark","more","mute","muteConversation","unmuteConversation","block","report","share","pin","unpin","embed","admin_account","admin_status","admin_domain","copy","blockDomain","unblockDomain","unmute","unblock","openOriginalPage","ActionBar","PureComponent","constructor","arguments","_defineProperty","this","props","onReply","status","e","onReblog","onFavourite","onBookmark","onDelete","history","onEdit","onDirect","get","onMention","relationship","onMute","onUnmute","account","onBlock","onUnblock","onBlockDomain","onUnblockDomain","split","onMuteConversation","onReport","onPin","navigator","url","onEmbed","clipboard","writeText","render","intl","signedIn","permissions","identity","publicStatus","includes","pinnableStatus","mutingConversation","writtenByMe","getIn","me","isRemote","replyIcon","replyIconComponent","menu","push","text","formatMessage","href","action","handleCopy","handleShare","handleEmbed","handlePinClick","handleConversationMuteClick","handleEditClick","handleDeleteClick","dangerous","handleRedraftClick","name","handleMentionClick","handleMuteClick","handleBlockClick","handleReport","domain","handleUnblockDomain","handleBlockDomain","PERMISSION_MANAGE_USERS","PERMISSION_MANAGE_FEDERATION","concat","ReplyIcon","ReplyAllIcon","reblogPrivate","reblogTitle","reblogIconComponent","RepeatActiveIcon","RepeatPrivateActiveIcon","RepeatIcon","RepeatPrivateIcon","RepeatDisabledIcon","_jsx","className","IconButton","title","icon","iconComponent","onClick","handleReplyClick","classNames","disabled","active","handleReblogClick","animate","StarIcon","StarBorderIcon","handleFavouriteClick","BookmarkIcon","BookmarkBorderIcon","handleBookmarkClick","DropdownMenuContainer","MoreHorizIcon","items","direction","withRouter","connect","mapStateToProps","state","_ref","withIdentity","injectIntl","statusId","openDropdownId","dropdownMenu","openId","openedViaKeyboard","keyboard","loading","mapDispatchToProps","dispatch","_ref2","onOpen","onItemClick","fetchHistory","openDropdownMenu","onClose","closeDropdownMenu","DropdownMenu","EditedTimestamp","item","i","FormattedMessage","values","count","size","index","onKeyPress","formattedDate","RelativeTimestamp","timestamp","short","formattedName","InlineAccount","accountId","label","date","renderItem","scrollable","renderHeader","handleItemClick","formatDate","month","day","hour","minute","openModal","modalType","modalProps","DetailedStatus","ImmutablePureComponent","height","button","ctrlKey","metaKey","preventDefault","stopPropagation","options","onOpenVideo","onToggleHidden","c","node","_measureHeight","target","nodeName","parentNode","window","open","onTranslate","heightJustChanged","measureHeight","scheduleIdleTask","setState","Math","ceil","scrollHeight","onHeightChange","componentDidUpdate","prevProps","prevState","_properStatus","getAttachmentAspectRatio","attachments","outerStyle","boxSizing","compact","pictureInPicture","media","applicationLink","reblogLink","favouriteLink","language","PictureInPicturePlaceholder","aspectRatio","attachment","description","Audio","src","alt","lang","duration","poster","backgroundColor","foregroundColor","accentColor","sensitive","visible","showMedia","blurhash","onToggleVisibility","onToggleMediaVisibility","Video","preview","frameRate","width","handleOpenVideo","MediaGallery","standalone","onOpenMedia","length","Card","card","_jsxs","_Fragment","children","rel","visibilityLink","VisibilityIcon","visibility","Link","to","AnimatedNumber","value","handleModalLink","statusContentProps","hashtagBar","getHashtagBarForStatus","expanded","style","ref","setRef","Icon","AlternateEmailIcon","handleAccountClick","Avatar","DisplayName","localDomain","_jsx2","StatusContent","onExpandedToggle","handleExpandedToggle","handleTranslate","FormattedDate","Date","year","ImmutablePropTypes","map","PropTypes","func","isRequired","bool","string","contains","inUse","available","WithRouterPropTypes","deleteConfirm","deleteMessage","redraftConfirm","redraftMessage","revealAll","hideAll","statusTitleWithAttachments","detailedStatus","replyConfirm","replyMessage","blockDomainConfirm","titleFromStatus","displayName","username","user","trim","attachmentCount","truncate","str","num","arr","Array","from","slice","join","Status","_this","fullscreen","defaultMediaVisibility","loadedStatusId","undefined","unfavourite","type","askReplyConfirmation","message","confirm","onConfirm","replyCompose","privacy","unreblog","shiftKey","boostModal","handleModalReblog","unbookmark","withRedraft","deleteModal","deleteStatus","editStatus","router","directCompose","mentionCompose","startTime","handleOpenMedia","initMuteModal","unmuteStatus","muteStatus","revealStatus","hideStatus","ancestorsIds","descendantsIds","statusIds","toJS","undoStatusTranslation","translateStatus","initBlockModal","initReport","unmuteAccount","unblockAccount","initDomainBlockModal","handleMoveUp","handleMoveDown","handleToggleHidden","handleToggleMediaVisibility","_selectChild","indexOf","statusNode","isFullscreen","prevRouterProps","_ref3","_location$state","_prevRouterProps$loca","location","mastodonModalKey","offsetTop","UNSAFE_componentWillMount","fetchStatus","params","componentDidMount","attachFullscreenListener","onFullScreenChange","_scrollStatusIntoView","UNSAFE_componentWillReceiveProps","nextProps","align_top","container","element","querySelectorAll","scrollTop","scrollIntoView","clientHeight","offsetHeight","focus","renderChildren","list","ancestors","StatusContainer","onMoveUp","onMoveDown","contextType","previousId","nextId","rootId","multiColumn","requestIdleCallback","_this$statusNode","_document$querySelect","offset","document","querySelector","getBoundingClientRect","bottom","scrollingElement","body","scrollBy","_prevProps$status","componentWillUnmount","detachFullscreenListener","descendants","isLoading","Column","LoadingIndicator","BundleColumnError","errorType","isLocal","isIndexable","handlers","moveUp","handleHotkeyMoveUp","moveDown","handleHotkeyMoveDown","handleHotkeyReply","handleHotkeyFavourite","boost","handleHotkeyBoost","handleHotkeyMention","openProfile","handleHotkeyOpenProfile","toggleHidden","handleHotkeyToggleHidden","toggleSensitive","handleHotkeyToggleSensitive","openMedia","handleHotkeyOpenMedia","bindToDocument","ColumnHeader","showBackButton","extraButton","handleToggleAll","VisibilityOffIcon","ScrollContainer","scrollKey","shouldUpdateScroll","setContainerRef","HotKeys","tabIndex","textForScreenReader","setStatusRef","handleDirectClick","handleUnmuteClick","handleUnblockClick","handleBlockDomainClick","handleUnblockDomainClick","handlePin","Helmet","content","identityContextPropShape","object","makeMapStateToProps","getStatus","makeGetStatus","getPictureInPicture","makeGetPictureInPicture","getAncestorsIds","createSelector","_","inReplyTos","Immutable","List","withMutations","mutable","unshift","getDescendantsIds","contextReplies","statuses","ids","pop","replies","reverse","forEach","insertAt","findIndex","idx","splice"],"mappings":"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","file":"js/features/status.js","sourcesContent":["import PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport classNames from 'classnames';\nimport { withRouter } from 'react-router-dom';\n\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport { connect } from 'react-redux';\n\nimport BookmarkIcon from '@/material-icons/400-24px/bookmark-fill.svg?react';\nimport BookmarkBorderIcon from '@/material-icons/400-24px/bookmark.svg?react';\nimport MoreHorizIcon from '@/material-icons/400-24px/more_horiz.svg?react';\nimport RepeatIcon from '@/material-icons/400-24px/repeat.svg?react';\nimport ReplyIcon from '@/material-icons/400-24px/reply.svg?react';\nimport ReplyAllIcon from '@/material-icons/400-24px/reply_all.svg?react';\nimport StarIcon from '@/material-icons/400-24px/star-fill.svg?react';\nimport StarBorderIcon from '@/material-icons/400-24px/star.svg?react';\nimport RepeatActiveIcon from '@/svg-icons/repeat_active.svg?react';\nimport RepeatDisabledIcon from '@/svg-icons/repeat_disabled.svg?react';\nimport RepeatPrivateIcon from '@/svg-icons/repeat_private.svg?react';\nimport RepeatPrivateActiveIcon from '@/svg-icons/repeat_private_active.svg?react';\nimport { identityContextPropShape, withIdentity } from 'mastodon/identity_context';\nimport { PERMISSION_MANAGE_USERS, PERMISSION_MANAGE_FEDERATION } from 'mastodon/permissions';\nimport { WithRouterPropTypes } from 'mastodon/utils/react_router';\n\nimport { IconButton } from '../../../components/icon_button';\nimport DropdownMenuContainer from '../../../containers/dropdown_menu_container';\nimport { me } from '../../../initial_state';\n\nconst messages = defineMessages({\n  delete: { id: 'status.delete', defaultMessage: 'Delete' },\n  redraft: { id: 'status.redraft', defaultMessage: 'Delete & re-draft' },\n  edit: { id: 'status.edit', defaultMessage: 'Edit' },\n  direct: { id: 'status.direct', defaultMessage: 'Privately mention @{name}' },\n  mention: { id: 'status.mention', defaultMessage: 'Mention @{name}' },\n  reply: { id: 'status.reply', defaultMessage: 'Reply' },\n  reblog: { id: 'status.reblog', defaultMessage: 'Boost' },\n  reblog_private: { id: 'status.reblog_private', defaultMessage: 'Boost with original visibility' },\n  cancel_reblog_private: { id: 'status.cancel_reblog_private', defaultMessage: 'Unboost' },\n  cannot_reblog: { id: 'status.cannot_reblog', defaultMessage: 'This post cannot be boosted' },\n  favourite: { id: 'status.favourite', defaultMessage: 'Favorite' },\n  bookmark: { id: 'status.bookmark', defaultMessage: 'Bookmark' },\n  more: { id: 'status.more', defaultMessage: 'More' },\n  mute: { id: 'status.mute', defaultMessage: 'Mute @{name}' },\n  muteConversation: { id: 'status.mute_conversation', defaultMessage: 'Mute conversation' },\n  unmuteConversation: { id: 'status.unmute_conversation', defaultMessage: 'Unmute conversation' },\n  block: { id: 'status.block', defaultMessage: 'Block @{name}' },\n  report: { id: 'status.report', defaultMessage: 'Report @{name}' },\n  share: { id: 'status.share', defaultMessage: 'Share' },\n  pin: { id: 'status.pin', defaultMessage: 'Pin on profile' },\n  unpin: { id: 'status.unpin', defaultMessage: 'Unpin from profile' },\n  embed: { id: 'status.embed', defaultMessage: 'Embed' },\n  admin_account: { id: 'status.admin_account', defaultMessage: 'Open moderation interface for @{name}' },\n  admin_status: { id: 'status.admin_status', defaultMessage: 'Open this post in the moderation interface' },\n  admin_domain: { id: 'status.admin_domain', defaultMessage: 'Open moderation interface for {domain}' },\n  copy: { id: 'status.copy', defaultMessage: 'Copy link to post' },\n  blockDomain: { id: 'account.block_domain', defaultMessage: 'Block domain {domain}' },\n  unblockDomain: { id: 'account.unblock_domain', defaultMessage: 'Unblock domain {domain}' },\n  unmute: { id: 'account.unmute', defaultMessage: 'Unmute @{name}' },\n  unblock: { id: 'account.unblock', defaultMessage: 'Unblock @{name}' },\n  openOriginalPage: { id: 'account.open_original_page', defaultMessage: 'Open original page' },\n});\n\nconst mapStateToProps = (state, { status }) => ({\n  relationship: state.getIn(['relationships', status.getIn(['account', 'id'])]),\n});\n\nclass ActionBar extends PureComponent {\n  static propTypes = {\n    identity: identityContextPropShape,\n    status: ImmutablePropTypes.map.isRequired,\n    relationship: ImmutablePropTypes.record,\n    onReply: PropTypes.func.isRequired,\n    onReblog: PropTypes.func.isRequired,\n    onFavourite: PropTypes.func.isRequired,\n    onBookmark: PropTypes.func.isRequired,\n    onDelete: PropTypes.func.isRequired,\n    onEdit: PropTypes.func.isRequired,\n    onDirect: PropTypes.func.isRequired,\n    onMention: PropTypes.func.isRequired,\n    onMute: PropTypes.func,\n    onUnmute: PropTypes.func,\n    onBlock: PropTypes.func,\n    onUnblock: PropTypes.func,\n    onBlockDomain: PropTypes.func,\n    onUnblockDomain: PropTypes.func,\n    onMuteConversation: PropTypes.func,\n    onReport: PropTypes.func,\n    onPin: PropTypes.func,\n    onEmbed: PropTypes.func,\n    intl: PropTypes.object.isRequired,\n    ...WithRouterPropTypes,\n  };\n\n  handleReplyClick = () => {\n    this.props.onReply(this.props.status);\n  };\n\n  handleReblogClick = (e) => {\n    this.props.onReblog(this.props.status, e);\n  };\n\n  handleFavouriteClick = () => {\n    this.props.onFavourite(this.props.status);\n  };\n\n  handleBookmarkClick = (e) => {\n    this.props.onBookmark(this.props.status, e);\n  };\n\n  handleDeleteClick = () => {\n    this.props.onDelete(this.props.status, this.props.history);\n  };\n\n  handleRedraftClick = () => {\n    this.props.onDelete(this.props.status, this.props.history, true);\n  };\n\n  handleEditClick = () => {\n    this.props.onEdit(this.props.status, this.props.history);\n  };\n\n  handleDirectClick = () => {\n    this.props.onDirect(this.props.status.get('account'), this.props.history);\n  };\n\n  handleMentionClick = () => {\n    this.props.onMention(this.props.status.get('account'), this.props.history);\n  };\n\n  handleMuteClick = () => {\n    const { status, relationship, onMute, onUnmute } = this.props;\n    const account = status.get('account');\n\n    if (relationship && relationship.get('muting')) {\n      onUnmute(account);\n    } else {\n      onMute(account);\n    }\n  };\n\n  handleBlockClick = () => {\n    const { status, relationship, onBlock, onUnblock } = this.props;\n    const account = status.get('account');\n\n    if (relationship && relationship.get('blocking')) {\n      onUnblock(account);\n    } else {\n      onBlock(status);\n    }\n  };\n\n  handleBlockDomain = () => {\n    const { status, onBlockDomain } = this.props;\n    const account = status.get('account');\n\n    onBlockDomain(account);\n  };\n\n  handleUnblockDomain = () => {\n    const { status, onUnblockDomain } = this.props;\n    const account = status.get('account');\n\n    onUnblockDomain(account.get('acct').split('@')[1]);\n  };\n\n  handleConversationMuteClick = () => {\n    this.props.onMuteConversation(this.props.status);\n  };\n\n  handleReport = () => {\n    this.props.onReport(this.props.status);\n  };\n\n  handlePinClick = () => {\n    this.props.onPin(this.props.status);\n  };\n\n  handleShare = () => {\n    navigator.share({\n      url: this.props.status.get('url'),\n    });\n  };\n\n  handleEmbed = () => {\n    this.props.onEmbed(this.props.status);\n  };\n\n  handleCopy = () => {\n    const url = this.props.status.get('url');\n    navigator.clipboard.writeText(url);\n  };\n\n  render () {\n    const { status, relationship, intl } = this.props;\n    const { signedIn, permissions } = this.props.identity;\n\n    const publicStatus       = ['public', 'unlisted'].includes(status.get('visibility'));\n    const pinnableStatus     = ['public', 'unlisted', 'private'].includes(status.get('visibility'));\n    const mutingConversation = status.get('muted');\n    const account            = status.get('account');\n    const writtenByMe        = status.getIn(['account', 'id']) === me;\n    const isRemote           = status.getIn(['account', 'username']) !== status.getIn(['account', 'acct']);\n\n    let menu = [];\n\n    if (publicStatus && isRemote) {\n      menu.push({ text: intl.formatMessage(messages.openOriginalPage), href: status.get('url') });\n    }\n\n    menu.push({ text: intl.formatMessage(messages.copy), action: this.handleCopy });\n\n    if (publicStatus && 'share' in navigator) {\n      menu.push({ text: intl.formatMessage(messages.share), action: this.handleShare });\n    }\n\n    if (publicStatus && (signedIn || !isRemote)) {\n      menu.push({ text: intl.formatMessage(messages.embed), action: this.handleEmbed });\n    }\n\n    if (signedIn) {\n      menu.push(null);\n\n      if (writtenByMe) {\n        if (pinnableStatus) {\n          menu.push({ text: intl.formatMessage(status.get('pinned') ? messages.unpin : messages.pin), action: this.handlePinClick });\n          menu.push(null);\n        }\n\n        menu.push({ text: intl.formatMessage(mutingConversation ? messages.unmuteConversation : messages.muteConversation), action: this.handleConversationMuteClick });\n        menu.push(null);\n        menu.push({ text: intl.formatMessage(messages.edit), action: this.handleEditClick });\n        menu.push({ text: intl.formatMessage(messages.delete), action: this.handleDeleteClick, dangerous: true });\n        menu.push({ text: intl.formatMessage(messages.redraft), action: this.handleRedraftClick, dangerous: true });\n      } else {\n        menu.push({ text: intl.formatMessage(messages.mention, { name: status.getIn(['account', 'username']) }), action: this.handleMentionClick });\n        menu.push(null);\n\n        if (relationship && relationship.get('muting')) {\n          menu.push({ text: intl.formatMessage(messages.unmute, { name: account.get('username') }), action: this.handleMuteClick });\n        } else {\n          menu.push({ text: intl.formatMessage(messages.mute, { name: account.get('username') }), action: this.handleMuteClick, dangerous: true });\n        }\n\n        if (relationship && relationship.get('blocking')) {\n          menu.push({ text: intl.formatMessage(messages.unblock, { name: account.get('username') }), action: this.handleBlockClick });\n        } else {\n          menu.push({ text: intl.formatMessage(messages.block, { name: account.get('username') }), action: this.handleBlockClick, dangerous: true });\n        }\n\n        menu.push({ text: intl.formatMessage(messages.report, { name: status.getIn(['account', 'username']) }), action: this.handleReport, dangerous: true });\n\n        if (account.get('acct') !== account.get('username')) {\n          const domain = account.get('acct').split('@')[1];\n\n          menu.push(null);\n\n          if (relationship && relationship.get('domain_blocking')) {\n            menu.push({ text: intl.formatMessage(messages.unblockDomain, { domain }), action: this.handleUnblockDomain });\n          } else {\n            menu.push({ text: intl.formatMessage(messages.blockDomain, { domain }), action: this.handleBlockDomain, dangerous: true });\n          }\n        }\n\n        if ((permissions & PERMISSION_MANAGE_USERS) === PERMISSION_MANAGE_USERS || (isRemote && (permissions & PERMISSION_MANAGE_FEDERATION) === PERMISSION_MANAGE_FEDERATION)) {\n          menu.push(null);\n          if ((permissions & PERMISSION_MANAGE_USERS) === PERMISSION_MANAGE_USERS) {\n            menu.push({ text: intl.formatMessage(messages.admin_account, { name: status.getIn(['account', 'username']) }), href: `/admin/accounts/${status.getIn(['account', 'id'])}` });\n            menu.push({ text: intl.formatMessage(messages.admin_status), href: `/admin/accounts/${status.getIn(['account', 'id'])}/statuses/${status.get('id')}` });\n          }\n          if (isRemote && (permissions & PERMISSION_MANAGE_FEDERATION) === PERMISSION_MANAGE_FEDERATION) {\n            const domain = account.get('acct').split('@')[1];\n            menu.push({ text: intl.formatMessage(messages.admin_domain, { domain: domain }), href: `/admin/instances/${domain}` });\n          }\n        }\n      }\n    }\n\n    let replyIcon;\n    let replyIconComponent;\n\n    if (status.get('in_reply_to_id', null) === null) {\n      replyIcon = 'reply';\n      replyIconComponent = ReplyIcon;\n    } else {\n      replyIcon = 'reply-all';\n      replyIconComponent = ReplyAllIcon;\n    }\n\n    const reblogPrivate = status.getIn(['account', 'id']) === me && status.get('visibility') === 'private';\n\n    let reblogTitle, reblogIconComponent;\n\n    if (status.get('reblogged')) {\n      reblogTitle = intl.formatMessage(messages.cancel_reblog_private);\n      reblogIconComponent = publicStatus ? RepeatActiveIcon : RepeatPrivateActiveIcon;\n    } else if (publicStatus) {\n      reblogTitle = intl.formatMessage(messages.reblog);\n      reblogIconComponent = RepeatIcon;\n    } else if (reblogPrivate) {\n      reblogTitle = intl.formatMessage(messages.reblog_private);\n      reblogIconComponent = RepeatPrivateIcon;\n    } else {\n      reblogTitle = intl.formatMessage(messages.cannot_reblog);\n      reblogIconComponent = RepeatDisabledIcon;\n    }\n\n    return (\n      <div className='detailed-status__action-bar'>\n        <div className='detailed-status__button'><IconButton title={intl.formatMessage(messages.reply)} icon={status.get('in_reply_to_account_id') === status.getIn(['account', 'id']) ? 'reply' : replyIcon} iconComponent={status.get('in_reply_to_account_id') === status.getIn(['account', 'id']) ? ReplyIcon : replyIconComponent}  onClick={this.handleReplyClick} /></div>\n        <div className='detailed-status__button'><IconButton className={classNames({ reblogPrivate })} disabled={!publicStatus && !reblogPrivate} active={status.get('reblogged')} title={reblogTitle} icon='retweet' iconComponent={reblogIconComponent} onClick={this.handleReblogClick} /></div>\n        <div className='detailed-status__button'><IconButton className='star-icon' animate active={status.get('favourited')} title={intl.formatMessage(messages.favourite)} icon='star' iconComponent={status.get('favourited') ? StarIcon : StarBorderIcon} onClick={this.handleFavouriteClick} /></div>\n        <div className='detailed-status__button'><IconButton className='bookmark-icon' disabled={!signedIn} active={status.get('bookmarked')} title={intl.formatMessage(messages.bookmark)} icon='bookmark' iconComponent={status.get('bookmarked') ? BookmarkIcon : BookmarkBorderIcon} onClick={this.handleBookmarkClick} /></div>\n\n        <div className='detailed-status__action-bar-dropdown'>\n          <DropdownMenuContainer icon='ellipsis-h' iconComponent={MoreHorizIcon} status={status} items={menu} direction='left' title={intl.formatMessage(messages.more)} />\n        </div>\n      </div>\n    );\n  }\n\n}\n\nexport default withRouter(connect(mapStateToProps)(withIdentity(injectIntl(ActionBar))));\n","import { connect } from 'react-redux';\n\nimport { openDropdownMenu, closeDropdownMenu } from 'mastodon/actions/dropdown_menu';\nimport { fetchHistory } from 'mastodon/actions/history';\nimport DropdownMenu from 'mastodon/components/dropdown_menu';\n\n/**\n *\n * @param {import('mastodon/store').RootState} state\n * @param {*} props\n */\nconst mapStateToProps = (state, { statusId }) => ({\n  openDropdownId: state.dropdownMenu.openId,\n  openedViaKeyboard: state.dropdownMenu.keyboard,\n  items: state.getIn(['history', statusId, 'items']),\n  loading: state.getIn(['history', statusId, 'loading']),\n});\n\nconst mapDispatchToProps = (dispatch, { statusId }) => ({\n\n  onOpen (id, onItemClick, keyboard) {\n    dispatch(fetchHistory(statusId));\n    dispatch(openDropdownMenu({ id, keyboard }));\n  },\n\n  onClose (id) {\n    dispatch(closeDropdownMenu({ id }));\n  },\n\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DropdownMenu);\n","import PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nimport { FormattedMessage, injectIntl } from 'react-intl';\n\nimport { connect } from 'react-redux';\n\nimport { openModal } from 'mastodon/actions/modal';\nimport InlineAccount from 'mastodon/components/inline_account';\nimport { RelativeTimestamp } from 'mastodon/components/relative_timestamp';\n\nimport DropdownMenu from './containers/dropdown_menu_container';\n\nconst mapDispatchToProps = (dispatch, { statusId }) => ({\n\n  onItemClick (index) {\n    dispatch(openModal({\n      modalType: 'COMPARE_HISTORY',\n      modalProps: { index, statusId },\n    }));\n  },\n\n});\n\nclass EditedTimestamp extends PureComponent {\n\n  static propTypes = {\n    statusId: PropTypes.string.isRequired,\n    timestamp: PropTypes.string.isRequired,\n    intl: PropTypes.object.isRequired,\n    onItemClick: PropTypes.func.isRequired,\n  };\n\n  handleItemClick = (item, i) => {\n    const { onItemClick } = this.props;\n    onItemClick(i);\n  };\n\n  renderHeader = items => {\n    return (\n      <FormattedMessage id='status.edited_x_times' defaultMessage='Edited {count, plural, one {# time} other {# times}}' values={{ count: items.size - 1 }} />\n    );\n  };\n\n  renderItem = (item, index, { onClick, onKeyPress }) => {\n    const formattedDate = <RelativeTimestamp timestamp={item.get('created_at')} short={false} />;\n    const formattedName = <InlineAccount accountId={item.get('account')} />;\n\n    const label = item.get('original') ? (\n      <FormattedMessage id='status.history.created' defaultMessage='{name} created {date}' values={{ name: formattedName, date: formattedDate }} />\n    ) : (\n      <FormattedMessage id='status.history.edited' defaultMessage='{name} edited {date}' values={{ name: formattedName, date: formattedDate }} />\n    );\n\n    return (\n      <li className='dropdown-menu__item edited-timestamp__history__item' key={item.get('created_at')}>\n        <button data-index={index} onClick={onClick} onKeyPress={onKeyPress}>{label}</button>\n      </li>\n    );\n  };\n\n  render () {\n    const { timestamp, intl, statusId } = this.props;\n\n    return (\n      <DropdownMenu statusId={statusId} renderItem={this.renderItem} scrollable renderHeader={this.renderHeader} onItemClick={this.handleItemClick}>\n        <button className='dropdown-menu__text-button'>\n          <FormattedMessage id='status.edited' defaultMessage='Edited {date}' values={{ date: <span className='animated-number'>{intl.formatDate(timestamp, { month: 'short', day: '2-digit', hour: '2-digit', minute: '2-digit' })}</span> }} />\n        </button>\n      </DropdownMenu>\n    );\n  }\n\n}\n\nexport default connect(null, mapDispatchToProps)(injectIntl(EditedTimestamp));\n","import PropTypes from 'prop-types';\n\nimport { FormattedDate, FormattedMessage } from 'react-intl';\n\nimport classNames from 'classnames';\nimport { Link, withRouter } from 'react-router-dom';\n\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\n\nimport AlternateEmailIcon from '@/material-icons/400-24px/alternate_email.svg?react';\nimport { AnimatedNumber } from 'mastodon/components/animated_number';\nimport EditedTimestamp from 'mastodon/components/edited_timestamp';\nimport { getHashtagBarForStatus } from 'mastodon/components/hashtag_bar';\nimport { Icon }  from 'mastodon/components/icon';\nimport PictureInPicturePlaceholder from 'mastodon/components/picture_in_picture_placeholder';\nimport { VisibilityIcon } from 'mastodon/components/visibility_icon';\nimport { WithRouterPropTypes } from 'mastodon/utils/react_router';\n\nimport { Avatar } from '../../../components/avatar';\nimport { DisplayName } from '../../../components/display_name';\nimport MediaGallery from '../../../components/media_gallery';\nimport StatusContent from '../../../components/status_content';\nimport Audio from '../../audio';\nimport scheduleIdleTask from '../../ui/util/schedule_idle_task';\nimport Video from '../../video';\n\nimport Card from './card';\n\nclass DetailedStatus extends ImmutablePureComponent {\n\n  static propTypes = {\n    status: ImmutablePropTypes.map,\n    onOpenMedia: PropTypes.func.isRequired,\n    onOpenVideo: PropTypes.func.isRequired,\n    onToggleHidden: PropTypes.func.isRequired,\n    onTranslate: PropTypes.func.isRequired,\n    measureHeight: PropTypes.bool,\n    onHeightChange: PropTypes.func,\n    domain: PropTypes.string.isRequired,\n    compact: PropTypes.bool,\n    showMedia: PropTypes.bool,\n    pictureInPicture: ImmutablePropTypes.contains({\n      inUse: PropTypes.bool,\n      available: PropTypes.bool,\n    }),\n    onToggleMediaVisibility: PropTypes.func,\n    ...WithRouterPropTypes,\n  };\n\n  state = {\n    height: null,\n  };\n\n  handleAccountClick = (e) => {\n    if (e.button === 0 && !(e.ctrlKey || e.metaKey) && this.props.history) {\n      e.preventDefault();\n      this.props.history.push(`/@${this.props.status.getIn(['account', 'acct'])}`);\n    }\n\n    e.stopPropagation();\n  };\n\n  handleOpenVideo = (options) => {\n    this.props.onOpenVideo(this.props.status.getIn(['media_attachments', 0]), options);\n  };\n\n  handleExpandedToggle = () => {\n    this.props.onToggleHidden(this.props.status);\n  };\n\n  _measureHeight (heightJustChanged) {\n    if (this.props.measureHeight && this.node) {\n      scheduleIdleTask(() => this.node && this.setState({ height: Math.ceil(this.node.scrollHeight) + 1 }));\n\n      if (this.props.onHeightChange && heightJustChanged) {\n        this.props.onHeightChange();\n      }\n    }\n  }\n\n  setRef = c => {\n    this.node = c;\n    this._measureHeight();\n  };\n\n  componentDidUpdate (prevProps, prevState) {\n    this._measureHeight(prevState.height !== this.state.height);\n  }\n\n  handleModalLink = e => {\n    e.preventDefault();\n\n    let href;\n\n    if (e.target.nodeName !== 'A') {\n      href = e.target.parentNode.href;\n    } else {\n      href = e.target.href;\n    }\n\n    window.open(href, 'mastodon-intent', 'width=445,height=600,resizable=no,menubar=no,status=no,scrollbars=yes');\n  };\n\n  handleTranslate = () => {\n    const { onTranslate, status } = this.props;\n    onTranslate(status);\n  };\n\n  _properStatus () {\n    const { status } = this.props;\n\n    if (status.get('reblog', null) !== null && typeof status.get('reblog') === 'object') {\n      return status.get('reblog');\n    } else {\n      return status;\n    }\n  }\n\n  getAttachmentAspectRatio () {\n    const attachments = this._properStatus().get('media_attachments');\n\n    if (attachments.getIn([0, 'type']) === 'video') {\n      return `${attachments.getIn([0, 'meta', 'original', 'width'])} / ${attachments.getIn([0, 'meta', 'original', 'height'])}`;\n    } else if (attachments.getIn([0, 'type']) === 'audio') {\n      return '16 / 9';\n    } else {\n      return (attachments.size === 1 && attachments.getIn([0, 'meta', 'small', 'aspect'])) ? attachments.getIn([0, 'meta', 'small', 'aspect']) : '3 / 2';\n    }\n  }\n\n  render () {\n    const status = this._properStatus();\n    const outerStyle = { boxSizing: 'border-box' };\n    const { compact, pictureInPicture } = this.props;\n\n    if (!status) {\n      return null;\n    }\n\n    let media           = '';\n    let applicationLink = '';\n    let reblogLink = '';\n    let favouriteLink = '';\n\n    if (this.props.measureHeight) {\n      outerStyle.height = `${this.state.height}px`;\n    }\n\n    const language = status.getIn(['translation', 'language']) || status.get('language');\n\n    if (pictureInPicture.get('inUse')) {\n      media = <PictureInPicturePlaceholder aspectRatio={this.getAttachmentAspectRatio()} />;\n    } else if (status.get('media_attachments').size > 0) {\n      if (status.getIn(['media_attachments', 0, 'type']) === 'audio') {\n        const attachment = status.getIn(['media_attachments', 0]);\n        const description = attachment.getIn(['translation', 'description']) || attachment.get('description');\n\n        media = (\n          <Audio\n            src={attachment.get('url')}\n            alt={description}\n            lang={language}\n            duration={attachment.getIn(['meta', 'original', 'duration'], 0)}\n            poster={attachment.get('preview_url') || status.getIn(['account', 'avatar_static'])}\n            backgroundColor={attachment.getIn(['meta', 'colors', 'background'])}\n            foregroundColor={attachment.getIn(['meta', 'colors', 'foreground'])}\n            accentColor={attachment.getIn(['meta', 'colors', 'accent'])}\n            sensitive={status.get('sensitive')}\n            visible={this.props.showMedia}\n            blurhash={attachment.get('blurhash')}\n            height={150}\n            onToggleVisibility={this.props.onToggleMediaVisibility}\n          />\n        );\n      } else if (status.getIn(['media_attachments', 0, 'type']) === 'video') {\n        const attachment = status.getIn(['media_attachments', 0]);\n        const description = attachment.getIn(['translation', 'description']) || attachment.get('description');\n\n        media = (\n          <Video\n            preview={attachment.get('preview_url')}\n            frameRate={attachment.getIn(['meta', 'original', 'frame_rate'])}\n            aspectRatio={`${attachment.getIn(['meta', 'original', 'width'])} / ${attachment.getIn(['meta', 'original', 'height'])}`}\n            blurhash={attachment.get('blurhash')}\n            src={attachment.get('url')}\n            alt={description}\n            lang={language}\n            width={300}\n            height={150}\n            onOpenVideo={this.handleOpenVideo}\n            sensitive={status.get('sensitive')}\n            visible={this.props.showMedia}\n            onToggleVisibility={this.props.onToggleMediaVisibility}\n          />\n        );\n      } else {\n        media = (\n          <MediaGallery\n            standalone\n            sensitive={status.get('sensitive')}\n            media={status.get('media_attachments')}\n            lang={language}\n            height={300}\n            onOpenMedia={this.props.onOpenMedia}\n            visible={this.props.showMedia}\n            onToggleVisibility={this.props.onToggleMediaVisibility}\n          />\n        );\n      }\n    } else if (status.get('spoiler_text').length === 0) {\n      media = <Card sensitive={status.get('sensitive')} onOpenMedia={this.props.onOpenMedia} card={status.get('card', null)} />;\n    }\n\n    if (status.get('application')) {\n      applicationLink = <>·<a className='detailed-status__application' href={status.getIn(['application', 'website'])} target='_blank' rel='noopener noreferrer'>{status.getIn(['application', 'name'])}</a></>;\n    }\n\n    const visibilityLink = <>·<VisibilityIcon visibility={status.get('visibility')} /></>;\n\n    if (['private', 'direct'].includes(status.get('visibility'))) {\n      reblogLink = '';\n    } else if (this.props.history) {\n      reblogLink = (\n        <Link to={`/@${status.getIn(['account', 'acct'])}/${status.get('id')}/reblogs`} className='detailed-status__link'>\n          <span className='detailed-status__reblogs'>\n            <AnimatedNumber value={status.get('reblogs_count')} />\n          </span>\n          <FormattedMessage id='status.reblogs' defaultMessage='{count, plural, one {boost} other {boosts}}' values={{ count: status.get('reblogs_count') }} />\n        </Link>\n      );\n    } else {\n      reblogLink = (\n        <a href={`/interact/${status.get('id')}?type=reblog`} className='detailed-status__link' onClick={this.handleModalLink}>\n          <span className='detailed-status__reblogs'>\n            <AnimatedNumber value={status.get('reblogs_count')} />\n          </span>\n          <FormattedMessage id='status.reblogs' defaultMessage='{count, plural, one {boost} other {boosts}}' values={{ count: status.get('reblogs_count') }} />\n        </a>\n      );\n    }\n\n    if (this.props.history) {\n      favouriteLink = (\n        <Link to={`/@${status.getIn(['account', 'acct'])}/${status.get('id')}/favourites`} className='detailed-status__link'>\n          <span className='detailed-status__favorites'>\n            <AnimatedNumber value={status.get('favourites_count')} />\n          </span>\n          <FormattedMessage id='status.favourites' defaultMessage='{count, plural, one {favorite} other {favorites}}' values={{ count: status.get('favourites_count') }} />\n        </Link>\n      );\n    } else {\n      favouriteLink = (\n        <a href={`/interact/${status.get('id')}?type=favourite`} className='detailed-status__link' onClick={this.handleModalLink}>\n          <span className='detailed-status__favorites'>\n            <AnimatedNumber value={status.get('favourites_count')} />\n          </span>\n          <FormattedMessage id='status.favourites' defaultMessage='{count, plural, one {favorite} other {favorites}}' values={{ count: status.get('favourites_count') }} />\n        </a>\n      );\n    }\n\n    const {statusContentProps, hashtagBar} = getHashtagBarForStatus(status);\n    const expanded = !status.get('hidden') || status.get('spoiler_text').length === 0;\n\n    return (\n      <div style={outerStyle}>\n        <div ref={this.setRef} className={classNames('detailed-status', { compact })}>\n          {status.get('visibility') === 'direct' && (\n            <div className='status__prepend'>\n              <div className='status__prepend-icon-wrapper'><Icon id='at' icon={AlternateEmailIcon} className='status__prepend-icon' /></div>\n              <FormattedMessage id='status.direct_indicator' defaultMessage='Private mention' />\n            </div>\n          )}\n          <a href={`/@${status.getIn(['account', 'acct'])}`} data-hover-card-account={status.getIn(['account', 'id'])} onClick={this.handleAccountClick} className='detailed-status__display-name'>\n            <div className='detailed-status__display-avatar'><Avatar account={status.get('account')} size={46} /></div>\n            <DisplayName account={status.get('account')} localDomain={this.props.domain} />\n          </a>\n\n          <StatusContent\n            status={status}\n            expanded={!status.get('hidden')}\n            onExpandedToggle={this.handleExpandedToggle}\n            onTranslate={this.handleTranslate}\n            {...statusContentProps}\n          />\n\n          {media}\n\n          {expanded && hashtagBar}\n\n          <div className='detailed-status__meta'>\n            <div className='detailed-status__meta__line'>\n              <a className='detailed-status__datetime' href={`/@${status.getIn(['account', 'acct'])}/${status.get('id')}`} target='_blank' rel='noopener noreferrer'>\n                <FormattedDate value={new Date(status.get('created_at'))} year='numeric' month='short' day='2-digit' hour='2-digit' minute='2-digit' />\n              </a>\n\n              {visibilityLink}\n\n              {applicationLink}\n            </div>\n\n            {status.get('edited_at') && <div className='detailed-status__meta__line'><EditedTimestamp statusId={status.get('id')} timestamp={status.get('edited_at')} /></div>}\n\n            <div className='detailed-status__meta__line'>\n              {reblogLink}\n              {reblogLink && <>·</>}\n              {favouriteLink}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n}\n\nexport default withRouter(DetailedStatus);\n","import PropTypes from 'prop-types';\n\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport classNames from 'classnames';\nimport { Helmet } from 'react-helmet';\nimport { withRouter } from 'react-router-dom';\n\nimport { createSelector } from '@reduxjs/toolkit';\nimport Immutable from 'immutable';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport { connect } from 'react-redux';\n\nimport { HotKeys } from 'react-hotkeys';\n\nimport VisibilityIcon from '@/material-icons/400-24px/visibility.svg?react';\nimport VisibilityOffIcon from '@/material-icons/400-24px/visibility_off.svg?react';\nimport { Icon }  from 'mastodon/components/icon';\nimport { LoadingIndicator } from 'mastodon/components/loading_indicator';\nimport ScrollContainer from 'mastodon/containers/scroll_container';\nimport BundleColumnError from 'mastodon/features/ui/components/bundle_column_error';\nimport { identityContextPropShape, withIdentity } from 'mastodon/identity_context';\nimport { WithRouterPropTypes } from 'mastodon/utils/react_router';\n\nimport {\n  unblockAccount,\n  unmuteAccount,\n} from '../../actions/accounts';\nimport { initBlockModal } from '../../actions/blocks';\nimport {\n  replyCompose,\n  mentionCompose,\n  directCompose,\n} from '../../actions/compose';\nimport {\n  initDomainBlockModal,\n  unblockDomain,\n} from '../../actions/domain_blocks';\nimport {\n  favourite,\n  unfavourite,\n  bookmark,\n  unbookmark,\n  reblog,\n  unreblog,\n  pin,\n  unpin,\n} from '../../actions/interactions';\nimport { openModal } from '../../actions/modal';\nimport { initMuteModal } from '../../actions/mutes';\nimport { initReport } from '../../actions/reports';\nimport {\n  fetchStatus,\n  muteStatus,\n  unmuteStatus,\n  deleteStatus,\n  editStatus,\n  hideStatus,\n  revealStatus,\n  translateStatus,\n  undoStatusTranslation,\n} from '../../actions/statuses';\nimport ColumnHeader from '../../components/column_header';\nimport { textForScreenReader, defaultMediaVisibility } from '../../components/status';\nimport StatusContainer from '../../containers/status_container';\nimport { boostModal, deleteModal } from '../../initial_state';\nimport { makeGetStatus, makeGetPictureInPicture } from '../../selectors';\nimport Column from '../ui/components/column';\nimport { attachFullscreenListener, detachFullscreenListener, isFullscreen } from '../ui/util/fullscreen';\n\nimport ActionBar from './components/action_bar';\nimport DetailedStatus from './components/detailed_status';\n\n\nconst messages = defineMessages({\n  deleteConfirm: { id: 'confirmations.delete.confirm', defaultMessage: 'Delete' },\n  deleteMessage: { id: 'confirmations.delete.message', defaultMessage: 'Are you sure you want to delete this status?' },\n  redraftConfirm: { id: 'confirmations.redraft.confirm', defaultMessage: 'Delete & redraft' },\n  redraftMessage: { id: 'confirmations.redraft.message', defaultMessage: 'Are you sure you want to delete this status and re-draft it? Favorites and boosts will be lost, and replies to the original post will be orphaned.' },\n  revealAll: { id: 'status.show_more_all', defaultMessage: 'Show more for all' },\n  hideAll: { id: 'status.show_less_all', defaultMessage: 'Show less for all' },\n  statusTitleWithAttachments: { id: 'status.title.with_attachments', defaultMessage: '{user} posted {attachmentCount, plural, one {an attachment} other {# attachments}}' },\n  detailedStatus: { id: 'status.detailed_status', defaultMessage: 'Detailed conversation view' },\n  replyConfirm: { id: 'confirmations.reply.confirm', defaultMessage: 'Reply' },\n  replyMessage: { id: 'confirmations.reply.message', defaultMessage: 'Replying now will overwrite the message you are currently composing. Are you sure you want to proceed?' },\n  blockDomainConfirm: { id: 'confirmations.domain_block.confirm', defaultMessage: 'Block entire domain' },\n});\n\nconst makeMapStateToProps = () => {\n  const getStatus = makeGetStatus();\n  const getPictureInPicture = makeGetPictureInPicture();\n\n  const getAncestorsIds = createSelector([\n    (_, { id }) => id,\n    state => state.getIn(['contexts', 'inReplyTos']),\n  ], (statusId, inReplyTos) => {\n    let ancestorsIds = Immutable.List();\n    ancestorsIds = ancestorsIds.withMutations(mutable => {\n      let id = statusId;\n\n      while (id && !mutable.includes(id)) {\n        mutable.unshift(id);\n        id = inReplyTos.get(id);\n      }\n    });\n\n    return ancestorsIds;\n  });\n\n  const getDescendantsIds = createSelector([\n    (_, { id }) => id,\n    state => state.getIn(['contexts', 'replies']),\n    state => state.get('statuses'),\n  ], (statusId, contextReplies, statuses) => {\n    let descendantsIds = [];\n    const ids = [statusId];\n\n    while (ids.length > 0) {\n      let id        = ids.pop();\n      const replies = contextReplies.get(id);\n\n      if (statusId !== id) {\n        descendantsIds.push(id);\n      }\n\n      if (replies) {\n        replies.reverse().forEach(reply => {\n          if (!ids.includes(reply) && !descendantsIds.includes(reply) && statusId !== reply) ids.push(reply);\n        });\n      }\n    }\n\n    let insertAt = descendantsIds.findIndex((id) => statuses.get(id).get('in_reply_to_account_id') !== statuses.get(id).get('account'));\n    if (insertAt !== -1) {\n      descendantsIds.forEach((id, idx) => {\n        if (idx > insertAt && statuses.get(id).get('in_reply_to_account_id') === statuses.get(id).get('account')) {\n          descendantsIds.splice(idx, 1);\n          descendantsIds.splice(insertAt, 0, id);\n          insertAt += 1;\n        }\n      });\n    }\n\n    return Immutable.List(descendantsIds);\n  });\n\n  const mapStateToProps = (state, props) => {\n    const status = getStatus(state, { id: props.params.statusId });\n\n    let ancestorsIds   = Immutable.List();\n    let descendantsIds = Immutable.List();\n\n    if (status) {\n      ancestorsIds   = getAncestorsIds(state, { id: status.get('in_reply_to_id') });\n      descendantsIds = getDescendantsIds(state, { id: status.get('id') });\n    }\n\n    return {\n      isLoading: state.getIn(['statuses', props.params.statusId, 'isLoading']),\n      status,\n      ancestorsIds,\n      descendantsIds,\n      askReplyConfirmation: state.getIn(['compose', 'text']).trim().length !== 0,\n      domain: state.getIn(['meta', 'domain']),\n      pictureInPicture: getPictureInPicture(state, { id: props.params.statusId }),\n    };\n  };\n\n  return mapStateToProps;\n};\n\nconst truncate = (str, num) => {\n  const arr = Array.from(str);\n  if (arr.length > num) {\n    return arr.slice(0, num).join('') + '…';\n  } else {\n    return str;\n  }\n};\n\nconst titleFromStatus = (intl, status) => {\n  const displayName = status.getIn(['account', 'display_name']);\n  const username = status.getIn(['account', 'username']);\n  const user = displayName.trim().length === 0 ? username : displayName;\n  const text = status.get('search_index');\n  const attachmentCount = status.get('media_attachments').size;\n\n  return text ? `${user}: \"${truncate(text, 30)}\"` : intl.formatMessage(messages.statusTitleWithAttachments, { user, attachmentCount });\n};\n\nclass Status extends ImmutablePureComponent {\n  static propTypes = {\n    identity: identityContextPropShape,\n    params: PropTypes.object.isRequired,\n    dispatch: PropTypes.func.isRequired,\n    status: ImmutablePropTypes.map,\n    isLoading: PropTypes.bool,\n    ancestorsIds: ImmutablePropTypes.list.isRequired,\n    descendantsIds: ImmutablePropTypes.list.isRequired,\n    intl: PropTypes.object.isRequired,\n    askReplyConfirmation: PropTypes.bool,\n    multiColumn: PropTypes.bool,\n    domain: PropTypes.string.isRequired,\n    pictureInPicture: ImmutablePropTypes.contains({\n      inUse: PropTypes.bool,\n      available: PropTypes.bool,\n    }),\n    ...WithRouterPropTypes\n  };\n\n  state = {\n    fullscreen: false,\n    showMedia: defaultMediaVisibility(this.props.status),\n    loadedStatusId: undefined,\n  };\n\n  UNSAFE_componentWillMount () {\n    this.props.dispatch(fetchStatus(this.props.params.statusId));\n  }\n\n  componentDidMount () {\n    attachFullscreenListener(this.onFullScreenChange);\n\n    this._scrollStatusIntoView();\n  }\n\n  UNSAFE_componentWillReceiveProps (nextProps) {\n    if (nextProps.params.statusId !== this.props.params.statusId && nextProps.params.statusId) {\n      this.props.dispatch(fetchStatus(nextProps.params.statusId));\n    }\n\n    if (nextProps.status && nextProps.status.get('id') !== this.state.loadedStatusId) {\n      this.setState({ showMedia: defaultMediaVisibility(nextProps.status), loadedStatusId: nextProps.status.get('id') });\n    }\n  }\n\n  handleToggleMediaVisibility = () => {\n    this.setState({ showMedia: !this.state.showMedia });\n  };\n\n  handleFavouriteClick = (status) => {\n    const { dispatch } = this.props;\n    const { signedIn } = this.props.identity;\n\n    if (signedIn) {\n      if (status.get('favourited')) {\n        dispatch(unfavourite(status));\n      } else {\n        dispatch(favourite(status));\n      }\n    } else {\n      dispatch(openModal({\n        modalType: 'INTERACTION',\n        modalProps: {\n          type: 'favourite',\n          accountId: status.getIn(['account', 'id']),\n          url: status.get('uri'),\n        },\n      }));\n    }\n  };\n\n  handlePin = (status) => {\n    if (status.get('pinned')) {\n      this.props.dispatch(unpin(status));\n    } else {\n      this.props.dispatch(pin(status));\n    }\n  };\n\n  handleReplyClick = (status) => {\n    const { askReplyConfirmation, dispatch, intl } = this.props;\n    const { signedIn } = this.props.identity;\n\n    if (signedIn) {\n      if (askReplyConfirmation) {\n        dispatch(openModal({\n          modalType: 'CONFIRM',\n          modalProps: {\n            message: intl.formatMessage(messages.replyMessage),\n            confirm: intl.formatMessage(messages.replyConfirm),\n            onConfirm: () => dispatch(replyCompose(status, this.props.history)),\n          },\n        }));\n      } else {\n        dispatch(replyCompose(status, this.props.history));\n      }\n    } else {\n      dispatch(openModal({\n        modalType: 'INTERACTION',\n        modalProps: {\n          type: 'reply',\n          accountId: status.getIn(['account', 'id']),\n          url: status.get('uri'),\n        },\n      }));\n    }\n  };\n\n  handleModalReblog = (status, privacy) => {\n    this.props.dispatch(reblog({ statusId: status.get('id'), visibility: privacy }));\n  };\n\n  handleReblogClick = (status, e) => {\n    const { dispatch } = this.props;\n    const { signedIn } = this.props.identity;\n\n    if (signedIn) {\n      if (status.get('reblogged')) {\n        dispatch(unreblog({ statusId: status.get('id') }));\n      } else {\n        if ((e && e.shiftKey) || !boostModal) {\n          this.handleModalReblog(status);\n        } else {\n          dispatch(openModal({ modalType: 'BOOST', modalProps: { status, onReblog: this.handleModalReblog } }));\n        }\n      }\n    } else {\n      dispatch(openModal({\n        modalType: 'INTERACTION',\n        modalProps: {\n          type: 'reblog',\n          accountId: status.getIn(['account', 'id']),\n          url: status.get('uri'),\n        },\n      }));\n    }\n  };\n\n  handleBookmarkClick = (status) => {\n    if (status.get('bookmarked')) {\n      this.props.dispatch(unbookmark(status));\n    } else {\n      this.props.dispatch(bookmark(status));\n    }\n  };\n\n  handleDeleteClick = (status, history, withRedraft = false) => {\n    const { dispatch, intl } = this.props;\n\n    if (!deleteModal) {\n      dispatch(deleteStatus(status.get('id'), history, withRedraft));\n    } else {\n      dispatch(openModal({\n        modalType: 'CONFIRM',\n        modalProps: {\n          message: intl.formatMessage(withRedraft ? messages.redraftMessage : messages.deleteMessage),\n          confirm: intl.formatMessage(withRedraft ? messages.redraftConfirm : messages.deleteConfirm),\n          onConfirm: () => dispatch(deleteStatus(status.get('id'), history, withRedraft)),\n        },\n      }));\n    }\n  };\n\n  handleEditClick = (status, history) => {\n    this.props.dispatch(editStatus(status.get('id'), history));\n  };\n\n  handleDirectClick = (account, router) => {\n    this.props.dispatch(directCompose(account, router));\n  };\n\n  handleMentionClick = (account, router) => {\n    this.props.dispatch(mentionCompose(account, router));\n  };\n\n  handleOpenMedia = (media, index, lang) => {\n    this.props.dispatch(openModal({\n      modalType: 'MEDIA',\n      modalProps: { statusId: this.props.status.get('id'), media, index, lang },\n    }));\n  };\n\n  handleOpenVideo = (media, lang, options) => {\n    this.props.dispatch(openModal({\n      modalType: 'VIDEO',\n      modalProps: { statusId: this.props.status.get('id'), media, lang, options },\n    }));\n  };\n\n  handleHotkeyOpenMedia = e => {\n    const { status } = this.props;\n\n    e.preventDefault();\n\n    if (status.get('media_attachments').size > 0) {\n      if (status.getIn(['media_attachments', 0, 'type']) === 'video') {\n        this.handleOpenVideo(status.getIn(['media_attachments', 0]), { startTime: 0 });\n      } else {\n        this.handleOpenMedia(status.get('media_attachments'), 0);\n      }\n    }\n  };\n\n  handleMuteClick = (account) => {\n    this.props.dispatch(initMuteModal(account));\n  };\n\n  handleConversationMuteClick = (status) => {\n    if (status.get('muted')) {\n      this.props.dispatch(unmuteStatus(status.get('id')));\n    } else {\n      this.props.dispatch(muteStatus(status.get('id')));\n    }\n  };\n\n  handleToggleHidden = (status) => {\n    if (status.get('hidden')) {\n      this.props.dispatch(revealStatus(status.get('id')));\n    } else {\n      this.props.dispatch(hideStatus(status.get('id')));\n    }\n  };\n\n  handleToggleAll = () => {\n    const { status, ancestorsIds, descendantsIds } = this.props;\n    const statusIds = [status.get('id')].concat(ancestorsIds.toJS(), descendantsIds.toJS());\n\n    if (status.get('hidden')) {\n      this.props.dispatch(revealStatus(statusIds));\n    } else {\n      this.props.dispatch(hideStatus(statusIds));\n    }\n  };\n\n  handleTranslate = status => {\n    const { dispatch } = this.props;\n\n    if (status.get('translation')) {\n      dispatch(undoStatusTranslation(status.get('id'), status.get('poll')));\n    } else {\n      dispatch(translateStatus(status.get('id')));\n    }\n  };\n\n  handleBlockClick = (status) => {\n    const { dispatch } = this.props;\n    const account = status.get('account');\n    dispatch(initBlockModal(account));\n  };\n\n  handleReport = (status) => {\n    this.props.dispatch(initReport(status.get('account'), status));\n  };\n\n  handleEmbed = (status) => {\n    this.props.dispatch(openModal({\n      modalType: 'EMBED',\n      modalProps: { id: status.get('id') },\n    }));\n  };\n\n  handleUnmuteClick = account => {\n    this.props.dispatch(unmuteAccount(account.get('id')));\n  };\n\n  handleUnblockClick = account => {\n    this.props.dispatch(unblockAccount(account.get('id')));\n  };\n\n  handleBlockDomainClick = account => {\n    this.props.dispatch(initDomainBlockModal(account));\n  };\n\n  handleUnblockDomainClick = domain => {\n    this.props.dispatch(unblockDomain(domain));\n  };\n\n\n  handleHotkeyMoveUp = () => {\n    this.handleMoveUp(this.props.status.get('id'));\n  };\n\n  handleHotkeyMoveDown = () => {\n    this.handleMoveDown(this.props.status.get('id'));\n  };\n\n  handleHotkeyReply = e => {\n    e.preventDefault();\n    this.handleReplyClick(this.props.status);\n  };\n\n  handleHotkeyFavourite = () => {\n    this.handleFavouriteClick(this.props.status);\n  };\n\n  handleHotkeyBoost = () => {\n    this.handleReblogClick(this.props.status);\n  };\n\n  handleHotkeyMention = e => {\n    e.preventDefault();\n    this.handleMentionClick(this.props.status.get('account'));\n  };\n\n  handleHotkeyOpenProfile = () => {\n    this.props.history.push(`/@${this.props.status.getIn(['account', 'acct'])}`);\n  };\n\n  handleHotkeyToggleHidden = () => {\n    this.handleToggleHidden(this.props.status);\n  };\n\n  handleHotkeyToggleSensitive = () => {\n    this.handleToggleMediaVisibility();\n  };\n\n  handleMoveUp = id => {\n    const { status, ancestorsIds, descendantsIds } = this.props;\n\n    if (id === status.get('id')) {\n      this._selectChild(ancestorsIds.size - 1, true);\n    } else {\n      let index = ancestorsIds.indexOf(id);\n\n      if (index === -1) {\n        index = descendantsIds.indexOf(id);\n        this._selectChild(ancestorsIds.size + index, true);\n      } else {\n        this._selectChild(index - 1, true);\n      }\n    }\n  };\n\n  handleMoveDown = id => {\n    const { status, ancestorsIds, descendantsIds } = this.props;\n\n    if (id === status.get('id')) {\n      this._selectChild(ancestorsIds.size + 1, false);\n    } else {\n      let index = ancestorsIds.indexOf(id);\n\n      if (index === -1) {\n        index = descendantsIds.indexOf(id);\n        this._selectChild(ancestorsIds.size + index + 2, false);\n      } else {\n        this._selectChild(index + 1, false);\n      }\n    }\n  };\n\n  _selectChild (index, align_top) {\n    const container = this.node;\n    const element = container.querySelectorAll('.focusable')[index];\n\n    if (element) {\n      if (align_top && container.scrollTop > element.offsetTop) {\n        element.scrollIntoView(true);\n      } else if (!align_top && container.scrollTop + container.clientHeight < element.offsetTop + element.offsetHeight) {\n        element.scrollIntoView(false);\n      }\n      element.focus();\n    }\n  }\n\n  renderChildren (list, ancestors) {\n    const { params: { statusId } } = this.props;\n\n    return list.map((id, i) => (\n      <StatusContainer\n        key={id}\n        id={id}\n        onMoveUp={this.handleMoveUp}\n        onMoveDown={this.handleMoveDown}\n        contextType='thread'\n        previousId={i > 0 ? list.get(i - 1) : undefined}\n        nextId={list.get(i + 1) || (ancestors && statusId)}\n        rootId={statusId}\n      />\n    ));\n  }\n\n  setContainerRef = c => {\n    this.node = c;\n  };\n\n  setStatusRef = c => {\n    this.statusNode = c;\n  };\n\n  _scrollStatusIntoView () {\n    const { status, multiColumn } = this.props;\n\n    if (status) {\n      requestIdleCallback(() => {\n        this.statusNode?.scrollIntoView(true);\n\n        // In the single-column interface, `scrollIntoView` will put the post behind the header,\n        // so compensate for that.\n        if (!multiColumn) {\n          const offset = document.querySelector('.column-header__wrapper')?.getBoundingClientRect()?.bottom;\n          if (offset) {\n            const scrollingElement = document.scrollingElement || document.body;\n            scrollingElement.scrollBy(0, -offset);\n          }\n        }\n      });\n    }\n  }\n\n  componentDidUpdate (prevProps) {\n    const { status, ancestorsIds } = this.props;\n\n    if (status && (ancestorsIds.size > prevProps.ancestorsIds.size || prevProps.status?.get('id') !== status.get('id'))) {\n      this._scrollStatusIntoView();\n    }\n  }\n\n  componentWillUnmount () {\n    detachFullscreenListener(this.onFullScreenChange);\n  }\n\n  onFullScreenChange = () => {\n    this.setState({ fullscreen: isFullscreen() });\n  };\n\n  shouldUpdateScroll = (prevRouterProps, { location }) => {\n    // Do not change scroll when opening a modal\n    if (location.state?.mastodonModalKey !== prevRouterProps?.location?.state?.mastodonModalKey) {\n      return false;\n    }\n\n    // Scroll to focused post if it is loaded\n    if (this.statusNode) {\n      return [0, this.statusNode.offsetTop];\n    }\n\n    // Do not scroll otherwise, `componentDidUpdate` will take care of that\n    return false;\n  };\n\n  render () {\n    let ancestors, descendants;\n    const { isLoading, status, ancestorsIds, descendantsIds, intl, domain, multiColumn, pictureInPicture } = this.props;\n    const { fullscreen } = this.state;\n\n    if (isLoading) {\n      return (\n        <Column>\n          <LoadingIndicator />\n        </Column>\n      );\n    }\n\n    if (status === null) {\n      return (\n        <BundleColumnError multiColumn={multiColumn} errorType='routing' />\n      );\n    }\n\n    if (ancestorsIds && ancestorsIds.size > 0) {\n      ancestors = <>{this.renderChildren(ancestorsIds, true)}</>;\n    }\n\n    if (descendantsIds && descendantsIds.size > 0) {\n      descendants = <>{this.renderChildren(descendantsIds)}</>;\n    }\n\n    const isLocal = status.getIn(['account', 'acct'], '').indexOf('@') === -1;\n    const isIndexable = !status.getIn(['account', 'noindex']);\n\n    const handlers = {\n      moveUp: this.handleHotkeyMoveUp,\n      moveDown: this.handleHotkeyMoveDown,\n      reply: this.handleHotkeyReply,\n      favourite: this.handleHotkeyFavourite,\n      boost: this.handleHotkeyBoost,\n      mention: this.handleHotkeyMention,\n      openProfile: this.handleHotkeyOpenProfile,\n      toggleHidden: this.handleHotkeyToggleHidden,\n      toggleSensitive: this.handleHotkeyToggleSensitive,\n      openMedia: this.handleHotkeyOpenMedia,\n    };\n\n    return (\n      <Column bindToDocument={!multiColumn} label={intl.formatMessage(messages.detailedStatus)}>\n        <ColumnHeader\n          showBackButton\n          multiColumn={multiColumn}\n          extraButton={(\n            <button type='button' className='column-header__button' title={intl.formatMessage(status.get('hidden') ? messages.revealAll : messages.hideAll)} aria-label={intl.formatMessage(status.get('hidden') ? messages.revealAll : messages.hideAll)} onClick={this.handleToggleAll}><Icon id={status.get('hidden') ? 'eye-slash' : 'eye'} icon={status.get('hidden') ? VisibilityOffIcon : VisibilityIcon} /></button>\n          )}\n        />\n\n        <ScrollContainer scrollKey='thread' shouldUpdateScroll={this.shouldUpdateScroll}>\n          <div className={classNames('scrollable', { fullscreen })} ref={this.setContainerRef}>\n            {ancestors}\n\n            <HotKeys handlers={handlers}>\n              <div className={classNames('focusable', 'detailed-status__wrapper', `detailed-status__wrapper-${status.get('visibility')}`)} tabIndex={0} aria-label={textForScreenReader(intl, status, false)} ref={this.setStatusRef}>\n                <DetailedStatus\n                  key={`details-${status.get('id')}`}\n                  status={status}\n                  onOpenVideo={this.handleOpenVideo}\n                  onOpenMedia={this.handleOpenMedia}\n                  onToggleHidden={this.handleToggleHidden}\n                  onTranslate={this.handleTranslate}\n                  domain={domain}\n                  showMedia={this.state.showMedia}\n                  onToggleMediaVisibility={this.handleToggleMediaVisibility}\n                  pictureInPicture={pictureInPicture}\n                />\n\n                <ActionBar\n                  key={`action-bar-${status.get('id')}`}\n                  status={status}\n                  onReply={this.handleReplyClick}\n                  onFavourite={this.handleFavouriteClick}\n                  onReblog={this.handleReblogClick}\n                  onBookmark={this.handleBookmarkClick}\n                  onDelete={this.handleDeleteClick}\n                  onEdit={this.handleEditClick}\n                  onDirect={this.handleDirectClick}\n                  onMention={this.handleMentionClick}\n                  onMute={this.handleMuteClick}\n                  onUnmute={this.handleUnmuteClick}\n                  onMuteConversation={this.handleConversationMuteClick}\n                  onBlock={this.handleBlockClick}\n                  onUnblock={this.handleUnblockClick}\n                  onBlockDomain={this.handleBlockDomainClick}\n                  onUnblockDomain={this.handleUnblockDomainClick}\n                  onReport={this.handleReport}\n                  onPin={this.handlePin}\n                  onEmbed={this.handleEmbed}\n                />\n              </div>\n            </HotKeys>\n\n            {descendants}\n          </div>\n        </ScrollContainer>\n\n        <Helmet>\n          <title>{titleFromStatus(intl, status)}</title>\n          <meta name='robots' content={(isLocal && isIndexable) ? 'all' : 'noindex'} />\n          <link rel='canonical' href={status.get('url')} />\n        </Helmet>\n      </Column>\n    );\n  }\n\n}\n\nexport default withRouter(injectIntl(connect(makeMapStateToProps)(withIdentity(Status))));\n"],"sourceRoot":""}